! Clarion SCM Interfaces
! Include file generated by HIDL Version 1.3 from ws_store.ecm
! *** Not to be hand edited (changes will be lost on re-generation) ***

  OMIT('EndOfInclude',_ws_store_I_)
_ws_store_I_ EQUATE(1)

  INCLUDE('SCM.INT'),ONCE

cppClientKVPair  INTERFACE(cppInterface),COM
setKey           PROCEDURE(CONST *CSTRING Key),PROC
setValue         PROCEDURE(CONST *CSTRING Value),PROC
getKey           PROCEDURE(),*CSTRING,PROC
getValue         PROCEDURE(),*CSTRING,PROC
    END



cppClientNamespaceSet  INTERFACE(cppInterface),COM
setNamespace     PROCEDURE(CONST *CSTRING Namespace),PROC
setEntries       PROCEDURE(CONST *CSTRING Entries),PROC
getNamespace     PROCEDURE(),*CSTRING,PROC
getEntries       PROCEDURE(),*CSTRING,PROC
    END



cppClientListKeysRequest  INTERFACE(cppInterface),COM
setStoreName     PROCEDURE(CONST *CSTRING StoreName),PROC
setNamespace     PROCEDURE(CONST *CSTRING Namespace),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
    END



cppClientListKeysResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getStoreName     PROCEDURE(),*CSTRING,PROC
getNamespace     PROCEDURE(),*CSTRING,PROC
getKeySet        PROCEDURE(),*CSTRING,PROC
    END



cppClientListNamespacesRequest  INTERFACE(cppInterface),COM
setStoreName     PROCEDURE(CONST *CSTRING StoreName),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
    END



cppClientListNamespacesResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getStoreName     PROCEDURE(),*CSTRING,PROC
getNamespaces    PROCEDURE(),*CSTRING,PROC
    END



cppClientDeleteNamespaceRequest  INTERFACE(cppInterface),COM
setStoreName     PROCEDURE(CONST *CSTRING StoreName),PROC
setNamespace     PROCEDURE(CONST *CSTRING Namespace),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
setTargetUser    PROCEDURE(CONST *CSTRING TargetUser),PROC
    END



cppClientDeleteNamespaceResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getSuccess       PROCEDURE(),CBOOL,PROC
    END



cppClientDeleteRequest  INTERFACE(cppInterface),COM
setStoreName     PROCEDURE(CONST *CSTRING StoreName),PROC
setNamespace     PROCEDURE(CONST *CSTRING Namespace),PROC
setKey           PROCEDURE(CONST *CSTRING Key),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
setTargetUser    PROCEDURE(CONST *CSTRING TargetUser),PROC
    END



cppClientDeleteResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getSuccess       PROCEDURE(),CBOOL,PROC
    END



cppClientFetchRequest  INTERFACE(cppInterface),COM
setStoreName     PROCEDURE(CONST *CSTRING StoreName),PROC
setNamespace     PROCEDURE(CONST *CSTRING Namespace),PROC
setKey           PROCEDURE(CONST *CSTRING Key),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
    END



cppClientFetchResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getValue         PROCEDURE(),*CSTRING,PROC
    END



cppClientFetchAllRequest  INTERFACE(cppInterface),COM
setStoreName     PROCEDURE(CONST *CSTRING StoreName),PROC
setNamespace     PROCEDURE(CONST *CSTRING Namespace),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
    END



cppClientFetchKeyMDRequest  INTERFACE(cppInterface),COM
setStoreName     PROCEDURE(CONST *CSTRING StoreName),PROC
setNamespace     PROCEDURE(CONST *CSTRING Namespace),PROC
setKey           PROCEDURE(CONST *CSTRING Key),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
    END



cppClientFetchKeyMDResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getStoreName     PROCEDURE(),*CSTRING,PROC
getNamespace     PROCEDURE(),*CSTRING,PROC
getKey           PROCEDURE(),*CSTRING,PROC
getPairs         PROCEDURE(),*CSTRING,PROC
    END



cppClientFetchAllResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getNamespace     PROCEDURE(),*CSTRING,PROC
getPairs         PROCEDURE(),*CSTRING,PROC
    END



cppClientSetRequest  INTERFACE(cppInterface),COM
setStoreName     PROCEDURE(CONST *CSTRING StoreName),PROC
setNamespace     PROCEDURE(CONST *CSTRING Namespace),PROC
setKey           PROCEDURE(CONST *CSTRING Key),PROC
setValue         PROCEDURE(CONST *CSTRING Value),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
    END



cppClientSetResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getSuccess       PROCEDURE(),CBOOL,PROC
    END



cppClientCreateStoreRequest  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setUserSpecific  PROCEDURE(CBOOL UserSpecific),PROC
    END



cppClientCreateStoreResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getName          PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getOwner         PROCEDURE(),*CSTRING,PROC
    END



cppClientwsstorePingRequest  INTERFACE(cppInterface),COM
    END



cppClientwsstorePingResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
    END



cppClientwsstoreEvents INTERFACE(cppInterface),COM
onCreateStoreComplete PROCEDURE(*cppClientCreateStoreResponse resp),PROC
onCreateStoreError PROCEDURE(*cppClientCreateStoreResponse resp),PROC
onDeleteComplete PROCEDURE(*cppClientDeleteResponse resp),PROC
onDeleteError PROCEDURE(*cppClientDeleteResponse resp),PROC
onDeleteNamespaceComplete PROCEDURE(*cppClientDeleteNamespaceResponse resp),PROC
onDeleteNamespaceError PROCEDURE(*cppClientDeleteNamespaceResponse resp),PROC
onFetchComplete PROCEDURE(*cppClientFetchResponse resp),PROC
onFetchError PROCEDURE(*cppClientFetchResponse resp),PROC
onFetchAllComplete PROCEDURE(*cppClientFetchAllResponse resp),PROC
onFetchAllError PROCEDURE(*cppClientFetchAllResponse resp),PROC
onFetchKeyMetadataComplete PROCEDURE(*cppClientFetchKeyMDResponse resp),PROC
onFetchKeyMetadataError PROCEDURE(*cppClientFetchKeyMDResponse resp),PROC
onListKeysComplete PROCEDURE(*cppClientListKeysResponse resp),PROC
onListKeysError PROCEDURE(*cppClientListKeysResponse resp),PROC
onListNamespacesComplete PROCEDURE(*cppClientListNamespacesResponse resp),PROC
onListNamespacesError PROCEDURE(*cppClientListNamespacesResponse resp),PROC
onPingComplete PROCEDURE(*cppClientwsstorePingResponse resp),PROC
onPingError PROCEDURE(*cppClientwsstorePingResponse resp),PROC
onSetComplete PROCEDURE(*cppClientSetResponse resp),PROC
onSetError PROCEDURE(*cppClientSetResponse resp),PROC

 END

cppClientwsstore INTERFACE(cppInterface),COM
setProxyAddress  PROCEDURE(CONST *CSTRING address),PROC
addServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
removeServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
setUsernameToken  PROCEDURE(CONST *CSTRING Username,CONST *CSTRING Password,CONST *CSTRING Realm ),PROC
createCreateStoreRequest  PROCEDURE(),*cppClientCreateStoreRequest,PROC
CreateStore  PROCEDURE(*cppClientCreateStoreRequest request),*cppClientCreateStoreResponse,PROC
async_CreateStore  PROCEDURE(*cppClientCreateStoreRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createDeleteRequest  PROCEDURE(),*cppClientDeleteRequest,PROC
Delete  PROCEDURE(*cppClientDeleteRequest request),*cppClientDeleteResponse,PROC
async_Delete  PROCEDURE(*cppClientDeleteRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createDeleteNamespaceRequest  PROCEDURE(),*cppClientDeleteNamespaceRequest,PROC
DeleteNamespace  PROCEDURE(*cppClientDeleteNamespaceRequest request),*cppClientDeleteNamespaceResponse,PROC
async_DeleteNamespace  PROCEDURE(*cppClientDeleteNamespaceRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createFetchRequest  PROCEDURE(),*cppClientFetchRequest,PROC
Fetch  PROCEDURE(*cppClientFetchRequest request),*cppClientFetchResponse,PROC
async_Fetch  PROCEDURE(*cppClientFetchRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createFetchAllRequest  PROCEDURE(),*cppClientFetchAllRequest,PROC
FetchAll  PROCEDURE(*cppClientFetchAllRequest request),*cppClientFetchAllResponse,PROC
async_FetchAll  PROCEDURE(*cppClientFetchAllRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createFetchKeyMetadataRequest  PROCEDURE(),*cppClientFetchKeyMDRequest,PROC
FetchKeyMetadata  PROCEDURE(*cppClientFetchKeyMDRequest request),*cppClientFetchKeyMDResponse,PROC
async_FetchKeyMetadata  PROCEDURE(*cppClientFetchKeyMDRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createListKeysRequest  PROCEDURE(),*cppClientListKeysRequest,PROC
ListKeys  PROCEDURE(*cppClientListKeysRequest request),*cppClientListKeysResponse,PROC
async_ListKeys  PROCEDURE(*cppClientListKeysRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createListNamespacesRequest  PROCEDURE(),*cppClientListNamespacesRequest,PROC
ListNamespaces  PROCEDURE(*cppClientListNamespacesRequest request),*cppClientListNamespacesResponse,PROC
async_ListNamespaces  PROCEDURE(*cppClientListNamespacesRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createPingRequest  PROCEDURE(),*cppClientwsstorePingRequest,PROC
Ping  PROCEDURE(*cppClientwsstorePingRequest request),*cppClientwsstorePingResponse,PROC
async_Ping  PROCEDURE(*cppClientwsstorePingRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC
createSetRequest  PROCEDURE(),*cppClientSetRequest,PROC
Set  PROCEDURE(*cppClientSetRequest request),*cppClientSetResponse,PROC
async_Set  PROCEDURE(*cppClientSetRequest request, *cppClientwsstoreEvents events,*cppInterface State),PROC

  END




  MAP
    MODULE('ws_store')
      createwsstoreClient (),*cppClientwsstore, pascal, raw, name('_createwsstoreClient@0')
    END

  END


EndOfInclude
