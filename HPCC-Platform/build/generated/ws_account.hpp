// *** Include file generated by HIDL Version 1.3 from ws_account.ecm ***
// *** Not to be hand edited (changes will be lost on re-generation) ***

#ifndef ws_account_SCM_INCL
#define ws_account_SCM_INCL

#include "esp.hpp"



#include "xslprocessor.hpp"

interface IConstUpdateUserInputRequest : extends IEspRequest
{
};

interface IEspUpdateUserInputRequest : extends IConstUpdateUserInputRequest
{
	virtual void copy(IConstUpdateUserInputRequest &from)=0;
};

interface IClientUpdateUserInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstUpdateUserInputResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
};

interface IEspUpdateUserInputResponse : extends IConstUpdateUserInputResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstUpdateUserInputResponse &from)=0;
};

interface IClientUpdateUserInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstMyAccountRequest : extends IEspRequest
{
};

interface IEspMyAccountRequest : extends IConstMyAccountRequest
{
	virtual void copy(IConstMyAccountRequest &from)=0;
};

interface IClientMyAccountRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstMyAccountResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual const char * getFirstName()=0;
	virtual const char * getLastName()=0;
	virtual const char * getPasswordExpiration()=0;
	virtual int getPasswordDaysRemaining()=0;
	virtual int getPasswordExpirationWarningDays()=0;
	virtual const char * getEmployeeID()=0;
	virtual const char * getDistinguishedName()=0;
};

interface IEspMyAccountResponse : extends IConstMyAccountResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setFirstName(const char * val)=0;
	virtual void setLastName(const char * val)=0;
	virtual void setPasswordExpiration(const char * val)=0;
	virtual void setPasswordDaysRemaining(int val)=0;
	virtual void setPasswordExpirationWarningDays(int val)=0;
	virtual void setEmployeeID(const char * val)=0;
	virtual void setDistinguishedName(const char * val)=0;
	virtual void copy(IConstMyAccountResponse &from)=0;
};

interface IClientMyAccountResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual const char * getFirstName()=0;
	virtual const char * getLastName()=0;
	virtual const char * getPasswordExpiration()=0;
	virtual int getPasswordDaysRemaining()=0;
	virtual int getPasswordExpirationWarningDays()=0;
	virtual const char * getEmployeeID()=0;
	virtual const char * getDistinguishedName()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstUpdateUserRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
	virtual const char * getOldpass()=0;
	virtual const char * getNewpass1()=0;
	virtual const char * getNewpass2()=0;
};

interface IEspUpdateUserRequest : extends IConstUpdateUserRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void setOldpass(const char * val)=0;
	virtual void setNewpass1(const char * val)=0;
	virtual void setNewpass2(const char * val)=0;
	virtual void copy(IConstUpdateUserRequest &from)=0;
};

interface IClientUpdateUserRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
	virtual void setOldpass(const char * val)=0;
	virtual void setNewpass1(const char * val)=0;
	virtual void setNewpass2(const char * val)=0;
};



interface IConstUpdateUserResponse : extends IEspResponse
{
	virtual int getRetcode()=0;
	virtual const char * getMessage()=0;
};

interface IEspUpdateUserResponse : extends IConstUpdateUserResponse
{
	virtual void setRetcode(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstUpdateUserResponse &from)=0;
};

interface IClientUpdateUserResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getRetcode()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstVerifyUserRequest : extends IEspRequest
{
	virtual const char * getApplication()=0;
	virtual const char * getVersion()=0;
};

interface IEspVerifyUserRequest : extends IConstVerifyUserRequest
{
	virtual void setApplication(const char * val)=0;
	virtual void setVersion(const char * val)=0;
	virtual void copy(IConstVerifyUserRequest &from)=0;
};

interface IClientVerifyUserRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setApplication(const char * val)=0;
	virtual void setVersion(const char * val)=0;
};



interface IConstVerifyUserResponse : extends IEspResponse
{
	virtual int getRetcode()=0;
};

interface IEspVerifyUserResponse : extends IConstVerifyUserResponse
{
	virtual void setRetcode(int val)=0;
	virtual void copy(IConstVerifyUserResponse &from)=0;
};

interface IClientVerifyUserResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getRetcode()=0;

	virtual const IMultiException& getExceptions()=0;
};



//Kevin/russ does this method need feature level check?
interface IConstws_accountPingRequest : extends IEspRequest
{
};

interface IEspws_accountPingRequest : extends IConstws_accountPingRequest
{
	virtual void copy(IConstws_accountPingRequest &from)=0;
};

interface IClientws_accountPingRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};

interface IConstws_accountPingResponse : extends IEspResponse
{
};

interface IEspws_accountPingResponse : extends IConstws_accountPingResponse
{
	virtual void copy(IConstws_accountPingResponse &from)=0;
};

interface IClientws_accountPingResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
};

interface IEspws_account : extends IEspService
{
	virtual bool onMyAccount(IEspContext &context, IEspMyAccountRequest &req, IEspMyAccountResponse &resp)=0;
	virtual bool onPing(IEspContext &context, IEspws_accountPingRequest &req, IEspws_accountPingResponse &resp)=0;
	virtual bool onUpdateUser(IEspContext &context, IEspUpdateUserRequest &req, IEspUpdateUserResponse &resp)=0;
	virtual bool onUpdateUserInput(IEspContext &context, IEspUpdateUserInputRequest &req, IEspUpdateUserInputResponse &resp)=0;
	virtual bool onVerifyUser(IEspContext &context, IEspVerifyUserRequest &req, IEspVerifyUserResponse &resp)=0;
};

interface IClientws_accountEvents : extends IInterface
{
	virtual int onMyAccountComplete(IClientMyAccountResponse *resp,IInterface* state)=0;
	virtual int onMyAccountError(IClientMyAccountResponse *resp,IInterface* state)=0;
	virtual int onPingComplete(IClientws_accountPingResponse *resp,IInterface* state)=0;
	virtual int onPingError(IClientws_accountPingResponse *resp,IInterface* state)=0;
	virtual int onUpdateUserComplete(IClientUpdateUserResponse *resp,IInterface* state)=0;
	virtual int onUpdateUserError(IClientUpdateUserResponse *resp,IInterface* state)=0;
	virtual int onUpdateUserInputComplete(IClientUpdateUserInputResponse *resp,IInterface* state)=0;
	virtual int onUpdateUserInputError(IClientUpdateUserInputResponse *resp,IInterface* state)=0;
	virtual int onVerifyUserComplete(IClientVerifyUserResponse *resp,IInterface* state)=0;
	virtual int onVerifyUserError(IClientVerifyUserResponse *resp,IInterface* state)=0;
};

interface IClientws_account : extends IInterface
{
	virtual void setProxyAddress(const char *address)=0;
	virtual void addServiceUrl(const char *url)=0;
	virtual void removeServiceUrl(const char *url)=0;
	virtual void setUsernameToken(const char *userName,const char *passWord,const char *realm)=0;
	virtual void setAction(const char *action)=0;

	virtual IClientMyAccountRequest * createMyAccountRequest()=0;
	virtual IClientMyAccountResponse * MyAccount(IClientMyAccountRequest *request)=0;
	virtual void async_MyAccount(IClientMyAccountRequest *request, IClientws_accountEvents *events,IInterface* state=0)=0;

	virtual IClientws_accountPingRequest * createPingRequest()=0;
	virtual IClientws_accountPingResponse * Ping(IClientws_accountPingRequest *request)=0;
	virtual void async_Ping(IClientws_accountPingRequest *request, IClientws_accountEvents *events,IInterface* state=0)=0;

	virtual IClientUpdateUserRequest * createUpdateUserRequest()=0;
	virtual IClientUpdateUserResponse * UpdateUser(IClientUpdateUserRequest *request)=0;
	virtual void async_UpdateUser(IClientUpdateUserRequest *request, IClientws_accountEvents *events,IInterface* state=0)=0;

	virtual IClientUpdateUserInputRequest * createUpdateUserInputRequest()=0;
	virtual IClientUpdateUserInputResponse * UpdateUserInput(IClientUpdateUserInputRequest *request)=0;
	virtual void async_UpdateUserInput(IClientUpdateUserInputRequest *request, IClientws_accountEvents *events,IInterface* state=0)=0;

	virtual IClientVerifyUserRequest * createVerifyUserRequest()=0;
	virtual IClientVerifyUserResponse * VerifyUser(IClientVerifyUserRequest *request)=0;
	virtual void async_VerifyUser(IClientVerifyUserRequest *request, IClientws_accountEvents *events,IInterface* state=0)=0;


	virtual IClientMyAccountResponse *MyAccountFn()=0;

	virtual IClientws_accountPingResponse *PingFn()=0;

	virtual IClientUpdateUserResponse *UpdateUserFn(const char * username_, const char * oldpass_, const char * newpass1_, const char * newpass2_)=0;

	virtual IClientUpdateUserInputResponse *UpdateUserInputFn()=0;

	virtual IClientVerifyUserResponse *VerifyUserFn(const char * application_, const char * version_)=0;
};



#ifndef ws_account_API
#define ws_account_API
#endif //ws_account_API



extern "C" ws_account_API IClientws_account * createws_accountClient();


extern "C"  IEspUpdateUserInputRequest *createUpdateUserInputRequest(const char *serv=NULL);
extern "C"  IClientUpdateUserInputRequest *createClientUpdateUserInputRequest(const char *serv=NULL);
extern "C"  IEspUpdateUserInputResponse *createUpdateUserInputResponse(const char *serv=NULL);
extern "C"  IClientUpdateUserInputResponse *createClientUpdateUserInputResponse(const char *serv=NULL);
extern "C"  IEspMyAccountRequest *createMyAccountRequest(const char *serv=NULL);
extern "C"  IClientMyAccountRequest *createClientMyAccountRequest(const char *serv=NULL);
extern "C"  IEspMyAccountResponse *createMyAccountResponse(const char *serv=NULL);
extern "C"  IClientMyAccountResponse *createClientMyAccountResponse(const char *serv=NULL);
extern "C"  IEspUpdateUserRequest *createUpdateUserRequest(const char *serv=NULL);
extern "C"  IClientUpdateUserRequest *createClientUpdateUserRequest(const char *serv=NULL);
extern "C"  IEspUpdateUserResponse *createUpdateUserResponse(const char *serv=NULL);
extern "C"  IClientUpdateUserResponse *createClientUpdateUserResponse(const char *serv=NULL);
extern "C"  IEspVerifyUserRequest *createVerifyUserRequest(const char *serv=NULL);
extern "C"  IClientVerifyUserRequest *createClientVerifyUserRequest(const char *serv=NULL);
extern "C"  IEspVerifyUserResponse *createVerifyUserResponse(const char *serv=NULL);
extern "C"  IClientVerifyUserResponse *createClientVerifyUserResponse(const char *serv=NULL);
extern "C"  IEspws_accountPingRequest *createws_accountPingRequest(const char *serv=NULL);
extern "C"  IClientws_accountPingRequest *createClientws_accountPingRequest(const char *serv=NULL);
extern "C"  IEspws_accountPingResponse *createws_accountPingResponse(const char *serv=NULL);
extern "C"  IClientws_accountPingResponse *createClientws_accountPingResponse(const char *serv=NULL);

#endif // _ws_account_SCM_INCL
//end
