! Clarion SCM Interfaces
! Include file generated by HIDL Version 1.3 from ecllib.ecm
! *** Not to be hand edited (changes will be lost on re-generation) ***

  OMIT('EndOfInclude',_ecllib_I_)
_ecllib_I_ EQUATE(1)

  INCLUDE('SCM.INT'),ONCE


  map
    module('instant ecl client')
      createInstantEclClient procedure, *cppClientInstantEcl, pascal, raw, name('_createInstantEclClient@0')
    end
  end


InstantEclState EQUATE(UNSIGNED)
  ITEMIZE,PRE(InstantEclState)
ECL_OK	EQUATE(0)
ECL_CONNECTION_ERROR	EQUATE(1)
ECL_NORMAL_ERROR	EQUATE(2)
	END

cppClientInstantEclResp  INTERFACE(cppInterface),COM
getRequestId     PROCEDURE(),ULONG,PROC
getClientValue   PROCEDURE(),ULONG,PROC
getState         PROCEDURE(),cppnstantEclState,PROC
getResultsXML    PROCEDURE(),*CSTRING,PROC
END

cppClientInstantEclRequest  INTERFACE(cppInterface),COM
setUser          PROCEDURE(CONST *CSTRING user),PROC
setUserToken     PROCEDURE(CONST *CSTRING user, CONST *CSTRING password),PROC
setEclServer     PROCEDURE(CONST *CSTRING eclserver),PROC
setCluster       PROCEDURE(CONST *CSTRING cluster),PROC
setClientValue   PROCEDURE(ULONG cv),PROC
setEclText       PROCEDURE(CONST *CSTRING text),PROC
END

cppClientInstantEclEvents  INTERFACE(cppInterface),COM
onComplete       PROCEDURE(*cppClientInstantEclResp resp),LONG,PROC
onError          PROCEDURE(*cppClientInstantEclResp resp),LONG,PROC
END

cppClientInstantEcl  INTERFACE(cppInterface),COM
addServiceUrl    PROCEDURE(CONST *CSTRING url),PROC
removeServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
createRequest    PROCEDURE(),*cppClientInstantEclRequest,PROC
runEcl           PROCEDURE(*cppClientInstantEclRequest request),*cppClientInstantEclResp,PROC
runEclAsync      PROCEDURE(*cppClientInstantEclRequest request, *cppClientInstantEclEvents events),PROC
END


  MAP
    MODULE('ecllib')
    END

  END


EndOfInclude
