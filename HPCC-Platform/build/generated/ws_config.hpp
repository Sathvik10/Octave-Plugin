// *** Include file generated by HIDL Version 1.3 from ws_config.ecm ***
// *** Not to be hand edited (changes will be lost on re-generation) ***

#ifndef ws_config_SCM_INCL
#define ws_config_SCM_INCL

#include "esp.hpp"




interface IConstConfigAccessRequest : extends IEspRequest
{
};

interface IEspConfigAccessRequest : extends IConstConfigAccessRequest
{
	virtual void copy(IConstConfigAccessRequest &from)=0;
};

interface IClientConfigAccessRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstConfigAccessResponse : extends IEspResponse
{
	virtual int getAccessLevel()=0;
};

interface IEspConfigAccessResponse : extends IConstConfigAccessResponse
{
	virtual void setAccessLevel(int val)=0;
	virtual void copy(IConstConfigAccessResponse &from)=0;
};

interface IClientConfigAccessResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getAccessLevel()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstws_configPingRequest : extends IEspRequest
{
};

interface IEspws_configPingRequest : extends IConstws_configPingRequest
{
	virtual void copy(IConstws_configPingRequest &from)=0;
};

interface IClientws_configPingRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};

interface IConstws_configPingResponse : extends IEspResponse
{
};

interface IEspws_configPingResponse : extends IConstws_configPingResponse
{
	virtual void copy(IConstws_configPingResponse &from)=0;
};

interface IClientws_configPingResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
};

interface IEspws_config : extends IEspService
{
	virtual bool onGetConfigAccess(IEspContext &context, IEspConfigAccessRequest &req, IEspConfigAccessResponse &resp)=0;
	virtual bool onPing(IEspContext &context, IEspws_configPingRequest &req, IEspws_configPingResponse &resp)=0;
};

interface IClientws_configEvents : extends IInterface
{
	virtual int onGetConfigAccessComplete(IClientConfigAccessResponse *resp,IInterface* state)=0;
	virtual int onGetConfigAccessError(IClientConfigAccessResponse *resp,IInterface* state)=0;
	virtual int onPingComplete(IClientws_configPingResponse *resp,IInterface* state)=0;
	virtual int onPingError(IClientws_configPingResponse *resp,IInterface* state)=0;
};

interface IClientws_config : extends IInterface
{
	virtual void setProxyAddress(const char *address)=0;
	virtual void addServiceUrl(const char *url)=0;
	virtual void removeServiceUrl(const char *url)=0;
	virtual void setUsernameToken(const char *userName,const char *passWord,const char *realm)=0;
	virtual void setAction(const char *action)=0;

	virtual IClientConfigAccessRequest * createGetConfigAccessRequest()=0;
	virtual IClientConfigAccessResponse * GetConfigAccess(IClientConfigAccessRequest *request)=0;
	virtual void async_GetConfigAccess(IClientConfigAccessRequest *request, IClientws_configEvents *events,IInterface* state=0)=0;

	virtual IClientws_configPingRequest * createPingRequest()=0;
	virtual IClientws_configPingResponse * Ping(IClientws_configPingRequest *request)=0;
	virtual void async_Ping(IClientws_configPingRequest *request, IClientws_configEvents *events,IInterface* state=0)=0;


	virtual IClientConfigAccessResponse *GetConfigAccessFn()=0;

	virtual IClientws_configPingResponse *PingFn()=0;
};




#ifndef ws_config_API
#define ws_config_API
#endif //ws_config_API


extern "C" ws_config_API IClientws_config * createws_configClient();

extern "C"  IEspConfigAccessRequest *createConfigAccessRequest(const char *serv=NULL);
extern "C"  IClientConfigAccessRequest *createClientConfigAccessRequest(const char *serv=NULL);
extern "C"  IEspConfigAccessResponse *createConfigAccessResponse(const char *serv=NULL);
extern "C"  IClientConfigAccessResponse *createClientConfigAccessResponse(const char *serv=NULL);
extern "C"  IEspws_configPingRequest *createws_configPingRequest(const char *serv=NULL);
extern "C"  IClientws_configPingRequest *createClientws_configPingRequest(const char *serv=NULL);
extern "C"  IEspws_configPingResponse *createws_configPingResponse(const char *serv=NULL);
extern "C"  IClientws_configPingResponse *createClientws_configPingResponse(const char *serv=NULL);

#endif // _ws_config_SCM_INCL
//end
