// *** Include file generated by HIDL Version 1.3 from ws_workunits.ecm ***
// *** Not to be hand edited (changes will be lost on re-generation) ***

#ifndef ws_workunits_SCM_INCL
#define ws_workunits_SCM_INCL

#include "esp.hpp"



#include "xslprocessor.hpp"
//  ===========================================================================

#include "common_esp.ipp"

//The ESPenum ECLWUActions has to be matched by the ECLWUActionNames[] in ws_workunitsService.cpp.
enum CECLWUActions { ECLWUActions_Undefined=-1,CECLWUActions_Abort, CECLWUActions_Delete, CECLWUActions_EventDeschedule, CECLWUActions_EventReschedule, CECLWUActions_Pause, CECLWUActions_PauseNow, CECLWUActions_Protect, CECLWUActions_Unprotect, CECLWUActions_Restore, CECLWUActions_Resume, CECLWUActions_SetToFailed, };
typedef ArrayOf<CECLWUActions> ECLWUActionsArray;


enum CEclDefinitionActions { EclDefinitionActions_Undefined=-1,CEclDefinitionActions_SyntaxCheck, CEclDefinitionActions_Deploy, CEclDefinitionActions_Publish, };
typedef ArrayOf<CEclDefinitionActions> EclDefinitionActionsArray;


interface IConstECLException : extends IEspStruct
{
	virtual const char * getSource()=0;
	virtual const char * getSeverity()=0;
	virtual bool getCode_isNull()=0;
	virtual int getCode()=0;
	virtual const char * getMessage()=0;
	virtual const char * getFileName()=0;
	virtual bool getLineNo_isNull()=0;
	virtual int getLineNo()=0;
	virtual bool getColumn_isNull()=0;
	virtual int getColumn()=0;
	virtual bool getActivity_isNull()=0;
	virtual int getActivity()=0;
	virtual const char * getScope()=0;
	virtual bool getPriority_isNull()=0;
	virtual int getPriority()=0;
};

interface IEspECLException : extends IConstECLException
{
	virtual void setSource(const char * val)=0;
	virtual void setSeverity(const char * val)=0;
	virtual void setCode_null()=0;
	virtual void setCode(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setLineNo_null()=0;
	virtual void setLineNo(int val)=0;
	virtual void setColumn_null()=0;
	virtual void setColumn(int val)=0;
	virtual void setActivity_null()=0;
	virtual void setActivity(int val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setPriority_null()=0;
	virtual void setPriority(int val)=0;
	virtual void copy(IConstECLException &from)=0;
};

interface IClientECLException : extends IInterface
{
	virtual void setSource(const char * val)=0;
	virtual void setSeverity(const char * val)=0;
	virtual void setCode_null()=0;
	virtual void setCode(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setLineNo_null()=0;
	virtual void setLineNo(int val)=0;
	virtual void setColumn_null()=0;
	virtual void setColumn(int val)=0;
	virtual void setActivity_null()=0;
	virtual void setActivity(int val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setPriority_null()=0;
	virtual void setPriority(int val)=0;
	virtual const char * getSource()=0;
	virtual const char * getSeverity()=0;
	virtual bool getCode_isNull()=0;
	virtual int getCode()=0;
	virtual const char * getMessage()=0;
	virtual const char * getFileName()=0;
	virtual bool getLineNo_isNull()=0;
	virtual int getLineNo()=0;
	virtual bool getColumn_isNull()=0;
	virtual int getColumn()=0;
	virtual bool getActivity_isNull()=0;
	virtual int getActivity()=0;
	virtual const char * getScope()=0;
	virtual bool getPriority_isNull()=0;
	virtual int getPriority()=0;
};


//  ===========================================================================
interface IConstECLSchemaItem : extends IEspStruct
{
	virtual const char * getColumnName()=0;
	virtual const char * getColumnType()=0;
	virtual bool getColumnTypeCode_isNull()=0;
	virtual int getColumnTypeCode()=0;
	virtual bool getIsConditional_isNull()=0;
	virtual bool getIsConditional()=0;
};

interface IEspECLSchemaItem : extends IConstECLSchemaItem
{
	virtual void setColumnName(const char * val)=0;
	virtual void setColumnType(const char * val)=0;
	virtual void setColumnTypeCode_null()=0;
	virtual void setColumnTypeCode(int val)=0;
	virtual void setIsConditional_null()=0;
	virtual void setIsConditional(bool val)=0;
	virtual void copy(IConstECLSchemaItem &from)=0;
};

interface IClientECLSchemaItem : extends IInterface
{
	virtual void setColumnName(const char * val)=0;
	virtual void setColumnType(const char * val)=0;
	virtual void setColumnTypeCode_null()=0;
	virtual void setColumnTypeCode(int val)=0;
	virtual void setIsConditional_null()=0;
	virtual void setIsConditional(bool val)=0;
	virtual const char * getColumnName()=0;
	virtual const char * getColumnType()=0;
	virtual bool getColumnTypeCode_isNull()=0;
	virtual int getColumnTypeCode()=0;
	virtual bool getIsConditional_isNull()=0;
	virtual bool getIsConditional()=0;
};


//  ===========================================================================
interface IConstECLResult : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual bool getSequence_isNull()=0;
	virtual int getSequence()=0;
	virtual const char * getValue()=0;
	virtual const char * getLink()=0;
	virtual const char * getFileName()=0;
	virtual bool getIsSupplied_isNull()=0;
	virtual bool getIsSupplied()=0;
	virtual bool getShowFileContent_isNull()=0;
	virtual bool getShowFileContent()=0;
	virtual bool getTotal_isNull()=0;
	virtual __int64 getTotal()=0;
	virtual IArrayOf<IConstECLSchemaItem> & getECLSchemas()=0;
	virtual const char * getXmlSchema()=0;
};

interface IEspECLResult : extends IConstECLResult
{
	virtual void setName(const char * val)=0;
	virtual void setSequence_null()=0;
	virtual void setSequence(int val)=0;
	virtual void setValue(const char * val)=0;
	virtual void setLink(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setIsSupplied_null()=0;
	virtual void setIsSupplied(bool val)=0;
	virtual void setShowFileContent_null()=0;
	virtual void setShowFileContent(bool val)=0;
	virtual void setTotal_null()=0;
	virtual void setTotal(__int64 val)=0;
	virtual void setECLSchemas(IArrayOf<IEspECLSchemaItem> &val)=0;
	virtual void setECLSchemas(IArrayOf<IConstECLSchemaItem> &val)=0;
	virtual void setXmlSchema(const char * val)=0;
	virtual void copy(IConstECLResult &from)=0;
};

interface IClientECLResult : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setSequence_null()=0;
	virtual void setSequence(int val)=0;
	virtual void setValue(const char * val)=0;
	virtual void setLink(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setIsSupplied_null()=0;
	virtual void setIsSupplied(bool val)=0;
	virtual void setShowFileContent_null()=0;
	virtual void setShowFileContent(bool val)=0;
	virtual void setTotal_null()=0;
	virtual void setTotal(__int64 val)=0;
	virtual void setECLSchemas(IArrayOf<IEspECLSchemaItem> &val)=0;
	virtual void setECLSchemas(IArrayOf<IConstECLSchemaItem> &val)=0;
	virtual void setXmlSchema(const char * val)=0;
	virtual const char * getName()=0;
	virtual bool getSequence_isNull()=0;
	virtual int getSequence()=0;
	virtual const char * getValue()=0;
	virtual const char * getLink()=0;
	virtual const char * getFileName()=0;
	virtual bool getIsSupplied_isNull()=0;
	virtual bool getIsSupplied()=0;
	virtual bool getShowFileContent_isNull()=0;
	virtual bool getShowFileContent()=0;
	virtual bool getTotal_isNull()=0;
	virtual __int64 getTotal()=0;
	virtual IArrayOf<IConstECLSchemaItem> & getECLSchemas()=0;
	virtual const char * getXmlSchema()=0;
};


//  ===========================================================================
interface IConstECLTimingData : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual bool getGraphNum_isNull()=0;
	virtual int getGraphNum()=0;
	virtual bool getSubGraphNum_isNull()=0;
	virtual int getSubGraphNum()=0;
	virtual bool getGID_isNull()=0;
	virtual int getGID()=0;
	virtual bool getMin_isNull()=0;
	virtual int getMin()=0;
	virtual bool getMS_isNull()=0;
	virtual int getMS()=0;
};

interface IEspECLTimingData : extends IConstECLTimingData
{
	virtual void setName(const char * val)=0;
	virtual void setGraphNum_null()=0;
	virtual void setGraphNum(int val)=0;
	virtual void setSubGraphNum_null()=0;
	virtual void setSubGraphNum(int val)=0;
	virtual void setGID_null()=0;
	virtual void setGID(int val)=0;
	virtual void setMin_null()=0;
	virtual void setMin(int val)=0;
	virtual void setMS_null()=0;
	virtual void setMS(int val)=0;
	virtual void copy(IConstECLTimingData &from)=0;
};

interface IClientECLTimingData : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setGraphNum_null()=0;
	virtual void setGraphNum(int val)=0;
	virtual void setSubGraphNum_null()=0;
	virtual void setSubGraphNum(int val)=0;
	virtual void setGID_null()=0;
	virtual void setGID(int val)=0;
	virtual void setMin_null()=0;
	virtual void setMin(int val)=0;
	virtual void setMS_null()=0;
	virtual void setMS(int val)=0;
	virtual const char * getName()=0;
	virtual bool getGraphNum_isNull()=0;
	virtual int getGraphNum()=0;
	virtual bool getSubGraphNum_isNull()=0;
	virtual int getSubGraphNum()=0;
	virtual bool getGID_isNull()=0;
	virtual int getGID()=0;
	virtual bool getMin_isNull()=0;
	virtual int getMin()=0;
	virtual bool getMS_isNull()=0;
	virtual int getMS()=0;
};


//  ===========================================================================
interface IConstECLGraph : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getLabel()=0;
	virtual const char * getType()=0;
	virtual bool getRunning_isNull()=0;
	virtual bool getRunning()=0;
	virtual bool getComplete_isNull()=0;
	virtual bool getComplete()=0;
	virtual bool getFailed_isNull()=0;
	virtual bool getFailed()=0;
	virtual bool getRunningId_isNull()=0;
	virtual __int64 getRunningId()=0;
	virtual const char * getWhenStarted()=0;
	virtual const char * getWhenFinished()=0;
};

interface IEspECLGraph : extends IConstECLGraph
{
	virtual void setName(const char * val)=0;
	virtual void setLabel(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setRunning_null()=0;
	virtual void setRunning(bool val)=0;
	virtual void setComplete_null()=0;
	virtual void setComplete(bool val)=0;
	virtual void setFailed_null()=0;
	virtual void setFailed(bool val)=0;
	virtual void setRunningId_null()=0;
	virtual void setRunningId(__int64 val)=0;
	virtual void setWhenStarted(const char * val)=0;
	virtual void setWhenFinished(const char * val)=0;
	virtual void copy(IConstECLGraph &from)=0;
};

interface IClientECLGraph : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setLabel(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setRunning_null()=0;
	virtual void setRunning(bool val)=0;
	virtual void setComplete_null()=0;
	virtual void setComplete(bool val)=0;
	virtual void setFailed_null()=0;
	virtual void setFailed(bool val)=0;
	virtual void setRunningId_null()=0;
	virtual void setRunningId(__int64 val)=0;
	virtual void setWhenStarted(const char * val)=0;
	virtual void setWhenFinished(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getLabel()=0;
	virtual const char * getType()=0;
	virtual bool getRunning_isNull()=0;
	virtual bool getRunning()=0;
	virtual bool getComplete_isNull()=0;
	virtual bool getComplete()=0;
	virtual bool getFailed_isNull()=0;
	virtual bool getFailed()=0;
	virtual bool getRunningId_isNull()=0;
	virtual __int64 getRunningId()=0;
	virtual const char * getWhenStarted()=0;
	virtual const char * getWhenFinished()=0;
};


//  ===========================================================================
interface IConstECLGraphEx : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getLabel()=0;
	virtual const char * getType()=0;
	virtual const char * getGraph()=0;
	virtual bool getRunning_isNull()=0;
	virtual bool getRunning()=0;
	virtual bool getRunningId_isNull()=0;
	virtual __int64 getRunningId()=0;
	virtual bool getComplete_isNull()=0;
	virtual bool getComplete()=0;
	virtual bool getFailed_isNull()=0;
	virtual bool getFailed()=0;
};

interface IEspECLGraphEx : extends IConstECLGraphEx
{
	virtual void setName(const char * val)=0;
	virtual void setLabel(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setGraph(const char * val)=0;
	virtual void setRunning_null()=0;
	virtual void setRunning(bool val)=0;
	virtual void setRunningId_null()=0;
	virtual void setRunningId(__int64 val)=0;
	virtual void setComplete_null()=0;
	virtual void setComplete(bool val)=0;
	virtual void setFailed_null()=0;
	virtual void setFailed(bool val)=0;
	virtual void copy(IConstECLGraphEx &from)=0;
};

interface IClientECLGraphEx : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setLabel(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setGraph(const char * val)=0;
	virtual void setRunning_null()=0;
	virtual void setRunning(bool val)=0;
	virtual void setRunningId_null()=0;
	virtual void setRunningId(__int64 val)=0;
	virtual void setComplete_null()=0;
	virtual void setComplete(bool val)=0;
	virtual void setFailed_null()=0;
	virtual void setFailed(bool val)=0;
	virtual const char * getName()=0;
	virtual const char * getLabel()=0;
	virtual const char * getType()=0;
	virtual const char * getGraph()=0;
	virtual bool getRunning_isNull()=0;
	virtual bool getRunning()=0;
	virtual bool getRunningId_isNull()=0;
	virtual __int64 getRunningId()=0;
	virtual bool getComplete_isNull()=0;
	virtual bool getComplete()=0;
	virtual bool getFailed_isNull()=0;
	virtual bool getFailed()=0;
};


//  ===========================================================================
interface IConstECLSourceFile : extends IEspStruct
{
	virtual const char * getFileCluster()=0;
	virtual const char * getName()=0;
	virtual bool getIsSuperFile_isNull()=0;
	virtual bool getIsSuperFile()=0;
	virtual bool getSubs_isNull()=0;
	virtual int getSubs()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual IArrayOf<IConstECLSourceFile> & getECLSourceFiles()=0;
};

interface IEspECLSourceFile : extends IConstECLSourceFile
{
	virtual void setFileCluster(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setIsSuperFile_null()=0;
	virtual void setIsSuperFile(bool val)=0;
	virtual void setSubs_null()=0;
	virtual void setSubs(int val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setECLSourceFiles(IArrayOf<IEspECLSourceFile> &val)=0;
	virtual void setECLSourceFiles(IArrayOf<IConstECLSourceFile> &val)=0;
	virtual void copy(IConstECLSourceFile &from)=0;
};

interface IClientECLSourceFile : extends IInterface
{
	virtual void setFileCluster(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setIsSuperFile_null()=0;
	virtual void setIsSuperFile(bool val)=0;
	virtual void setSubs_null()=0;
	virtual void setSubs(int val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setECLSourceFiles(IArrayOf<IEspECLSourceFile> &val)=0;
	virtual void setECLSourceFiles(IArrayOf<IConstECLSourceFile> &val)=0;
	virtual const char * getFileCluster()=0;
	virtual const char * getName()=0;
	virtual bool getIsSuperFile_isNull()=0;
	virtual bool getIsSuperFile()=0;
	virtual bool getSubs_isNull()=0;
	virtual int getSubs()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual IArrayOf<IConstECLSourceFile> & getECLSourceFiles()=0;
};


//  ===========================================================================
interface IConstECLTimer : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getValue()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual const char * getGraphName()=0;
	virtual bool getSubGraphId_isNull()=0;
	virtual int getSubGraphId()=0;
	virtual bool getTimestamp_isNull()=0;
	virtual __int64 getTimestamp()=0;
	virtual const char * getWhen()=0;
};

interface IEspECLTimer : extends IConstECLTimer
{
	virtual void setName(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setSubGraphId_null()=0;
	virtual void setSubGraphId(int val)=0;
	virtual void setTimestamp_null()=0;
	virtual void setTimestamp(__int64 val)=0;
	virtual void setWhen(const char * val)=0;
	virtual void copy(IConstECLTimer &from)=0;
};

interface IClientECLTimer : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setSubGraphId_null()=0;
	virtual void setSubGraphId(int val)=0;
	virtual void setTimestamp_null()=0;
	virtual void setTimestamp(__int64 val)=0;
	virtual void setWhen(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getValue()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual const char * getGraphName()=0;
	virtual bool getSubGraphId_isNull()=0;
	virtual int getSubGraphId()=0;
	virtual bool getTimestamp_isNull()=0;
	virtual __int64 getTimestamp()=0;
	virtual const char * getWhen()=0;
};



//  ===========================================================================
interface IConstECLHelpFile : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getType()=0;
	virtual const char * getIPAddress()=0;
	virtual const char * getDescription()=0;
	virtual bool getFileSize_isNull()=0;
	virtual __int64 getFileSize()=0;
	virtual bool getPID_isNull()=0;
	virtual unsigned int getPID()=0;
	virtual bool getMinActivityId_isNull()=0;
	virtual unsigned int getMinActivityId()=0;
	virtual bool getMaxActivityId_isNull()=0;
	virtual unsigned int getMaxActivityId()=0;
};

interface IEspECLHelpFile : extends IConstECLHelpFile
{
	virtual void setName(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setIPAddress(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setFileSize_null()=0;
	virtual void setFileSize(__int64 val)=0;
	virtual void setPID_null()=0;
	virtual void setPID(unsigned int val)=0;
	virtual void setMinActivityId_null()=0;
	virtual void setMinActivityId(unsigned int val)=0;
	virtual void setMaxActivityId_null()=0;
	virtual void setMaxActivityId(unsigned int val)=0;
	virtual void copy(IConstECLHelpFile &from)=0;
};

interface IClientECLHelpFile : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setIPAddress(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setFileSize_null()=0;
	virtual void setFileSize(__int64 val)=0;
	virtual void setPID_null()=0;
	virtual void setPID(unsigned int val)=0;
	virtual void setMinActivityId_null()=0;
	virtual void setMinActivityId(unsigned int val)=0;
	virtual void setMaxActivityId_null()=0;
	virtual void setMaxActivityId(unsigned int val)=0;
	virtual const char * getName()=0;
	virtual const char * getType()=0;
	virtual const char * getIPAddress()=0;
	virtual const char * getDescription()=0;
	virtual bool getFileSize_isNull()=0;
	virtual __int64 getFileSize()=0;
	virtual bool getPID_isNull()=0;
	virtual unsigned int getPID()=0;
	virtual bool getMinActivityId_isNull()=0;
	virtual unsigned int getMinActivityId()=0;
	virtual bool getMaxActivityId_isNull()=0;
	virtual unsigned int getMaxActivityId()=0;
};



//  ===========================================================================
interface IConstECLQuery : extends IEspStruct
{
	virtual const char * getText()=0;
	virtual const char * getCpp()=0;
	virtual const char * getResTxt()=0;
	virtual const char * getDll()=0;
	virtual const char * getThorLog()=0;
	virtual const char * getQueryMainDefinition()=0;
};

interface IEspECLQuery : extends IConstECLQuery
{
	virtual void setText(const char * val)=0;
	virtual void setCpp(const char * val)=0;
	virtual void setResTxt(const char * val)=0;
	virtual void setDll(const char * val)=0;
	virtual void setThorLog(const char * val)=0;
	virtual void setQueryMainDefinition(const char * val)=0;
	virtual void copy(IConstECLQuery &from)=0;
};

interface IClientECLQuery : extends IInterface
{
	virtual void setText(const char * val)=0;
	virtual void setCpp(const char * val)=0;
	virtual void setResTxt(const char * val)=0;
	virtual void setDll(const char * val)=0;
	virtual void setThorLog(const char * val)=0;
	virtual void setQueryMainDefinition(const char * val)=0;
	virtual const char * getText()=0;
	virtual const char * getCpp()=0;
	virtual const char * getResTxt()=0;
	virtual const char * getDll()=0;
	virtual const char * getThorLog()=0;
	virtual const char * getQueryMainDefinition()=0;
};



//  ===========================================================================

interface IConstQuerySummaryStats : extends IEspStruct
{
	virtual const char * getEndpoint()=0;
	virtual const char * getStatus()=0;
	virtual const char * getStartTime()=0;
	virtual const char * getEndTime()=0;
	virtual bool getCountTotal_isNull()=0;
	virtual int getCountTotal()=0;
	virtual bool getCountFailed_isNull()=0;
	virtual int getCountFailed()=0;
	virtual bool getAverageSlavesReplyLen_isNull()=0;
	virtual int getAverageSlavesReplyLen()=0;
	virtual bool getAverageBytesOut_isNull()=0;
	virtual __int64 getAverageBytesOut()=0;
	virtual bool getSizeAvgPeakMemory_isNull()=0;
	virtual __int64 getSizeAvgPeakMemory()=0;
	virtual bool getTimeAvgTotalExecuteMinutes_isNull()=0;
	virtual __int64 getTimeAvgTotalExecuteMinutes()=0;
	virtual bool getTimeMinTotalExecuteMinutes_isNull()=0;
	virtual __int64 getTimeMinTotalExecuteMinutes()=0;
	virtual bool getTimeMaxTotalExecuteMinutes_isNull()=0;
	virtual __int64 getTimeMaxTotalExecuteMinutes()=0;
	virtual bool getPercentile97_isNull()=0;
	virtual __int64 getPercentile97()=0;
	virtual bool getPercentile97Estimate_isNull()=0;
	virtual bool getPercentile97Estimate()=0;
};

interface IEspQuerySummaryStats : extends IConstQuerySummaryStats
{
	virtual void setEndpoint(const char * val)=0;
	virtual void setStatus(const char * val)=0;
	virtual void setStartTime(const char * val)=0;
	virtual void setEndTime(const char * val)=0;
	virtual void setCountTotal_null()=0;
	virtual void setCountTotal(int val)=0;
	virtual void setCountFailed_null()=0;
	virtual void setCountFailed(int val)=0;
	virtual void setAverageSlavesReplyLen_null()=0;
	virtual void setAverageSlavesReplyLen(int val)=0;
	virtual void setAverageBytesOut_null()=0;
	virtual void setAverageBytesOut(__int64 val)=0;
	virtual void setSizeAvgPeakMemory_null()=0;
	virtual void setSizeAvgPeakMemory(__int64 val)=0;
	virtual void setTimeAvgTotalExecuteMinutes_null()=0;
	virtual void setTimeAvgTotalExecuteMinutes(__int64 val)=0;
	virtual void setTimeMinTotalExecuteMinutes_null()=0;
	virtual void setTimeMinTotalExecuteMinutes(__int64 val)=0;
	virtual void setTimeMaxTotalExecuteMinutes_null()=0;
	virtual void setTimeMaxTotalExecuteMinutes(__int64 val)=0;
	virtual void setPercentile97_null()=0;
	virtual void setPercentile97(__int64 val)=0;
	virtual void setPercentile97Estimate_null()=0;
	virtual void setPercentile97Estimate(bool val)=0;
	virtual void copy(IConstQuerySummaryStats &from)=0;
};

interface IClientQuerySummaryStats : extends IInterface
{
	virtual void setEndpoint(const char * val)=0;
	virtual void setStatus(const char * val)=0;
	virtual void setStartTime(const char * val)=0;
	virtual void setEndTime(const char * val)=0;
	virtual void setCountTotal_null()=0;
	virtual void setCountTotal(int val)=0;
	virtual void setCountFailed_null()=0;
	virtual void setCountFailed(int val)=0;
	virtual void setAverageSlavesReplyLen_null()=0;
	virtual void setAverageSlavesReplyLen(int val)=0;
	virtual void setAverageBytesOut_null()=0;
	virtual void setAverageBytesOut(__int64 val)=0;
	virtual void setSizeAvgPeakMemory_null()=0;
	virtual void setSizeAvgPeakMemory(__int64 val)=0;
	virtual void setTimeAvgTotalExecuteMinutes_null()=0;
	virtual void setTimeAvgTotalExecuteMinutes(__int64 val)=0;
	virtual void setTimeMinTotalExecuteMinutes_null()=0;
	virtual void setTimeMinTotalExecuteMinutes(__int64 val)=0;
	virtual void setTimeMaxTotalExecuteMinutes_null()=0;
	virtual void setTimeMaxTotalExecuteMinutes(__int64 val)=0;
	virtual void setPercentile97_null()=0;
	virtual void setPercentile97(__int64 val)=0;
	virtual void setPercentile97Estimate_null()=0;
	virtual void setPercentile97Estimate(bool val)=0;
	virtual const char * getEndpoint()=0;
	virtual const char * getStatus()=0;
	virtual const char * getStartTime()=0;
	virtual const char * getEndTime()=0;
	virtual bool getCountTotal_isNull()=0;
	virtual int getCountTotal()=0;
	virtual bool getCountFailed_isNull()=0;
	virtual int getCountFailed()=0;
	virtual bool getAverageSlavesReplyLen_isNull()=0;
	virtual int getAverageSlavesReplyLen()=0;
	virtual bool getAverageBytesOut_isNull()=0;
	virtual __int64 getAverageBytesOut()=0;
	virtual bool getSizeAvgPeakMemory_isNull()=0;
	virtual __int64 getSizeAvgPeakMemory()=0;
	virtual bool getTimeAvgTotalExecuteMinutes_isNull()=0;
	virtual __int64 getTimeAvgTotalExecuteMinutes()=0;
	virtual bool getTimeMinTotalExecuteMinutes_isNull()=0;
	virtual __int64 getTimeMinTotalExecuteMinutes()=0;
	virtual bool getTimeMaxTotalExecuteMinutes_isNull()=0;
	virtual __int64 getTimeMaxTotalExecuteMinutes()=0;
	virtual bool getPercentile97_isNull()=0;
	virtual __int64 getPercentile97()=0;
	virtual bool getPercentile97Estimate_isNull()=0;
	virtual bool getPercentile97Estimate()=0;
};



//  ===========================================================================

interface IConstDebugValue : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getValue()=0;
};

interface IEspDebugValue : extends IConstDebugValue
{
	virtual void setName(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual void copy(IConstDebugValue &from)=0;
};

interface IClientDebugValue : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getValue()=0;
};



interface IConstWUActionResult : extends IEspStruct
{
	virtual const char * getWuid()=0;
	virtual const char * getAction()=0;
	virtual const char * getResult()=0;
};

interface IEspWUActionResult : extends IConstWUActionResult
{
	virtual void setWuid(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setResult(const char * val)=0;
	virtual void copy(IConstWUActionResult &from)=0;
};

interface IClientWUActionResult : extends IInterface
{
	virtual void setWuid(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setResult(const char * val)=0;
	virtual const char * getWuid()=0;
	virtual const char * getAction()=0;
	virtual const char * getResult()=0;
};



interface IConstApplicationValue : extends IEspStruct
{
	virtual const char * getApplication()=0;
	virtual const char * getName()=0;
	virtual const char * getValue()=0;
};

interface IEspApplicationValue : extends IConstApplicationValue
{
	virtual void setApplication(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual void copy(IConstApplicationValue &from)=0;
};

interface IClientApplicationValue : extends IInterface
{
	virtual void setApplication(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual const char * getApplication()=0;
	virtual const char * getName()=0;
	virtual const char * getValue()=0;
};



interface IConstECLWorkflow : extends IEspStruct
{
	virtual const char * getWFID()=0;
	virtual const char * getEventName()=0;
	virtual const char * getEventText()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual bool getCountRemaining_isNull()=0;
	virtual int getCountRemaining()=0;
};

interface IEspECLWorkflow : extends IConstECLWorkflow
{
	virtual void setWFID(const char * val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setEventText(const char * val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setCountRemaining_null()=0;
	virtual void setCountRemaining(int val)=0;
	virtual void copy(IConstECLWorkflow &from)=0;
};

interface IClientECLWorkflow : extends IInterface
{
	virtual void setWFID(const char * val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setEventText(const char * val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setCountRemaining_null()=0;
	virtual void setCountRemaining(int val)=0;
	virtual const char * getWFID()=0;
	virtual const char * getEventName()=0;
	virtual const char * getEventText()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual bool getCountRemaining_isNull()=0;
	virtual int getCountRemaining()=0;
};



interface IConstThorLogInfo : extends IEspStruct
{
	virtual const char * getProcessName()=0;
	virtual const char * getClusterGroup()=0;
	virtual const char * getLogDate()=0;
	virtual bool getNumberSlaves_isNull()=0;
	virtual int getNumberSlaves()=0;
};

interface IEspThorLogInfo : extends IConstThorLogInfo
{
	virtual void setProcessName(const char * val)=0;
	virtual void setClusterGroup(const char * val)=0;
	virtual void setLogDate(const char * val)=0;
	virtual void setNumberSlaves_null()=0;
	virtual void setNumberSlaves(int val)=0;
	virtual void copy(IConstThorLogInfo &from)=0;
};

interface IClientThorLogInfo : extends IInterface
{
	virtual void setProcessName(const char * val)=0;
	virtual void setClusterGroup(const char * val)=0;
	virtual void setLogDate(const char * val)=0;
	virtual void setNumberSlaves_null()=0;
	virtual void setNumberSlaves(int val)=0;
	virtual const char * getProcessName()=0;
	virtual const char * getClusterGroup()=0;
	virtual const char * getLogDate()=0;
	virtual bool getNumberSlaves_isNull()=0;
	virtual int getNumberSlaves()=0;
};



interface IConstECLWorkunitLW : extends IEspStruct
{
	virtual const char * getWuid()=0;
	virtual const char * getOwner()=0;
	virtual const char * getJobName()=0;
	virtual const char * getWuScope()=0;
	virtual const char * getClusterName()=0;
	virtual bool getState_isNull()=0;
	virtual int getState()=0;
	virtual const char * getStateDesc()=0;
	virtual bool getAction_isNull()=0;
	virtual int getAction()=0;
	virtual const char * getActionDesc()=0;
	virtual bool getPriority_isNull()=0;
	virtual int getPriority()=0;
	virtual const char * getPriorityDesc()=0;
	virtual bool getPriorityLevel_isNull()=0;
	virtual int getPriorityLevel()=0;
	virtual bool getIsProtected_isNull()=0;
	virtual bool getIsProtected()=0;
	virtual const char * getDateTimeScheduled()=0;
	virtual bool getTotalClusterTime_isNull()=0;
	virtual unsigned int getTotalClusterTime()=0;
	virtual IArrayOf<IConstApplicationValue> & getApplicationValues()=0;
};

interface IEspECLWorkunitLW : extends IConstECLWorkunitLW
{
	virtual void setWuid(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void setWuScope(const char * val)=0;
	virtual void setClusterName(const char * val)=0;
	virtual void setState_null()=0;
	virtual void setState(int val)=0;
	virtual void setStateDesc(const char * val)=0;
	virtual void setAction_null()=0;
	virtual void setAction(int val)=0;
	virtual void setActionDesc(const char * val)=0;
	virtual void setPriority_null()=0;
	virtual void setPriority(int val)=0;
	virtual void setPriorityDesc(const char * val)=0;
	virtual void setPriorityLevel_null()=0;
	virtual void setPriorityLevel(int val)=0;
	virtual void setIsProtected_null()=0;
	virtual void setIsProtected(bool val)=0;
	virtual void setDateTimeScheduled(const char * val)=0;
	virtual void setTotalClusterTime_null()=0;
	virtual void setTotalClusterTime(unsigned int val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void copy(IConstECLWorkunitLW &from)=0;
};

interface IClientECLWorkunitLW : extends IInterface
{
	virtual void setWuid(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void setWuScope(const char * val)=0;
	virtual void setClusterName(const char * val)=0;
	virtual void setState_null()=0;
	virtual void setState(int val)=0;
	virtual void setStateDesc(const char * val)=0;
	virtual void setAction_null()=0;
	virtual void setAction(int val)=0;
	virtual void setActionDesc(const char * val)=0;
	virtual void setPriority_null()=0;
	virtual void setPriority(int val)=0;
	virtual void setPriorityDesc(const char * val)=0;
	virtual void setPriorityLevel_null()=0;
	virtual void setPriorityLevel(int val)=0;
	virtual void setIsProtected_null()=0;
	virtual void setIsProtected(bool val)=0;
	virtual void setDateTimeScheduled(const char * val)=0;
	virtual void setTotalClusterTime_null()=0;
	virtual void setTotalClusterTime(unsigned int val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual const char * getWuid()=0;
	virtual const char * getOwner()=0;
	virtual const char * getJobName()=0;
	virtual const char * getWuScope()=0;
	virtual const char * getClusterName()=0;
	virtual bool getState_isNull()=0;
	virtual int getState()=0;
	virtual const char * getStateDesc()=0;
	virtual bool getAction_isNull()=0;
	virtual int getAction()=0;
	virtual const char * getActionDesc()=0;
	virtual bool getPriority_isNull()=0;
	virtual int getPriority()=0;
	virtual const char * getPriorityDesc()=0;
	virtual bool getPriorityLevel_isNull()=0;
	virtual int getPriorityLevel()=0;
	virtual bool getIsProtected_isNull()=0;
	virtual bool getIsProtected()=0;
	virtual const char * getDateTimeScheduled()=0;
	virtual bool getTotalClusterTime_isNull()=0;
	virtual unsigned int getTotalClusterTime()=0;
	virtual IArrayOf<IConstApplicationValue> & getApplicationValues()=0;
};



interface IConstECLWorkunit : extends IEspStruct
{
	virtual const char * getWuid()=0;
	virtual const char * getOwner()=0;
	virtual const char * getCluster()=0;
	virtual const char * getRoxieCluster()=0;
	virtual const char * getJobname()=0;
	virtual const char * getQueue()=0;
	virtual bool getStateID_isNull()=0;
	virtual int getStateID()=0;
	virtual const char * getState()=0;
	virtual const char * getStateEx()=0;
	virtual const char * getDescription()=0;
	virtual bool getProtected_isNull()=0;
	virtual bool getProtected()=0;
	virtual bool getActive_isNull()=0;
	virtual bool getActive()=0;
	virtual bool getAction_isNull()=0;
	virtual int getAction()=0;
	virtual const char * getActionEx()=0;
	virtual const char * getDateTimeScheduled()=0;
	virtual bool getPriorityClass_isNull()=0;
	virtual int getPriorityClass()=0;
	virtual bool getPriorityLevel_isNull()=0;
	virtual int getPriorityLevel()=0;
	virtual const char * getScope()=0;
	virtual const char * getSnapshot()=0;
	virtual bool getResultLimit_isNull()=0;
	virtual int getResultLimit()=0;
	virtual bool getArchived_isNull()=0;
	virtual bool getArchived()=0;
	virtual bool getIsPausing_isNull()=0;
	virtual bool getIsPausing()=0;
	virtual bool getThorLCR_isNull()=0;
	virtual bool getThorLCR()=0;
	virtual bool getEventSchedule_isNull()=0;
	virtual int getEventSchedule()=0;
	virtual bool getHaveSubGraphTimings_isNull()=0;
	virtual bool getHaveSubGraphTimings()=0;
	virtual const char * getTotalThorTime()=0;
	virtual const char * getTotalClusterTime()=0;
	virtual const char * getAbortBy()=0;
	virtual const char * getAbortTime()=0;
	virtual IConstECLQuery & getQuery()=0;
	virtual IArrayOf<IConstECLHelpFile> & getHelpers()=0;
	virtual IArrayOf<IConstECLException> & getExceptions()=0;
	virtual IArrayOf<IConstECLGraph> & getGraphs()=0;
	virtual IArrayOf<IConstECLSourceFile> & getSourceFiles()=0;
	virtual IArrayOf<IConstECLResult> & getResults()=0;
	virtual IArrayOf<IConstECLResult> & getVariables()=0;
	virtual IArrayOf<IConstECLTimer> & getTimers()=0;
	virtual IArrayOf<IConstDebugValue> & getDebugValues()=0;
	virtual IArrayOf<IConstApplicationValue> & getApplicationValues()=0;
	virtual IArrayOf<IConstECLWorkflow> & getWorkflows()=0;
	virtual IArrayOf<IConstECLTimingData> & getTimingData()=0;
	virtual StringArray & getAllowedClusters()=0;
	virtual bool getErrorCount_isNull()=0;
	virtual int getErrorCount()=0;
	virtual bool getWarningCount_isNull()=0;
	virtual int getWarningCount()=0;
	virtual bool getInfoCount_isNull()=0;
	virtual int getInfoCount()=0;
	virtual bool getAlertCount_isNull()=0;
	virtual int getAlertCount()=0;
	virtual bool getGraphCount_isNull()=0;
	virtual int getGraphCount()=0;
	virtual bool getSourceFileCount_isNull()=0;
	virtual int getSourceFileCount()=0;
	virtual bool getResultCount_isNull()=0;
	virtual int getResultCount()=0;
	virtual bool getVariableCount_isNull()=0;
	virtual int getVariableCount()=0;
	virtual bool getTimerCount_isNull()=0;
	virtual int getTimerCount()=0;
	virtual bool getHasDebugValue_isNull()=0;
	virtual bool getHasDebugValue()=0;
	virtual bool getApplicationValueCount_isNull()=0;
	virtual int getApplicationValueCount()=0;
	virtual const char * getXmlParams()=0;
	virtual bool getAccessFlag_isNull()=0;
	virtual int getAccessFlag()=0;
	virtual bool getClusterFlag_isNull()=0;
	virtual int getClusterFlag()=0;
	virtual const char * getHelpersDesc()=0;
	virtual const char * getGraphsDesc()=0;
	virtual const char * getSourceFilesDesc()=0;
	virtual const char * getResultsDesc()=0;
	virtual const char * getVariablesDesc()=0;
	virtual const char * getTimersDesc()=0;
	virtual const char * getDebugValuesDesc()=0;
	virtual const char * getApplicationValuesDesc()=0;
	virtual const char * getWorkflowsDesc()=0;
	virtual bool getHasArchiveQuery_isNull()=0;
	virtual bool getHasArchiveQuery()=0;
	virtual IArrayOf<IConstThorLogInfo> & getThorLogList()=0;
	virtual StringArray & getResourceURLs()=0;
	virtual bool getResultViewCount_isNull()=0;
	virtual int getResultViewCount()=0;
	virtual bool getResourceURLCount_isNull()=0;
	virtual int getResourceURLCount()=0;
	virtual bool getDebugValueCount_isNull()=0;
	virtual int getDebugValueCount()=0;
	virtual bool getWorkflowCount_isNull()=0;
	virtual int getWorkflowCount()=0;
	virtual bool getHelpersCount_isNull()=0;
	virtual int getHelpersCount()=0;
};

interface IEspECLWorkunit : extends IConstECLWorkunit
{
	virtual void setWuid(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setRoxieCluster(const char * val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setStateID_null()=0;
	virtual void setStateID(int val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStateEx(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setProtected_null()=0;
	virtual void setProtected(bool val)=0;
	virtual void setActive_null()=0;
	virtual void setActive(bool val)=0;
	virtual void setAction_null()=0;
	virtual void setAction(int val)=0;
	virtual void setActionEx(const char * val)=0;
	virtual void setDateTimeScheduled(const char * val)=0;
	virtual void setPriorityClass_null()=0;
	virtual void setPriorityClass(int val)=0;
	virtual void setPriorityLevel_null()=0;
	virtual void setPriorityLevel(int val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setResultLimit_null()=0;
	virtual void setResultLimit(int val)=0;
	virtual void setArchived_null()=0;
	virtual void setArchived(bool val)=0;
	virtual void setIsPausing_null()=0;
	virtual void setIsPausing(bool val)=0;
	virtual void setThorLCR_null()=0;
	virtual void setThorLCR(bool val)=0;
	virtual void setEventSchedule_null()=0;
	virtual void setEventSchedule(int val)=0;
	virtual void setHaveSubGraphTimings_null()=0;
	virtual void setHaveSubGraphTimings(bool val)=0;
	virtual void setTotalThorTime(const char * val)=0;
	virtual void setTotalClusterTime(const char * val)=0;
	virtual void setAbortBy(const char * val)=0;
	virtual void setAbortTime(const char * val)=0;
	virtual IEspECLQuery & updateQuery()=0;
	virtual void setQuery(IConstECLQuery &ifrom)=0;
	virtual void setHelpers(IArrayOf<IEspECLHelpFile> &val)=0;
	virtual void setHelpers(IArrayOf<IConstECLHelpFile> &val)=0;
	virtual void setExceptions(IArrayOf<IEspECLException> &val)=0;
	virtual void setExceptions(IArrayOf<IConstECLException> &val)=0;
	virtual void setGraphs(IArrayOf<IEspECLGraph> &val)=0;
	virtual void setGraphs(IArrayOf<IConstECLGraph> &val)=0;
	virtual void setSourceFiles(IArrayOf<IEspECLSourceFile> &val)=0;
	virtual void setSourceFiles(IArrayOf<IConstECLSourceFile> &val)=0;
	virtual void setResults(IArrayOf<IEspECLResult> &val)=0;
	virtual void setResults(IArrayOf<IConstECLResult> &val)=0;
	virtual void setVariables(IArrayOf<IEspECLResult> &val)=0;
	virtual void setVariables(IArrayOf<IConstECLResult> &val)=0;
	virtual void setTimers(IArrayOf<IEspECLTimer> &val)=0;
	virtual void setTimers(IArrayOf<IConstECLTimer> &val)=0;
	virtual void setDebugValues(IArrayOf<IEspDebugValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstDebugValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void setWorkflows(IArrayOf<IEspECLWorkflow> &val)=0;
	virtual void setWorkflows(IArrayOf<IConstECLWorkflow> &val)=0;
	virtual void setTimingData(IArrayOf<IEspECLTimingData> &val)=0;
	virtual void setTimingData(IArrayOf<IConstECLTimingData> &val)=0;
	virtual void setAllowedClusters(StringArray &val)=0;
	virtual void setErrorCount_null()=0;
	virtual void setErrorCount(int val)=0;
	virtual void setWarningCount_null()=0;
	virtual void setWarningCount(int val)=0;
	virtual void setInfoCount_null()=0;
	virtual void setInfoCount(int val)=0;
	virtual void setAlertCount_null()=0;
	virtual void setAlertCount(int val)=0;
	virtual void setGraphCount_null()=0;
	virtual void setGraphCount(int val)=0;
	virtual void setSourceFileCount_null()=0;
	virtual void setSourceFileCount(int val)=0;
	virtual void setResultCount_null()=0;
	virtual void setResultCount(int val)=0;
	virtual void setVariableCount_null()=0;
	virtual void setVariableCount(int val)=0;
	virtual void setTimerCount_null()=0;
	virtual void setTimerCount(int val)=0;
	virtual void setHasDebugValue_null()=0;
	virtual void setHasDebugValue(bool val)=0;
	virtual void setApplicationValueCount_null()=0;
	virtual void setApplicationValueCount(int val)=0;
	virtual void setXmlParams(const char * val)=0;
	virtual void setAccessFlag_null()=0;
	virtual void setAccessFlag(int val)=0;
	virtual void setClusterFlag_null()=0;
	virtual void setClusterFlag(int val)=0;
	virtual void setHelpersDesc(const char * val)=0;
	virtual void setGraphsDesc(const char * val)=0;
	virtual void setSourceFilesDesc(const char * val)=0;
	virtual void setResultsDesc(const char * val)=0;
	virtual void setVariablesDesc(const char * val)=0;
	virtual void setTimersDesc(const char * val)=0;
	virtual void setDebugValuesDesc(const char * val)=0;
	virtual void setApplicationValuesDesc(const char * val)=0;
	virtual void setWorkflowsDesc(const char * val)=0;
	virtual void setHasArchiveQuery_null()=0;
	virtual void setHasArchiveQuery(bool val)=0;
	virtual void setThorLogList(IArrayOf<IEspThorLogInfo> &val)=0;
	virtual void setThorLogList(IArrayOf<IConstThorLogInfo> &val)=0;
	virtual void setResourceURLs(StringArray &val)=0;
	virtual void setResultViewCount_null()=0;
	virtual void setResultViewCount(int val)=0;
	virtual void setResourceURLCount_null()=0;
	virtual void setResourceURLCount(int val)=0;
	virtual void setDebugValueCount_null()=0;
	virtual void setDebugValueCount(int val)=0;
	virtual void setWorkflowCount_null()=0;
	virtual void setWorkflowCount(int val)=0;
	virtual void setHelpersCount_null()=0;
	virtual void setHelpersCount(int val)=0;
	virtual void copy(IConstECLWorkunit &from)=0;
};

interface IClientECLWorkunit : extends IInterface
{
	virtual void setWuid(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setRoxieCluster(const char * val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setStateID_null()=0;
	virtual void setStateID(int val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStateEx(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setProtected_null()=0;
	virtual void setProtected(bool val)=0;
	virtual void setActive_null()=0;
	virtual void setActive(bool val)=0;
	virtual void setAction_null()=0;
	virtual void setAction(int val)=0;
	virtual void setActionEx(const char * val)=0;
	virtual void setDateTimeScheduled(const char * val)=0;
	virtual void setPriorityClass_null()=0;
	virtual void setPriorityClass(int val)=0;
	virtual void setPriorityLevel_null()=0;
	virtual void setPriorityLevel(int val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setResultLimit_null()=0;
	virtual void setResultLimit(int val)=0;
	virtual void setArchived_null()=0;
	virtual void setArchived(bool val)=0;
	virtual void setIsPausing_null()=0;
	virtual void setIsPausing(bool val)=0;
	virtual void setThorLCR_null()=0;
	virtual void setThorLCR(bool val)=0;
	virtual void setEventSchedule_null()=0;
	virtual void setEventSchedule(int val)=0;
	virtual void setHaveSubGraphTimings_null()=0;
	virtual void setHaveSubGraphTimings(bool val)=0;
	virtual void setTotalThorTime(const char * val)=0;
	virtual void setTotalClusterTime(const char * val)=0;
	virtual void setAbortBy(const char * val)=0;
	virtual void setAbortTime(const char * val)=0;
	virtual IEspECLQuery & updateQuery()=0;
	virtual void setQuery(IConstECLQuery &ifrom)=0;
	virtual void setHelpers(IArrayOf<IEspECLHelpFile> &val)=0;
	virtual void setHelpers(IArrayOf<IConstECLHelpFile> &val)=0;
	virtual void setExceptions(IArrayOf<IEspECLException> &val)=0;
	virtual void setExceptions(IArrayOf<IConstECLException> &val)=0;
	virtual void setGraphs(IArrayOf<IEspECLGraph> &val)=0;
	virtual void setGraphs(IArrayOf<IConstECLGraph> &val)=0;
	virtual void setSourceFiles(IArrayOf<IEspECLSourceFile> &val)=0;
	virtual void setSourceFiles(IArrayOf<IConstECLSourceFile> &val)=0;
	virtual void setResults(IArrayOf<IEspECLResult> &val)=0;
	virtual void setResults(IArrayOf<IConstECLResult> &val)=0;
	virtual void setVariables(IArrayOf<IEspECLResult> &val)=0;
	virtual void setVariables(IArrayOf<IConstECLResult> &val)=0;
	virtual void setTimers(IArrayOf<IEspECLTimer> &val)=0;
	virtual void setTimers(IArrayOf<IConstECLTimer> &val)=0;
	virtual void setDebugValues(IArrayOf<IEspDebugValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstDebugValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void setWorkflows(IArrayOf<IEspECLWorkflow> &val)=0;
	virtual void setWorkflows(IArrayOf<IConstECLWorkflow> &val)=0;
	virtual void setTimingData(IArrayOf<IEspECLTimingData> &val)=0;
	virtual void setTimingData(IArrayOf<IConstECLTimingData> &val)=0;
	virtual void setAllowedClusters(StringArray &val)=0;
	virtual void setErrorCount_null()=0;
	virtual void setErrorCount(int val)=0;
	virtual void setWarningCount_null()=0;
	virtual void setWarningCount(int val)=0;
	virtual void setInfoCount_null()=0;
	virtual void setInfoCount(int val)=0;
	virtual void setAlertCount_null()=0;
	virtual void setAlertCount(int val)=0;
	virtual void setGraphCount_null()=0;
	virtual void setGraphCount(int val)=0;
	virtual void setSourceFileCount_null()=0;
	virtual void setSourceFileCount(int val)=0;
	virtual void setResultCount_null()=0;
	virtual void setResultCount(int val)=0;
	virtual void setVariableCount_null()=0;
	virtual void setVariableCount(int val)=0;
	virtual void setTimerCount_null()=0;
	virtual void setTimerCount(int val)=0;
	virtual void setHasDebugValue_null()=0;
	virtual void setHasDebugValue(bool val)=0;
	virtual void setApplicationValueCount_null()=0;
	virtual void setApplicationValueCount(int val)=0;
	virtual void setXmlParams(const char * val)=0;
	virtual void setAccessFlag_null()=0;
	virtual void setAccessFlag(int val)=0;
	virtual void setClusterFlag_null()=0;
	virtual void setClusterFlag(int val)=0;
	virtual void setHelpersDesc(const char * val)=0;
	virtual void setGraphsDesc(const char * val)=0;
	virtual void setSourceFilesDesc(const char * val)=0;
	virtual void setResultsDesc(const char * val)=0;
	virtual void setVariablesDesc(const char * val)=0;
	virtual void setTimersDesc(const char * val)=0;
	virtual void setDebugValuesDesc(const char * val)=0;
	virtual void setApplicationValuesDesc(const char * val)=0;
	virtual void setWorkflowsDesc(const char * val)=0;
	virtual void setHasArchiveQuery_null()=0;
	virtual void setHasArchiveQuery(bool val)=0;
	virtual void setThorLogList(IArrayOf<IEspThorLogInfo> &val)=0;
	virtual void setThorLogList(IArrayOf<IConstThorLogInfo> &val)=0;
	virtual void setResourceURLs(StringArray &val)=0;
	virtual void setResultViewCount_null()=0;
	virtual void setResultViewCount(int val)=0;
	virtual void setResourceURLCount_null()=0;
	virtual void setResourceURLCount(int val)=0;
	virtual void setDebugValueCount_null()=0;
	virtual void setDebugValueCount(int val)=0;
	virtual void setWorkflowCount_null()=0;
	virtual void setWorkflowCount(int val)=0;
	virtual void setHelpersCount_null()=0;
	virtual void setHelpersCount(int val)=0;
	virtual const char * getWuid()=0;
	virtual const char * getOwner()=0;
	virtual const char * getCluster()=0;
	virtual const char * getRoxieCluster()=0;
	virtual const char * getJobname()=0;
	virtual const char * getQueue()=0;
	virtual bool getStateID_isNull()=0;
	virtual int getStateID()=0;
	virtual const char * getState()=0;
	virtual const char * getStateEx()=0;
	virtual const char * getDescription()=0;
	virtual bool getProtected_isNull()=0;
	virtual bool getProtected()=0;
	virtual bool getActive_isNull()=0;
	virtual bool getActive()=0;
	virtual bool getAction_isNull()=0;
	virtual int getAction()=0;
	virtual const char * getActionEx()=0;
	virtual const char * getDateTimeScheduled()=0;
	virtual bool getPriorityClass_isNull()=0;
	virtual int getPriorityClass()=0;
	virtual bool getPriorityLevel_isNull()=0;
	virtual int getPriorityLevel()=0;
	virtual const char * getScope()=0;
	virtual const char * getSnapshot()=0;
	virtual bool getResultLimit_isNull()=0;
	virtual int getResultLimit()=0;
	virtual bool getArchived_isNull()=0;
	virtual bool getArchived()=0;
	virtual bool getIsPausing_isNull()=0;
	virtual bool getIsPausing()=0;
	virtual bool getThorLCR_isNull()=0;
	virtual bool getThorLCR()=0;
	virtual bool getEventSchedule_isNull()=0;
	virtual int getEventSchedule()=0;
	virtual bool getHaveSubGraphTimings_isNull()=0;
	virtual bool getHaveSubGraphTimings()=0;
	virtual const char * getTotalThorTime()=0;
	virtual const char * getTotalClusterTime()=0;
	virtual const char * getAbortBy()=0;
	virtual const char * getAbortTime()=0;
	virtual IConstECLQuery & getQuery()=0;
	virtual IArrayOf<IConstECLHelpFile> & getHelpers()=0;
	virtual IArrayOf<IConstECLException> & getExceptions()=0;
	virtual IArrayOf<IConstECLGraph> & getGraphs()=0;
	virtual IArrayOf<IConstECLSourceFile> & getSourceFiles()=0;
	virtual IArrayOf<IConstECLResult> & getResults()=0;
	virtual IArrayOf<IConstECLResult> & getVariables()=0;
	virtual IArrayOf<IConstECLTimer> & getTimers()=0;
	virtual IArrayOf<IConstDebugValue> & getDebugValues()=0;
	virtual IArrayOf<IConstApplicationValue> & getApplicationValues()=0;
	virtual IArrayOf<IConstECLWorkflow> & getWorkflows()=0;
	virtual IArrayOf<IConstECLTimingData> & getTimingData()=0;
	virtual StringArray & getAllowedClusters()=0;
	virtual bool getErrorCount_isNull()=0;
	virtual int getErrorCount()=0;
	virtual bool getWarningCount_isNull()=0;
	virtual int getWarningCount()=0;
	virtual bool getInfoCount_isNull()=0;
	virtual int getInfoCount()=0;
	virtual bool getAlertCount_isNull()=0;
	virtual int getAlertCount()=0;
	virtual bool getGraphCount_isNull()=0;
	virtual int getGraphCount()=0;
	virtual bool getSourceFileCount_isNull()=0;
	virtual int getSourceFileCount()=0;
	virtual bool getResultCount_isNull()=0;
	virtual int getResultCount()=0;
	virtual bool getVariableCount_isNull()=0;
	virtual int getVariableCount()=0;
	virtual bool getTimerCount_isNull()=0;
	virtual int getTimerCount()=0;
	virtual bool getHasDebugValue_isNull()=0;
	virtual bool getHasDebugValue()=0;
	virtual bool getApplicationValueCount_isNull()=0;
	virtual int getApplicationValueCount()=0;
	virtual const char * getXmlParams()=0;
	virtual bool getAccessFlag_isNull()=0;
	virtual int getAccessFlag()=0;
	virtual bool getClusterFlag_isNull()=0;
	virtual int getClusterFlag()=0;
	virtual const char * getHelpersDesc()=0;
	virtual const char * getGraphsDesc()=0;
	virtual const char * getSourceFilesDesc()=0;
	virtual const char * getResultsDesc()=0;
	virtual const char * getVariablesDesc()=0;
	virtual const char * getTimersDesc()=0;
	virtual const char * getDebugValuesDesc()=0;
	virtual const char * getApplicationValuesDesc()=0;
	virtual const char * getWorkflowsDesc()=0;
	virtual bool getHasArchiveQuery_isNull()=0;
	virtual bool getHasArchiveQuery()=0;
	virtual IArrayOf<IConstThorLogInfo> & getThorLogList()=0;
	virtual StringArray & getResourceURLs()=0;
	virtual bool getResultViewCount_isNull()=0;
	virtual int getResultViewCount()=0;
	virtual bool getResourceURLCount_isNull()=0;
	virtual int getResourceURLCount()=0;
	virtual bool getDebugValueCount_isNull()=0;
	virtual int getDebugValueCount()=0;
	virtual bool getWorkflowCount_isNull()=0;
	virtual int getWorkflowCount()=0;
	virtual bool getHelpersCount_isNull()=0;
	virtual int getHelpersCount()=0;
};



interface IConstWUECLAttribute : extends IEspStruct
{
	virtual const char * getModuleName()=0;
	virtual const char * getAttributeName()=0;
	virtual bool getIsLocked_isNull()=0;
	virtual bool getIsLocked()=0;
	virtual bool getIsCheckedOut_isNull()=0;
	virtual bool getIsCheckedOut()=0;
	virtual bool getIsSandbox_isNull()=0;
	virtual bool getIsSandbox()=0;
	virtual bool getIsOrphaned_isNull()=0;
	virtual bool getIsOrphaned()=0;
};

interface IEspWUECLAttribute : extends IConstWUECLAttribute
{
	virtual void setModuleName(const char * val)=0;
	virtual void setAttributeName(const char * val)=0;
	virtual void setIsLocked_null()=0;
	virtual void setIsLocked(bool val)=0;
	virtual void setIsCheckedOut_null()=0;
	virtual void setIsCheckedOut(bool val)=0;
	virtual void setIsSandbox_null()=0;
	virtual void setIsSandbox(bool val)=0;
	virtual void setIsOrphaned_null()=0;
	virtual void setIsOrphaned(bool val)=0;
	virtual void copy(IConstWUECLAttribute &from)=0;
};

interface IClientWUECLAttribute : extends IInterface
{
	virtual void setModuleName(const char * val)=0;
	virtual void setAttributeName(const char * val)=0;
	virtual void setIsLocked_null()=0;
	virtual void setIsLocked(bool val)=0;
	virtual void setIsCheckedOut_null()=0;
	virtual void setIsCheckedOut(bool val)=0;
	virtual void setIsSandbox_null()=0;
	virtual void setIsSandbox(bool val)=0;
	virtual void setIsOrphaned_null()=0;
	virtual void setIsOrphaned(bool val)=0;
	virtual const char * getModuleName()=0;
	virtual const char * getAttributeName()=0;
	virtual bool getIsLocked_isNull()=0;
	virtual bool getIsLocked()=0;
	virtual bool getIsCheckedOut_isNull()=0;
	virtual bool getIsCheckedOut()=0;
	virtual bool getIsSandbox_isNull()=0;
	virtual bool getIsSandbox()=0;
	virtual bool getIsOrphaned_isNull()=0;
	virtual bool getIsOrphaned()=0;
};



//  ===========================================================================
interface IConstNetworkNode : extends IEspStruct
{
	virtual int getCategory()=0;
	virtual const char * getId()=0;
};

interface IEspNetworkNode : extends IConstNetworkNode
{
	virtual void setCategory(int val)=0;
	virtual void setId(const char * val)=0;
	virtual void copy(IConstNetworkNode &from)=0;
};

interface IClientNetworkNode : extends IInterface
{
	virtual void setCategory(int val)=0;
	virtual void setId(const char * val)=0;
	virtual int getCategory()=0;
	virtual const char * getId()=0;
};



interface IConstClusterEndpoint : extends IEspStruct
{
	virtual const char * getURL()=0;
	virtual const char * getStatus()=0;
	virtual bool getNumQueryFileToCopy_isNull()=0;
	virtual int getNumQueryFileToCopy()=0;
};

interface IEspClusterEndpoint : extends IConstClusterEndpoint
{
	virtual void setURL(const char * val)=0;
	virtual void setStatus(const char * val)=0;
	virtual void setNumQueryFileToCopy_null()=0;
	virtual void setNumQueryFileToCopy(int val)=0;
	virtual void copy(IConstClusterEndpoint &from)=0;
};

interface IClientClusterEndpoint : extends IInterface
{
	virtual void setURL(const char * val)=0;
	virtual void setStatus(const char * val)=0;
	virtual void setNumQueryFileToCopy_null()=0;
	virtual void setNumQueryFileToCopy(int val)=0;
	virtual const char * getURL()=0;
	virtual const char * getStatus()=0;
	virtual bool getNumQueryFileToCopy_isNull()=0;
	virtual int getNumQueryFileToCopy()=0;
};



interface IConstLogicalFileUpload : extends IEspStruct
{
	virtual int getType()=0;
	virtual const char * getSource()=0;
	virtual const char * getDestination()=0;
	virtual const char * getEventTag()=0;
};

interface IEspLogicalFileUpload : extends IConstLogicalFileUpload
{
	virtual void setType(int val)=0;
	virtual void setSource(const char * val)=0;
	virtual void setDestination(const char * val)=0;
	virtual void setEventTag(const char * val)=0;
	virtual void copy(IConstLogicalFileUpload &from)=0;
};

interface IClientLogicalFileUpload : extends IInterface
{
	virtual void setType(int val)=0;
	virtual void setSource(const char * val)=0;
	virtual void setDestination(const char * val)=0;
	virtual void setEventTag(const char * val)=0;
	virtual int getType()=0;
	virtual const char * getSource()=0;
	virtual const char * getDestination()=0;
	virtual const char * getEventTag()=0;
};



//  ===========================================================================

interface IConstECLJob : extends IEspStruct
{
	virtual const char * getWuid()=0;
	virtual const char * getGraph()=0;
	virtual const char * getState()=0;
	virtual const char * getStartedDate()=0;
	virtual const char * getFinishedDate()=0;
	virtual const char * getCluster()=0;
	virtual const char * getGraphNum()=0;
	virtual const char * getSubGraphNum()=0;
	virtual const char * getNumOfRuns()=0;
	virtual bool getDuration_isNull()=0;
	virtual int getDuration()=0;
};

interface IEspECLJob : extends IConstECLJob
{
	virtual void setWuid(const char * val)=0;
	virtual void setGraph(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartedDate(const char * val)=0;
	virtual void setFinishedDate(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setGraphNum(const char * val)=0;
	virtual void setSubGraphNum(const char * val)=0;
	virtual void setNumOfRuns(const char * val)=0;
	virtual void setDuration_null()=0;
	virtual void setDuration(int val)=0;
	virtual void copy(IConstECLJob &from)=0;
};

interface IClientECLJob : extends IInterface
{
	virtual void setWuid(const char * val)=0;
	virtual void setGraph(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartedDate(const char * val)=0;
	virtual void setFinishedDate(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setGraphNum(const char * val)=0;
	virtual void setSubGraphNum(const char * val)=0;
	virtual void setNumOfRuns(const char * val)=0;
	virtual void setDuration_null()=0;
	virtual void setDuration(int val)=0;
	virtual const char * getWuid()=0;
	virtual const char * getGraph()=0;
	virtual const char * getState()=0;
	virtual const char * getStartedDate()=0;
	virtual const char * getFinishedDate()=0;
	virtual const char * getCluster()=0;
	virtual const char * getGraphNum()=0;
	virtual const char * getSubGraphNum()=0;
	virtual const char * getNumOfRuns()=0;
	virtual bool getDuration_isNull()=0;
	virtual int getDuration()=0;
};



interface IConstThorQueue : extends IEspStruct
{
	virtual const char * getDT()=0;
	virtual const char * getRunningWUs()=0;
	virtual const char * getQueuedWUs()=0;
	virtual const char * getWaitingThors()=0;
	virtual const char * getConnectedThors()=0;
	virtual const char * getIdledThors()=0;
	virtual const char * getRunningWU1()=0;
	virtual const char * getRunningWU2()=0;
};

interface IEspThorQueue : extends IConstThorQueue
{
	virtual void setDT(const char * val)=0;
	virtual void setRunningWUs(const char * val)=0;
	virtual void setQueuedWUs(const char * val)=0;
	virtual void setWaitingThors(const char * val)=0;
	virtual void setConnectedThors(const char * val)=0;
	virtual void setIdledThors(const char * val)=0;
	virtual void setRunningWU1(const char * val)=0;
	virtual void setRunningWU2(const char * val)=0;
	virtual void copy(IConstThorQueue &from)=0;
};

interface IClientThorQueue : extends IInterface
{
	virtual void setDT(const char * val)=0;
	virtual void setRunningWUs(const char * val)=0;
	virtual void setQueuedWUs(const char * val)=0;
	virtual void setWaitingThors(const char * val)=0;
	virtual void setConnectedThors(const char * val)=0;
	virtual void setIdledThors(const char * val)=0;
	virtual void setRunningWU1(const char * val)=0;
	virtual void setRunningWU2(const char * val)=0;
	virtual const char * getDT()=0;
	virtual const char * getRunningWUs()=0;
	virtual const char * getQueuedWUs()=0;
	virtual const char * getWaitingThors()=0;
	virtual const char * getConnectedThors()=0;
	virtual const char * getIdledThors()=0;
	virtual const char * getRunningWU1()=0;
	virtual const char * getRunningWU2()=0;
};



interface IConstResubmittedWU : extends IEspStruct
{
	virtual const char * getWUID()=0;
	virtual const char * getParentWUID()=0;
};

interface IEspResubmittedWU : extends IConstResubmittedWU
{
	virtual void setWUID(const char * val)=0;
	virtual void setParentWUID(const char * val)=0;
	virtual void copy(IConstResubmittedWU &from)=0;
};

interface IClientResubmittedWU : extends IInterface
{
	virtual void setWUID(const char * val)=0;
	virtual void setParentWUID(const char * val)=0;
	virtual const char * getWUID()=0;
	virtual const char * getParentWUID()=0;
};



enum CWUFileType { WUFileType_Undefined=-1,CWUFileType_XML, CWUFileType_CPP, CWUFileType_DLL, CWUFileType_Res, CWUFileType_LOG, CWUFileType_WUECL, CWUFileType_ThorLog, CWUFileType_ThorSlaveLog, CWUFileType_EclAgentLog, CWUFileType_ArchiveQuery, };
typedef ArrayOf<CWUFileType> WUFileTypeArray;


interface IConstWUFileOption : extends IEspStruct
{
	virtual CWUFileType getFileType()=0;
	virtual const char* getFileTypeAsString()=0;
	virtual const char * getName()=0;
	virtual const char * getIPAddress()=0;
	virtual const char * getDescription()=0;
	virtual const char * getProcess()=0;
	virtual const char * getLogDate()=0;
	virtual const char * getClusterGroup()=0;
	virtual const char * getPlainText()=0;
	virtual int getSlaveNumber()=0;
	virtual __int64 getSizeLimit()=0;
};

interface IEspWUFileOption : extends IConstWUFileOption
{
	virtual void setFileType(CWUFileType val)=0;
	virtual void setFileType(const char* val)=0;
	virtual void setName(const char * val)=0;
	virtual void setIPAddress(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setProcess(const char * val)=0;
	virtual void setLogDate(const char * val)=0;
	virtual void setClusterGroup(const char * val)=0;
	virtual void setPlainText(const char * val)=0;
	virtual void setSlaveNumber(int val)=0;
	virtual void setSizeLimit(__int64 val)=0;
	virtual void copy(IConstWUFileOption &from)=0;
};

interface IClientWUFileOption : extends IInterface
{
	virtual void setFileType(CWUFileType val)=0;
	virtual void setFileType(const char* val)=0;
	virtual void setName(const char * val)=0;
	virtual void setIPAddress(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setProcess(const char * val)=0;
	virtual void setLogDate(const char * val)=0;
	virtual void setClusterGroup(const char * val)=0;
	virtual void setPlainText(const char * val)=0;
	virtual void setSlaveNumber(int val)=0;
	virtual void setSizeLimit(__int64 val)=0;
	virtual CWUFileType getFileType()=0;
	virtual const char* getFileTypeAsString()=0;
	virtual const char * getName()=0;
	virtual const char * getIPAddress()=0;
	virtual const char * getDescription()=0;
	virtual const char * getProcess()=0;
	virtual const char * getLogDate()=0;
	virtual const char * getClusterGroup()=0;
	virtual const char * getPlainText()=0;
	virtual int getSlaveNumber()=0;
	virtual __int64 getSizeLimit()=0;
};



enum CWUFileDownloadOption { WUFileDownloadOption_Undefined=-1,CWUFileDownloadOption_OriginalText=0, CWUFileDownloadOption_Attachment=1, CWUFileDownloadOption_ZIP=2, CWUFileDownloadOption_GZIP=3, };
typedef ArrayOf<CWUFileDownloadOption> WUFileDownloadOptionArray;


interface IConstWUCreateRequest : extends IEspRequest
{
};

interface IEspWUCreateRequest : extends IConstWUCreateRequest
{
	virtual void copy(IConstWUCreateRequest &from)=0;
};

interface IClientWUCreateRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstWUCreateResponse : extends IEspResponse
{
	virtual IConstECLWorkunit & getWorkunit()=0;
};

interface IEspWUCreateResponse : extends IConstWUCreateResponse
{
	virtual IEspECLWorkunit & updateWorkunit()=0;
	virtual void setWorkunit(IConstECLWorkunit &ifrom)=0;
	virtual void copy(IConstWUCreateResponse &from)=0;
};

interface IClientWUCreateResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstECLWorkunit & getWorkunit()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUDeployWorkunitRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getName()=0;
	virtual bool getWait_isNull()=0;
	virtual int getWait()=0;
	virtual const char * getObjType()=0;
	virtual const char * getFileName()=0;
	virtual const MemoryBuffer & getObject()=0;
	virtual bool getResultLimit_isNull()=0;
	virtual int getResultLimit()=0;
	virtual const char * getQueryMainDefinition()=0;
	virtual const char * getSnapshot()=0;
	virtual IArrayOf<IConstNamedValue> & getDebugValues()=0;
};

interface IEspWUDeployWorkunitRequest : extends IConstWUDeployWorkunitRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void setObjType(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setObject(const MemoryBuffer & val)=0;
	virtual void setResultLimit_null()=0;
	virtual void setResultLimit(int val)=0;
	virtual void setQueryMainDefinition(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setDebugValues(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstNamedValue> &val)=0;
	virtual void copy(IConstWUDeployWorkunitRequest &from)=0;
};

interface IClientWUDeployWorkunitRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void setObjType(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setObject(const MemoryBuffer & val)=0;
	virtual void setResultLimit_null()=0;
	virtual void setResultLimit(int val)=0;
	virtual void setQueryMainDefinition(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setDebugValues(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstNamedValue> &val)=0;
};



interface IConstWUDeployWorkunitResponse : extends IEspResponse
{
	virtual IConstECLWorkunit & getWorkunit()=0;
};

interface IEspWUDeployWorkunitResponse : extends IConstWUDeployWorkunitResponse
{
	virtual IEspECLWorkunit & updateWorkunit()=0;
	virtual void setWorkunit(IConstECLWorkunit &ifrom)=0;
	virtual void copy(IConstWUDeployWorkunitResponse &from)=0;
};

interface IClientWUDeployWorkunitResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstECLWorkunit & getWorkunit()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUQueryRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getType()=0;
	virtual const char * getCluster()=0;
	virtual const char * getRoxieCluster()=0;
	virtual const char * getOwner()=0;
	virtual const char * getState()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual const char * getECL()=0;
	virtual const char * getJobname()=0;
	virtual const char * getLogicalFile()=0;
	virtual const char * getLogicalFileSearchType()=0;
	virtual const char * getApplicationName()=0;
	virtual const char * getApplicationKey()=0;
	virtual const char * getApplicationData()=0;
	virtual IArrayOf<IConstApplicationValue> & getApplicationValues()=0;
	virtual const char * getBeforeWU()=0;
	virtual const char * getAfterWU()=0;
	virtual const char * getAfter()=0;
	virtual const char * getBefore()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual bool getPageSize_isNull()=0;
	virtual __int64 getPageSize()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual bool getPageEndAt_isNull()=0;
	virtual __int64 getPageEndAt()=0;
	virtual bool getLastNDays_isNull()=0;
	virtual int getLastNDays()=0;
	virtual const char * getSortby()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspWUQueryRequest : extends IConstWUQueryRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setRoxieCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setECL(const char * val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setLogicalFile(const char * val)=0;
	virtual void setLogicalFileSearchType(const char * val)=0;
	virtual void setApplicationName(const char * val)=0;
	virtual void setApplicationKey(const char * val)=0;
	virtual void setApplicationData(const char * val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void setBeforeWU(const char * val)=0;
	virtual void setAfterWU(const char * val)=0;
	virtual void setAfter(const char * val)=0;
	virtual void setBefore(const char * val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(__int64 val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setPageEndAt_null()=0;
	virtual void setPageEndAt(__int64 val)=0;
	virtual void setLastNDays_null()=0;
	virtual void setLastNDays(int val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstWUQueryRequest &from)=0;
};

interface IClientWUQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setRoxieCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setECL(const char * val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setLogicalFile(const char * val)=0;
	virtual void setLogicalFileSearchType(const char * val)=0;
	virtual void setApplicationName(const char * val)=0;
	virtual void setApplicationKey(const char * val)=0;
	virtual void setApplicationData(const char * val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void setBeforeWU(const char * val)=0;
	virtual void setAfterWU(const char * val)=0;
	virtual void setAfter(const char * val)=0;
	virtual void setBefore(const char * val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(__int64 val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setPageEndAt_null()=0;
	virtual void setPageEndAt(__int64 val)=0;
	virtual void setLastNDays_null()=0;
	virtual void setLastNDays(int val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
};




interface IConstWUQueryResponse : extends IEspResponse
{
	virtual const char * getType()=0;
	virtual const char * getCluster()=0;
	virtual const char * getRoxieCluster()=0;
	virtual const char * getOwner()=0;
	virtual const char * getState()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual const char * getECL()=0;
	virtual const char * getJobname()=0;
	virtual const char * getLogicalFile()=0;
	virtual const char * getLogicalFileSearchType()=0;
	virtual const char * getCurrent()=0;
	virtual const char * getNext()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual bool getPageSize_isNull()=0;
	virtual __int64 getPageSize()=0;
	virtual bool getPrevPage_isNull()=0;
	virtual __int64 getPrevPage()=0;
	virtual bool getNextPage_isNull()=0;
	virtual __int64 getNextPage()=0;
	virtual bool getLastPage_isNull()=0;
	virtual __int64 getLastPage()=0;
	virtual bool getNumWUs_isNull()=0;
	virtual int getNumWUs()=0;
	virtual bool getFirst_isNull()=0;
	virtual bool getFirst()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual bool getPageEndAt_isNull()=0;
	virtual __int64 getPageEndAt()=0;
	virtual bool getLastNDays_isNull()=0;
	virtual int getLastNDays()=0;
	virtual const char * getSortby()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual const char * getBasicQuery()=0;
	virtual const char * getFilters()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
	virtual IArrayOf<IConstECLWorkunit> & getWorkunits()=0;
};

interface IEspWUQueryResponse : extends IConstWUQueryResponse
{
	virtual void setType(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setRoxieCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setECL(const char * val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setLogicalFile(const char * val)=0;
	virtual void setLogicalFileSearchType(const char * val)=0;
	virtual void setCurrent(const char * val)=0;
	virtual void setNext(const char * val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(int val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(__int64 val)=0;
	virtual void setPrevPage_null()=0;
	virtual void setPrevPage(__int64 val)=0;
	virtual void setNextPage_null()=0;
	virtual void setNextPage(__int64 val)=0;
	virtual void setLastPage_null()=0;
	virtual void setLastPage(__int64 val)=0;
	virtual void setNumWUs_null()=0;
	virtual void setNumWUs(int val)=0;
	virtual void setFirst_null()=0;
	virtual void setFirst(bool val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setPageEndAt_null()=0;
	virtual void setPageEndAt(__int64 val)=0;
	virtual void setLastNDays_null()=0;
	virtual void setLastNDays(int val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setBasicQuery(const char * val)=0;
	virtual void setFilters(const char * val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void setWorkunits(IArrayOf<IEspECLWorkunit> &val)=0;
	virtual void setWorkunits(IArrayOf<IConstECLWorkunit> &val)=0;
	virtual void copy(IConstWUQueryResponse &from)=0;
};

interface IClientWUQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getType()=0;
	virtual const char * getCluster()=0;
	virtual const char * getRoxieCluster()=0;
	virtual const char * getOwner()=0;
	virtual const char * getState()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual const char * getECL()=0;
	virtual const char * getJobname()=0;
	virtual const char * getLogicalFile()=0;
	virtual const char * getLogicalFileSearchType()=0;
	virtual const char * getCurrent()=0;
	virtual const char * getNext()=0;
	virtual bool getCount_isNull()=0;
	virtual int getCount()=0;
	virtual bool getPageSize_isNull()=0;
	virtual __int64 getPageSize()=0;
	virtual bool getPrevPage_isNull()=0;
	virtual __int64 getPrevPage()=0;
	virtual bool getNextPage_isNull()=0;
	virtual __int64 getNextPage()=0;
	virtual bool getLastPage_isNull()=0;
	virtual __int64 getLastPage()=0;
	virtual bool getNumWUs_isNull()=0;
	virtual int getNumWUs()=0;
	virtual bool getFirst_isNull()=0;
	virtual bool getFirst()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual bool getPageEndAt_isNull()=0;
	virtual __int64 getPageEndAt()=0;
	virtual bool getLastNDays_isNull()=0;
	virtual int getLastNDays()=0;
	virtual const char * getSortby()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual const char * getBasicQuery()=0;
	virtual const char * getFilters()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
	virtual IArrayOf<IConstECLWorkunit> & getWorkunits()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWULightWeightQueryRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getType()=0;
	virtual const char * getCluster()=0;
	virtual const char * getOwner()=0;
	virtual const char * getJobName()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual const char * getBeforeWU()=0;
	virtual const char * getAfterWU()=0;
	virtual const char * getState()=0;
	virtual IArrayOf<IConstApplicationValue> & getApplicationValues()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual bool getPageSize_isNull()=0;
	virtual unsigned int getPageSize()=0;
	virtual const char * getSortBy()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspWULightWeightQueryRequest : extends IConstWULightWeightQueryRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setBeforeWU(const char * val)=0;
	virtual void setAfterWU(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setSortBy(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstWULightWeightQueryRequest &from)=0;
};

interface IClientWULightWeightQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setBeforeWU(const char * val)=0;
	virtual void setAfterWU(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setSortBy(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
};




interface IConstWULightWeightQueryResponse : extends IEspResponse
{
	virtual bool getNumWUs_isNull()=0;
	virtual int getNumWUs()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
	virtual IArrayOf<IConstECLWorkunitLW> & getWorkunits()=0;
};

interface IEspWULightWeightQueryResponse : extends IConstWULightWeightQueryResponse
{
	virtual void setNumWUs_null()=0;
	virtual void setNumWUs(int val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void setWorkunits(IArrayOf<IEspECLWorkunitLW> &val)=0;
	virtual void setWorkunits(IArrayOf<IConstECLWorkunitLW> &val)=0;
	virtual void copy(IConstWULightWeightQueryResponse &from)=0;
};

interface IClientWULightWeightQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNumWUs_isNull()=0;
	virtual int getNumWUs()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
	virtual IArrayOf<IConstECLWorkunitLW> & getWorkunits()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUUpdateRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual bool getState_isNull()=0;
	virtual int getState()=0;
	virtual bool getStateOrig_isNull()=0;
	virtual int getStateOrig()=0;
	virtual const char * getJobname()=0;
	virtual const char * getJobnameOrig()=0;
	virtual const char * getQueryText()=0;
	virtual bool getAction_isNull()=0;
	virtual int getAction()=0;
	virtual const char * getDescription()=0;
	virtual const char * getDescriptionOrig()=0;
	virtual bool getAddDrilldownFields_isNull()=0;
	virtual bool getAddDrilldownFields()=0;
	virtual bool getResultLimit_isNull()=0;
	virtual int getResultLimit()=0;
	virtual bool getProtected_isNull()=0;
	virtual bool getProtected()=0;
	virtual bool getProtectedOrig_isNull()=0;
	virtual bool getProtectedOrig()=0;
	virtual bool getPriorityClass_isNull()=0;
	virtual int getPriorityClass()=0;
	virtual bool getPriorityLevel_isNull()=0;
	virtual int getPriorityLevel()=0;
	virtual const char * getScope()=0;
	virtual const char * getScopeOrig()=0;
	virtual const char * getClusterSelection()=0;
	virtual const char * getClusterOrig()=0;
	virtual const char * getXmlParams()=0;
	virtual const char * getThorSlaveIP()=0;
	virtual const char * getQueryMainDefinition()=0;
	virtual IArrayOf<IConstDebugValue> & getDebugValues()=0;
	virtual IArrayOf<IConstApplicationValue> & getApplicationValues()=0;
};

interface IEspWUUpdateRequest : extends IConstWUUpdateRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setState_null()=0;
	virtual void setState(int val)=0;
	virtual void setStateOrig_null()=0;
	virtual void setStateOrig(int val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setJobnameOrig(const char * val)=0;
	virtual void setQueryText(const char * val)=0;
	virtual void setAction_null()=0;
	virtual void setAction(int val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setDescriptionOrig(const char * val)=0;
	virtual void setAddDrilldownFields_null()=0;
	virtual void setAddDrilldownFields(bool val)=0;
	virtual void setResultLimit_null()=0;
	virtual void setResultLimit(int val)=0;
	virtual void setProtected_null()=0;
	virtual void setProtected(bool val)=0;
	virtual void setProtectedOrig_null()=0;
	virtual void setProtectedOrig(bool val)=0;
	virtual void setPriorityClass_null()=0;
	virtual void setPriorityClass(int val)=0;
	virtual void setPriorityLevel_null()=0;
	virtual void setPriorityLevel(int val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setScopeOrig(const char * val)=0;
	virtual void setClusterSelection(const char * val)=0;
	virtual void setClusterOrig(const char * val)=0;
	virtual void setXmlParams(const char * val)=0;
	virtual void setThorSlaveIP(const char * val)=0;
	virtual void setQueryMainDefinition(const char * val)=0;
	virtual void setDebugValues(IArrayOf<IEspDebugValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstDebugValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void copy(IConstWUUpdateRequest &from)=0;
};

interface IClientWUUpdateRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setState_null()=0;
	virtual void setState(int val)=0;
	virtual void setStateOrig_null()=0;
	virtual void setStateOrig(int val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setJobnameOrig(const char * val)=0;
	virtual void setQueryText(const char * val)=0;
	virtual void setAction_null()=0;
	virtual void setAction(int val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setDescriptionOrig(const char * val)=0;
	virtual void setAddDrilldownFields_null()=0;
	virtual void setAddDrilldownFields(bool val)=0;
	virtual void setResultLimit_null()=0;
	virtual void setResultLimit(int val)=0;
	virtual void setProtected_null()=0;
	virtual void setProtected(bool val)=0;
	virtual void setProtectedOrig_null()=0;
	virtual void setProtectedOrig(bool val)=0;
	virtual void setPriorityClass_null()=0;
	virtual void setPriorityClass(int val)=0;
	virtual void setPriorityLevel_null()=0;
	virtual void setPriorityLevel(int val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setScopeOrig(const char * val)=0;
	virtual void setClusterSelection(const char * val)=0;
	virtual void setClusterOrig(const char * val)=0;
	virtual void setXmlParams(const char * val)=0;
	virtual void setThorSlaveIP(const char * val)=0;
	virtual void setQueryMainDefinition(const char * val)=0;
	virtual void setDebugValues(IArrayOf<IEspDebugValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstDebugValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
};



interface IConstWUUpdateResponse : extends IEspResponse
{
	virtual IConstECLWorkunit & getWorkunit()=0;
};

interface IEspWUUpdateResponse : extends IConstWUUpdateResponse
{
	virtual IEspECLWorkunit & updateWorkunit()=0;
	virtual void setWorkunit(IConstECLWorkunit &ifrom)=0;
	virtual void copy(IConstWUUpdateResponse &from)=0;
};

interface IClientWUUpdateResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstECLWorkunit & getWorkunit()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUDeleteRequest : extends IEspRequest
{
	virtual StringArray & getWuids()=0;
	virtual int getBlockTillFinishTimer()=0;
};

interface IEspWUDeleteRequest : extends IConstWUDeleteRequest
{
	virtual void setWuids(StringArray &val)=0;
	virtual void setBlockTillFinishTimer(int val)=0;
	virtual void copy(IConstWUDeleteRequest &from)=0;
};

interface IClientWUDeleteRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuids(StringArray &val)=0;
	virtual void setBlockTillFinishTimer(int val)=0;
};



interface IConstWUDeleteResponse : extends IEspResponse
{
	virtual IArrayOf<IConstWUActionResult> & getActionResults()=0;
};

interface IEspWUDeleteResponse : extends IConstWUDeleteResponse
{
	virtual void setActionResults(IArrayOf<IEspWUActionResult> &val)=0;
	virtual void setActionResults(IArrayOf<IConstWUActionResult> &val)=0;
	virtual void copy(IConstWUDeleteResponse &from)=0;
};

interface IClientWUDeleteResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstWUActionResult> & getActionResults()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWUActionRequest : extends IEspRequest
{
	virtual StringArray & getWuids()=0;
	virtual const char * getActionType()=0;
	virtual CECLWUActions getWUActionType()=0;
	virtual const char* getWUActionTypeAsString()=0;
	virtual const char * getCluster()=0;
	virtual const char * getOwner()=0;
	virtual const char * getState()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual const char * getECL()=0;
	virtual const char * getJobname()=0;
	virtual const char * getTest()=0;
	virtual const char * getCurrentPage()=0;
	virtual const char * getPageSize()=0;
	virtual const char * getSortby()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual const char * getEventServer()=0;
	virtual const char * getEventName()=0;
	virtual const char * getPageFrom()=0;
	virtual bool getBlockTillFinishTimer_isNull()=0;
	virtual int getBlockTillFinishTimer()=0;
};

interface IEspWUActionRequest : extends IConstWUActionRequest
{
	virtual void setWuids(StringArray &val)=0;
	virtual void setActionType(const char * val)=0;
	virtual void setWUActionType(CECLWUActions val)=0;
	virtual void setWUActionType(const char* val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setECL(const char * val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setTest(const char * val)=0;
	virtual void setCurrentPage(const char * val)=0;
	virtual void setPageSize(const char * val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setEventServer(const char * val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setPageFrom(const char * val)=0;
	virtual void setBlockTillFinishTimer_null()=0;
	virtual void setBlockTillFinishTimer(int val)=0;
	virtual void copy(IConstWUActionRequest &from)=0;
};

interface IClientWUActionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuids(StringArray &val)=0;
	virtual void setActionType(const char * val)=0;
	virtual void setWUActionType(CECLWUActions val)=0;
	virtual void setWUActionType(const char* val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setECL(const char * val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void setTest(const char * val)=0;
	virtual void setCurrentPage(const char * val)=0;
	virtual void setPageSize(const char * val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setEventServer(const char * val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setPageFrom(const char * val)=0;
	virtual void setBlockTillFinishTimer_null()=0;
	virtual void setBlockTillFinishTimer(int val)=0;
};



interface IConstWUActionResponse : extends IEspResponse
{
	virtual IArrayOf<IConstWUActionResult> & getActionResults()=0;
};

interface IEspWUActionResponse : extends IConstWUActionResponse
{
	virtual void setActionResults(IArrayOf<IEspWUActionResult> &val)=0;
	virtual void setActionResults(IArrayOf<IConstWUActionResult> &val)=0;
	virtual void copy(IConstWUActionResponse &from)=0;
};

interface IClientWUActionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstWUActionResult> & getActionResults()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUAbortRequest : extends IEspRequest
{
	virtual StringArray & getWuids()=0;
	virtual int getBlockTillFinishTimer()=0;
};

interface IEspWUAbortRequest : extends IConstWUAbortRequest
{
	virtual void setWuids(StringArray &val)=0;
	virtual void setBlockTillFinishTimer(int val)=0;
	virtual void copy(IConstWUAbortRequest &from)=0;
};

interface IClientWUAbortRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuids(StringArray &val)=0;
	virtual void setBlockTillFinishTimer(int val)=0;
};



interface IConstWUAbortResponse : extends IEspResponse
{
	virtual IArrayOf<IConstWUActionResult> & getActionResults()=0;
};

interface IEspWUAbortResponse : extends IConstWUAbortResponse
{
	virtual void setActionResults(IArrayOf<IEspWUActionResult> &val)=0;
	virtual void setActionResults(IArrayOf<IConstWUActionResult> &val)=0;
	virtual void copy(IConstWUAbortResponse &from)=0;
};

interface IClientWUAbortResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstWUActionResult> & getActionResults()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUProtectRequest : extends IEspRequest
{
	virtual StringArray & getWuids()=0;
	virtual bool getProtect()=0;
};

interface IEspWUProtectRequest : extends IConstWUProtectRequest
{
	virtual void setWuids(StringArray &val)=0;
	virtual void setProtect(bool val)=0;
	virtual void copy(IConstWUProtectRequest &from)=0;
};

interface IClientWUProtectRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuids(StringArray &val)=0;
	virtual void setProtect(bool val)=0;
};



interface IConstWUProtectResponse : extends IEspResponse
{
	virtual IArrayOf<IConstWUActionResult> & getActionResults()=0;
};

interface IEspWUProtectResponse : extends IConstWUProtectResponse
{
	virtual void setActionResults(IArrayOf<IEspWUActionResult> &val)=0;
	virtual void setActionResults(IArrayOf<IConstWUActionResult> &val)=0;
	virtual void copy(IConstWUProtectResponse &from)=0;
};

interface IClientWUProtectResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstWUActionResult> & getActionResults()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUResubmitRequest : extends IEspRequest
{
	virtual StringArray & getWuids()=0;
	virtual bool getRecompile()=0;
	virtual int getBlockTillFinishTimer()=0;
	virtual bool getResetWorkflow()=0;
	virtual bool getCloneWorkunit()=0;
};

interface IEspWUResubmitRequest : extends IConstWUResubmitRequest
{
	virtual void setWuids(StringArray &val)=0;
	virtual void setRecompile(bool val)=0;
	virtual void setBlockTillFinishTimer(int val)=0;
	virtual void setResetWorkflow(bool val)=0;
	virtual void setCloneWorkunit(bool val)=0;
	virtual void copy(IConstWUResubmitRequest &from)=0;
};

interface IClientWUResubmitRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuids(StringArray &val)=0;
	virtual void setRecompile(bool val)=0;
	virtual void setBlockTillFinishTimer(int val)=0;
	virtual void setResetWorkflow(bool val)=0;
	virtual void setCloneWorkunit(bool val)=0;
};



interface IConstWUResubmitResponse : extends IEspResponse
{
	virtual IArrayOf<IConstResubmittedWU> & getWUs()=0;
};

interface IEspWUResubmitResponse : extends IConstWUResubmitResponse
{
	virtual void setWUs(IArrayOf<IEspResubmittedWU> &val)=0;
	virtual void setWUs(IArrayOf<IConstResubmittedWU> &val)=0;
	virtual void copy(IConstWUResubmitResponse &from)=0;
};

interface IClientWUResubmitResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstResubmittedWU> & getWUs()=0;

	virtual const IMultiException& getExceptions()=0;
};



enum CWUQueryActivationMode { WUQueryActivationMode_Undefined=-1,CWUQueryActivationMode_NoActivate=0, CWUQueryActivationMode_Activate=1, CWUQueryActivationMode_ActivateSuspendPrevious=2, CWUQueryActivationMode_ActivateDeletePrevious=3, };
typedef ArrayOf<CWUQueryActivationMode> WUQueryActivationModeArray;


interface IConstWURecreateQueryRequest : extends IEspRequest
{
	virtual const char * getTarget()=0;
	virtual const char * getQueryId()=0;
	virtual IArrayOf<IConstNamedValue> & getDebugValues()=0;
	virtual const char * getDestTarget()=0;
	virtual bool getRepublish_isNull()=0;
	virtual bool getRepublish()=0;
	virtual CWUQueryActivationMode getActivate()=0;
	virtual const char* getActivateAsString()=0;
	virtual bool getNoReload_isNull()=0;
	virtual bool getNoReload()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual unsigned int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual unsigned int getWarnTimeLimit()=0;
	virtual const char * getPriority()=0;
	virtual const char * getComment()=0;
	virtual const char * getRemoteDali()=0;
	virtual bool getDontCopyFiles_isNull()=0;
	virtual bool getDontCopyFiles()=0;
	virtual const char * getSourceProcess()=0;
	virtual bool getAllowForeignFiles_isNull()=0;
	virtual bool getAllowForeignFiles()=0;
	virtual bool getUpdateDfs_isNull()=0;
	virtual bool getUpdateDfs()=0;
	virtual bool getUpdateSuperFiles_isNull()=0;
	virtual bool getUpdateSuperFiles()=0;
	virtual bool getUpdateCloneFrom_isNull()=0;
	virtual bool getUpdateCloneFrom()=0;
	virtual bool getAppendCluster_isNull()=0;
	virtual bool getAppendCluster()=0;
	virtual bool getIncludeFileErrors_isNull()=0;
	virtual bool getIncludeFileErrors()=0;
	virtual bool getWait_isNull()=0;
	virtual int getWait()=0;
};

interface IEspWURecreateQueryRequest : extends IConstWURecreateQueryRequest
{
	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setDebugValues(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setDestTarget(const char * val)=0;
	virtual void setRepublish_null()=0;
	virtual void setRepublish(bool val)=0;
	virtual void setActivate(CWUQueryActivationMode val)=0;
	virtual void setActivate(const char* val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setRemoteDali(const char * val)=0;
	virtual void setDontCopyFiles_null()=0;
	virtual void setDontCopyFiles(bool val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setAllowForeignFiles_null()=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setUpdateDfs_null()=0;
	virtual void setUpdateDfs(bool val)=0;
	virtual void setUpdateSuperFiles_null()=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster_null()=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors_null()=0;
	virtual void setIncludeFileErrors(bool val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void copy(IConstWURecreateQueryRequest &from)=0;
};

interface IClientWURecreateQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setDebugValues(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setDestTarget(const char * val)=0;
	virtual void setRepublish_null()=0;
	virtual void setRepublish(bool val)=0;
	virtual void setActivate(CWUQueryActivationMode val)=0;
	virtual void setActivate(const char* val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setRemoteDali(const char * val)=0;
	virtual void setDontCopyFiles_null()=0;
	virtual void setDontCopyFiles(bool val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setAllowForeignFiles_null()=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setUpdateDfs_null()=0;
	virtual void setUpdateDfs(bool val)=0;
	virtual void setUpdateSuperFiles_null()=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster_null()=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors_null()=0;
	virtual void setIncludeFileErrors(bool val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
};



interface IConstWURecreateQueryResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getQueryId()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual unsigned int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual unsigned int getWarnTimeLimit()=0;
	virtual const char * getPriority()=0;
	virtual const char * getComment()=0;
	virtual bool getReloadFailed_isNull()=0;
	virtual bool getReloadFailed()=0;
	virtual bool getSuspended_isNull()=0;
	virtual bool getSuspended()=0;
	virtual const char * getErrorMessage()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;
};

interface IEspWURecreateQueryResponse : extends IConstWURecreateQueryResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setQueryName(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setReloadFailed_null()=0;
	virtual void setReloadFailed(bool val)=0;
	virtual void setSuspended_null()=0;
	virtual void setSuspended(bool val)=0;
	virtual void setErrorMessage(const char * val)=0;
	virtual void setFileErrors(IArrayOf<IEspLogicalFileError> &val)=0;
	virtual void setFileErrors(IArrayOf<IConstLogicalFileError> &val)=0;
	virtual void copy(IConstWURecreateQueryResponse &from)=0;
};

interface IClientWURecreateQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getQueryId()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual unsigned int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual unsigned int getWarnTimeLimit()=0;
	virtual const char * getPriority()=0;
	virtual const char * getComment()=0;
	virtual bool getReloadFailed_isNull()=0;
	virtual bool getReloadFailed()=0;
	virtual bool getSuspended_isNull()=0;
	virtual bool getSuspended()=0;
	virtual const char * getErrorMessage()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;

	virtual const IMultiException& getExceptions()=0;
};



enum CWUExceptionSeverity { WUExceptionSeverity_Undefined=-1,CWUExceptionSeverity_INFO, CWUExceptionSeverity_WARNING, CWUExceptionSeverity_ERROR, CWUExceptionSeverity_ALERT, };
typedef ArrayOf<CWUExceptionSeverity> WUExceptionSeverityArray;


interface IConstWURunRequest : extends IEspRequest
{
	virtual const char * getQuerySet()=0;
	virtual const char * getQuery()=0;
	virtual const char * getWuid()=0;
	virtual bool getCloneWorkunit()=0;
	virtual const char * getCluster()=0;
	virtual int getWait()=0;
	virtual const char * getInput()=0;
	virtual bool getNoRootTag()=0;
	virtual IArrayOf<IConstNamedValue> & getDebugValues()=0;
	virtual IArrayOf<IConstNamedValue> & getVariables()=0;
	virtual IArrayOf<IConstApplicationValue> & getApplicationValues()=0;
	virtual CWUExceptionSeverity getExceptionSeverity()=0;
	virtual const char* getExceptionSeverityAsString()=0;
};

interface IEspWURunRequest : extends IConstWURunRequest
{
	virtual void setQuerySet(const char * val)=0;
	virtual void setQuery(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setCloneWorkunit(bool val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setWait(int val)=0;
	virtual void setInput(const char * val)=0;
	virtual void setNoRootTag(bool val)=0;
	virtual void setDebugValues(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setVariables(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setVariables(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void setExceptionSeverity(CWUExceptionSeverity val)=0;
	virtual void setExceptionSeverity(const char* val)=0;
	virtual void copy(IConstWURunRequest &from)=0;
};

interface IClientWURunRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setQuerySet(const char * val)=0;
	virtual void setQuery(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setCloneWorkunit(bool val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setWait(int val)=0;
	virtual void setInput(const char * val)=0;
	virtual void setNoRootTag(bool val)=0;
	virtual void setDebugValues(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setVariables(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setVariables(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IEspApplicationValue> &val)=0;
	virtual void setApplicationValues(IArrayOf<IConstApplicationValue> &val)=0;
	virtual void setExceptionSeverity(CWUExceptionSeverity val)=0;
	virtual void setExceptionSeverity(const char* val)=0;
};



interface IConstWURunResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getState()=0;
	virtual const char * getResults()=0;
};

interface IEspWURunResponse : extends IConstWURunResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setResults(const char * val)=0;
	virtual void copy(IConstWURunResponse &from)=0;
};

interface IClientWURunResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getState()=0;
	virtual const char * getResults()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUSubmitRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getCluster()=0;
	virtual const char * getQueue()=0;
	virtual const char * getSnapshot()=0;
	virtual int getMaxRunTime()=0;
	virtual int getBlockTillFinishTimer()=0;
	virtual bool getSyntaxCheck()=0;
	virtual bool getNotifyCluster()=0;
};

interface IEspWUSubmitRequest : extends IConstWUSubmitRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setMaxRunTime(int val)=0;
	virtual void setBlockTillFinishTimer(int val)=0;
	virtual void setSyntaxCheck(bool val)=0;
	virtual void setNotifyCluster(bool val)=0;
	virtual void copy(IConstWUSubmitRequest &from)=0;
};

interface IClientWUSubmitRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setMaxRunTime(int val)=0;
	virtual void setBlockTillFinishTimer(int val)=0;
	virtual void setSyntaxCheck(bool val)=0;
	virtual void setNotifyCluster(bool val)=0;
};



interface IConstWUSubmitResponse : extends IEspResponse
{
};

interface IEspWUSubmitResponse : extends IConstWUSubmitResponse
{
	virtual void copy(IConstWUSubmitResponse &from)=0;
};

interface IClientWUSubmitResponse : extends IInterface
{

	virtual int queryClientStatus()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUScheduleRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getCluster()=0;
	virtual const char * getQueue()=0;
	virtual const char * getSnapshot()=0;
	virtual const char * getWhen()=0;
	virtual int getMaxRunTime()=0;
};

interface IEspWUScheduleRequest : extends IConstWUScheduleRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setWhen(const char * val)=0;
	virtual void setMaxRunTime(int val)=0;
	virtual void copy(IConstWUScheduleRequest &from)=0;
};

interface IClientWUScheduleRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setWhen(const char * val)=0;
	virtual void setMaxRunTime(int val)=0;
};



interface IConstWUScheduleResponse : extends IEspResponse
{
};

interface IEspWUScheduleResponse : extends IConstWUScheduleResponse
{
	virtual void copy(IConstWUScheduleResponse &from)=0;
};

interface IClientWUScheduleResponse : extends IInterface
{

	virtual int queryClientStatus()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUPushEventRequest : extends IEspRequest
{
	virtual const char * getEventName()=0;
	virtual const char * getEventText()=0;
};

interface IEspWUPushEventRequest : extends IConstWUPushEventRequest
{
	virtual void setEventName(const char * val)=0;
	virtual void setEventText(const char * val)=0;
	virtual void copy(IConstWUPushEventRequest &from)=0;
};

interface IClientWUPushEventRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setEventName(const char * val)=0;
	virtual void setEventText(const char * val)=0;
};



interface IConstWUPushEventResponse : extends IEspResponse
{
};

interface IEspWUPushEventResponse : extends IConstWUPushEventResponse
{
	virtual void copy(IConstWUPushEventResponse &from)=0;
};

interface IClientWUPushEventResponse : extends IInterface
{

	virtual int queryClientStatus()=0;

	virtual const IMultiException& getExceptions()=0;
};



enum WUINFOType
{
	WUGRAPHS = 0,
	WUTIMINGS = 1,
	WUACTIONS = 2,
	WURESULTS = 3
};



interface IConstWUInfoRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual bool getTruncateEclTo64k()=0;
	virtual const char * getType()=0;
	virtual bool getIncludeExceptions()=0;
	virtual bool getIncludeGraphs()=0;
	virtual bool getIncludeSourceFiles()=0;
	virtual bool getIncludeResults()=0;
	virtual bool getIncludeResultsViewNames()=0;
	virtual bool getIncludeVariables()=0;
	virtual bool getIncludeTimers()=0;
	virtual bool getIncludeDebugValues()=0;
	virtual bool getIncludeApplicationValues()=0;
	virtual bool getIncludeWorkflows()=0;
	virtual bool getIncludeXmlSchemas()=0;
	virtual bool getIncludeResourceURLs()=0;
	virtual bool getIncludeECL()=0;
	virtual bool getIncludeHelpers()=0;
	virtual bool getIncludeAllowedClusters()=0;
	virtual bool getIncludeTotalClusterTime()=0;
	virtual bool getSuppressResultSchemas()=0;
	virtual const char * getThorSlaveIP()=0;
};

interface IEspWUInfoRequest : extends IConstWUInfoRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setTruncateEclTo64k(bool val)=0;
	virtual void setType(const char * val)=0;
	virtual void setIncludeExceptions(bool val)=0;
	virtual void setIncludeGraphs(bool val)=0;
	virtual void setIncludeSourceFiles(bool val)=0;
	virtual void setIncludeResults(bool val)=0;
	virtual void setIncludeResultsViewNames(bool val)=0;
	virtual void setIncludeVariables(bool val)=0;
	virtual void setIncludeTimers(bool val)=0;
	virtual void setIncludeDebugValues(bool val)=0;
	virtual void setIncludeApplicationValues(bool val)=0;
	virtual void setIncludeWorkflows(bool val)=0;
	virtual void setIncludeXmlSchemas(bool val)=0;
	virtual void setIncludeResourceURLs(bool val)=0;
	virtual void setIncludeECL(bool val)=0;
	virtual void setIncludeHelpers(bool val)=0;
	virtual void setIncludeAllowedClusters(bool val)=0;
	virtual void setIncludeTotalClusterTime(bool val)=0;
	virtual void setSuppressResultSchemas(bool val)=0;
	virtual void setThorSlaveIP(const char * val)=0;
	virtual void copy(IConstWUInfoRequest &from)=0;
};

interface IClientWUInfoRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setTruncateEclTo64k(bool val)=0;
	virtual void setType(const char * val)=0;
	virtual void setIncludeExceptions(bool val)=0;
	virtual void setIncludeGraphs(bool val)=0;
	virtual void setIncludeSourceFiles(bool val)=0;
	virtual void setIncludeResults(bool val)=0;
	virtual void setIncludeResultsViewNames(bool val)=0;
	virtual void setIncludeVariables(bool val)=0;
	virtual void setIncludeTimers(bool val)=0;
	virtual void setIncludeDebugValues(bool val)=0;
	virtual void setIncludeApplicationValues(bool val)=0;
	virtual void setIncludeWorkflows(bool val)=0;
	virtual void setIncludeXmlSchemas(bool val)=0;
	virtual void setIncludeResourceURLs(bool val)=0;
	virtual void setIncludeECL(bool val)=0;
	virtual void setIncludeHelpers(bool val)=0;
	virtual void setIncludeAllowedClusters(bool val)=0;
	virtual void setIncludeTotalClusterTime(bool val)=0;
	virtual void setSuppressResultSchemas(bool val)=0;
	virtual void setThorSlaveIP(const char * val)=0;
};



interface IConstWUInfoResponse : extends IEspResponse
{
	virtual IConstECLWorkunit & getWorkunit()=0;
	virtual int getAutoRefresh()=0;
	virtual bool getCanCompile()=0;
	virtual const char * getThorSlaveIP()=0;
	virtual StringArray & getResultViews()=0;
	virtual const char * getSecMethod()=0;
};

interface IEspWUInfoResponse : extends IConstWUInfoResponse
{
	virtual IEspECLWorkunit & updateWorkunit()=0;
	virtual void setWorkunit(IConstECLWorkunit &ifrom)=0;
	virtual void setAutoRefresh(int val)=0;
	virtual void setCanCompile(bool val)=0;
	virtual void setThorSlaveIP(const char * val)=0;
	virtual void setResultViews(StringArray &val)=0;
	virtual void setSecMethod(const char * val)=0;
	virtual void copy(IConstWUInfoResponse &from)=0;
};

interface IClientWUInfoResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstECLWorkunit & getWorkunit()=0;
	virtual int getAutoRefresh()=0;
	virtual bool getCanCompile()=0;
	virtual const char * getThorSlaveIP()=0;
	virtual StringArray & getResultViews()=0;
	virtual const char * getSecMethod()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUResultSummaryRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual int getSequence()=0;
};

interface IEspWUResultSummaryRequest : extends IConstWUResultSummaryRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void copy(IConstWUResultSummaryRequest &from)=0;
};

interface IClientWUResultSummaryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setSequence(int val)=0;
};



interface IConstWUResultSummaryResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual int getSequence()=0;
	virtual int getFormat()=0;
	virtual IConstECLResult & getResult()=0;
};

interface IEspWUResultSummaryResponse : extends IConstWUResultSummaryResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setFormat(int val)=0;
	virtual IEspECLResult & updateResult()=0;
	virtual void setResult(IConstECLResult &ifrom)=0;
	virtual void copy(IConstWUResultSummaryResponse &from)=0;
};

interface IClientWUResultSummaryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual int getSequence()=0;
	virtual int getFormat()=0;
	virtual IConstECLResult & getResult()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWULogFileRequest : extends IEspRequest
{
	virtual const char * getName()=0;
	virtual const char * getWuid()=0;
	virtual const char * getType()=0;
	virtual int getOption()=0;
	virtual const char * getSlaveIP()=0;
	virtual const char * getIPAddress()=0;
	virtual const char * getDescription()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQuery()=0;
	virtual const char * getProcess()=0;
	virtual const char * getClusterGroup()=0;
	virtual const char * getLogDate()=0;
	virtual int getSlaveNumber()=0;
	virtual __int64 getSizeLimit()=0;
	virtual const char * getPlainText()=0;
};

interface IEspWULogFileRequest : extends IConstWULogFileRequest
{
	virtual void setName(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setOption(int val)=0;
	virtual void setSlaveIP(const char * val)=0;
	virtual void setIPAddress(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setQuery(const char * val)=0;
	virtual void setProcess(const char * val)=0;
	virtual void setClusterGroup(const char * val)=0;
	virtual void setLogDate(const char * val)=0;
	virtual void setSlaveNumber(int val)=0;
	virtual void setSizeLimit(__int64 val)=0;
	virtual void setPlainText(const char * val)=0;
	virtual void copy(IConstWULogFileRequest &from)=0;
};

interface IClientWULogFileRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setName(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void setOption(int val)=0;
	virtual void setSlaveIP(const char * val)=0;
	virtual void setIPAddress(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setQuery(const char * val)=0;
	virtual void setProcess(const char * val)=0;
	virtual void setClusterGroup(const char * val)=0;
	virtual void setLogDate(const char * val)=0;
	virtual void setSlaveNumber(int val)=0;
	virtual void setSizeLimit(__int64 val)=0;
	virtual void setPlainText(const char * val)=0;
};



interface IConstWULogFileResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getQueryId()=0;
	virtual const char * getFileName()=0;
	virtual const char * getDaliServer()=0;
	virtual const char *getThefile_mimetype()=0;
	virtual const MemoryBuffer & getThefile()=0;
};

interface IEspWULogFileResponse : extends IConstWULogFileResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setQueryName(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setDaliServer(const char * val)=0;
	virtual void setThefile_mimetype(const char *  val)=0;
	virtual void setThefile(const MemoryBuffer & val)=0;
	virtual void copy(IConstWULogFileResponse &from)=0;
};

interface IClientWULogFileResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getQueryId()=0;
	virtual const char * getFileName()=0;
	virtual const char * getDaliServer()=0;
	virtual const char *getThefile_mimetype()=0;
	virtual const MemoryBuffer & getThefile()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUDownloadFilesRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQuery()=0;
	virtual CWUFileDownloadOption getDownloadOption()=0;
	virtual const char* getDownloadOptionAsString()=0;
	virtual IArrayOf<IConstWUFileOption> & getWUFileOptions()=0;
};

interface IEspWUDownloadFilesRequest : extends IConstWUDownloadFilesRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setQuery(const char * val)=0;
	virtual void setDownloadOption(CWUFileDownloadOption val)=0;
	virtual void setDownloadOption(const char* val)=0;
	virtual void setWUFileOptions(IArrayOf<IEspWUFileOption> &val)=0;
	virtual void setWUFileOptions(IArrayOf<IConstWUFileOption> &val)=0;
	virtual void copy(IConstWUDownloadFilesRequest &from)=0;
};

interface IClientWUDownloadFilesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setQuery(const char * val)=0;
	virtual void setDownloadOption(CWUFileDownloadOption val)=0;
	virtual void setDownloadOption(const char* val)=0;
	virtual void setWUFileOptions(IArrayOf<IEspWUFileOption> &val)=0;
	virtual void setWUFileOptions(IArrayOf<IConstWUFileOption> &val)=0;
};



interface IConstWUDownloadFilesResponse : extends IEspResponse
{
	virtual const char *getThefile_mimetype()=0;
	virtual const MemoryBuffer & getThefile()=0;
};

interface IEspWUDownloadFilesResponse : extends IConstWUDownloadFilesResponse
{
	virtual void setThefile_mimetype(const char *  val)=0;
	virtual void setThefile(const MemoryBuffer & val)=0;
	virtual void copy(IConstWUDownloadFilesResponse &from)=0;
};

interface IClientWUDownloadFilesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char *getThefile_mimetype()=0;
	virtual const MemoryBuffer & getThefile()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUResultBinRequest : extends IEspRequest
{
	virtual const char * getLogicalName()=0;
	virtual const char * getWuid()=0;
	virtual const char * getResultName()=0;
	virtual int getSequence()=0;
	virtual const char * getFormat()=0;
	virtual const char * getCluster()=0;
	virtual IArrayOf<IConstNamedValue> & getFilterBy()=0;
	virtual __int64 getStart()=0;
	virtual int getCount()=0;
};

interface IEspWUResultBinRequest : extends IConstWUResultBinRequest
{
	virtual void setLogicalName(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setResultName(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setFormat(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setFilterBy(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setFilterBy(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setStart(__int64 val)=0;
	virtual void setCount(int val)=0;
	virtual void copy(IConstWUResultBinRequest &from)=0;
};

interface IClientWUResultBinRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setLogicalName(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setResultName(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setFormat(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setFilterBy(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setFilterBy(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setStart(__int64 val)=0;
	virtual void setCount(int val)=0;
};



interface IConstWUResultBinResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual int getSequence()=0;
	virtual const char * getName()=0;
	virtual __int64 getStart()=0;
	virtual int getCount()=0;
	virtual int getRequested()=0;
	virtual __int64 getTotal()=0;
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;
	virtual const char * getFormat()=0;
};

interface IEspWUResultBinResponse : extends IConstWUResultBinResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setName(const char * val)=0;
	virtual void setStart(__int64 val)=0;
	virtual void setCount(int val)=0;
	virtual void setRequested(int val)=0;
	virtual void setTotal(__int64 val)=0;
	virtual void setResult_mimetype(const char *  val)=0;
	virtual void setResult(const MemoryBuffer & val)=0;
	virtual void setFormat(const char * val)=0;
	virtual void copy(IConstWUResultBinResponse &from)=0;
};

interface IClientWUResultBinResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual int getSequence()=0;
	virtual const char * getName()=0;
	virtual __int64 getStart()=0;
	virtual int getCount()=0;
	virtual int getRequested()=0;
	virtual __int64 getTotal()=0;
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;
	virtual const char * getFormat()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUResultRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual int getSequence()=0;
	virtual const char * getResultName()=0;
	virtual const char * getLogicalName()=0;
	virtual const char * getCluster()=0;
	virtual bool getSuppressXmlSchema()=0;
	virtual bool getBypassCachedResult()=0;
	virtual IArrayOf<IConstNamedValue> & getFilterBy()=0;
	virtual __int64 getStart()=0;
	virtual int getCount()=0;
};

interface IEspWUResultRequest : extends IConstWUResultRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setResultName(const char * val)=0;
	virtual void setLogicalName(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setSuppressXmlSchema(bool val)=0;
	virtual void setBypassCachedResult(bool val)=0;
	virtual void setFilterBy(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setFilterBy(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setStart(__int64 val)=0;
	virtual void setCount(int val)=0;
	virtual void copy(IConstWUResultRequest &from)=0;
};

interface IClientWUResultRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setResultName(const char * val)=0;
	virtual void setLogicalName(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setSuppressXmlSchema(bool val)=0;
	virtual void setBypassCachedResult(bool val)=0;
	virtual void setFilterBy(IArrayOf<IEspNamedValue> &val)=0;
	virtual void setFilterBy(IArrayOf<IConstNamedValue> &val)=0;
	virtual void setStart(__int64 val)=0;
	virtual void setCount(int val)=0;
};



interface IConstWUResultResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual int getSequence()=0;
	virtual const char * getLogicalName()=0;
	virtual const char * getCluster()=0;
	virtual const char * getName()=0;
	virtual __int64 getStart()=0;
	virtual int getRequested()=0;
	virtual int getCount()=0;
	virtual __int64 getTotal()=0;
	virtual const char * getResult()=0;
};

interface IEspWUResultResponse : extends IConstWUResultResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setLogicalName(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setStart(__int64 val)=0;
	virtual void setRequested(int val)=0;
	virtual void setCount(int val)=0;
	virtual void setTotal(__int64 val)=0;
	virtual void setResult(const char * val)=0;
	virtual void copy(IConstWUResultResponse &from)=0;
};

interface IClientWUResultResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual int getSequence()=0;
	virtual const char * getLogicalName()=0;
	virtual const char * getCluster()=0;
	virtual const char * getName()=0;
	virtual __int64 getStart()=0;
	virtual int getRequested()=0;
	virtual int getCount()=0;
	virtual __int64 getTotal()=0;
	virtual const char * getResult()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUFullResultRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual bool getNoRootTag()=0;
	virtual CWUExceptionSeverity getExceptionSeverity()=0;
	virtual const char* getExceptionSeverityAsString()=0;
};

interface IEspWUFullResultRequest : extends IConstWUFullResultRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setNoRootTag(bool val)=0;
	virtual void setExceptionSeverity(CWUExceptionSeverity val)=0;
	virtual void setExceptionSeverity(const char* val)=0;
	virtual void copy(IConstWUFullResultRequest &from)=0;
};

interface IClientWUFullResultRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setNoRootTag(bool val)=0;
	virtual void setExceptionSeverity(CWUExceptionSeverity val)=0;
	virtual void setExceptionSeverity(const char* val)=0;
};



interface IConstWUFullResultResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getResults()=0;
};

interface IEspWUFullResultResponse : extends IConstWUFullResultResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setResults(const char * val)=0;
	virtual void copy(IConstWUFullResultResponse &from)=0;
};

interface IClientWUFullResultResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getResults()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUResultViewRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getViewName()=0;
	virtual int getSequence()=0;
	virtual const char * getResultName()=0;
};

interface IEspWUResultViewRequest : extends IConstWUResultViewRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setViewName(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setResultName(const char * val)=0;
	virtual void copy(IConstWUResultViewRequest &from)=0;
};

interface IClientWUResultViewRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setViewName(const char * val)=0;
	virtual void setSequence(int val)=0;
	virtual void setResultName(const char * val)=0;
};



interface IConstWUResultViewResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getViewName()=0;
	virtual const char *getResult_mimetype()=0;
	virtual const char * getResult()=0;
};

interface IEspWUResultViewResponse : extends IConstWUResultViewResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setViewName(const char * val)=0;
	virtual void setResult_mimetype(const char *  val)=0;
	virtual void setResult(const char * val)=0;
	virtual void copy(IConstWUResultViewResponse &from)=0;
};

interface IClientWUResultViewResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getViewName()=0;
	virtual const char *getResult_mimetype()=0;
	virtual const char * getResult()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUClusterJobQueueXLSRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual const char * getShowType()=0;
};

interface IEspWUClusterJobQueueXLSRequest : extends IConstWUClusterJobQueueXLSRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setShowType(const char * val)=0;
	virtual void copy(IConstWUClusterJobQueueXLSRequest &from)=0;
};

interface IClientWUClusterJobQueueXLSRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setShowType(const char * val)=0;
};



interface IConstWUClusterJobQueueXLSResponse : extends IEspResponse
{
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;
};

interface IEspWUClusterJobQueueXLSResponse : extends IConstWUClusterJobQueueXLSResponse
{
	virtual void setResult_mimetype(const char *  val)=0;
	virtual void setResult(const MemoryBuffer & val)=0;
	virtual void copy(IConstWUClusterJobQueueXLSResponse &from)=0;
};

interface IClientWUClusterJobQueueXLSResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUClusterJobQueueLOGRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
};

interface IEspWUClusterJobQueueLOGRequest : extends IConstWUClusterJobQueueLOGRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void copy(IConstWUClusterJobQueueLOGRequest &from)=0;
};

interface IClientWUClusterJobQueueLOGRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
};



interface IConstWUClusterJobQueueLOGResponse : extends IEspResponse
{
	virtual const char *getThefile_mimetype()=0;
	virtual const MemoryBuffer & getThefile()=0;
};

interface IEspWUClusterJobQueueLOGResponse : extends IConstWUClusterJobQueueLOGResponse
{
	virtual void setThefile_mimetype(const char *  val)=0;
	virtual void setThefile(const MemoryBuffer & val)=0;
	virtual void copy(IConstWUClusterJobQueueLOGResponse &from)=0;
};

interface IClientWUClusterJobQueueLOGResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char *getThefile_mimetype()=0;
	virtual const MemoryBuffer & getThefile()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUClusterJobXLSRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual bool getShowAll()=0;
	virtual const char * getBusinessStartTime()=0;
	virtual const char * getBusinessEndTime()=0;
};

interface IEspWUClusterJobXLSRequest : extends IConstWUClusterJobXLSRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setShowAll(bool val)=0;
	virtual void setBusinessStartTime(const char * val)=0;
	virtual void setBusinessEndTime(const char * val)=0;
	virtual void copy(IConstWUClusterJobXLSRequest &from)=0;
};

interface IClientWUClusterJobXLSRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setShowAll(bool val)=0;
	virtual void setBusinessStartTime(const char * val)=0;
	virtual void setBusinessEndTime(const char * val)=0;
};



interface IConstWUClusterJobXLSResponse : extends IEspResponse
{
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;
};

interface IEspWUClusterJobXLSResponse : extends IConstWUClusterJobXLSResponse
{
	virtual void setResult_mimetype(const char *  val)=0;
	virtual void setResult(const MemoryBuffer & val)=0;
	virtual void copy(IConstWUClusterJobXLSResponse &from)=0;
};

interface IClientWUClusterJobXLSResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWUClusterJobSummaryXLSRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual bool getShowAll()=0;
	virtual const char * getBusinessStartTime()=0;
	virtual const char * getBusinessEndTime()=0;
};

interface IEspWUClusterJobSummaryXLSRequest : extends IConstWUClusterJobSummaryXLSRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setShowAll(bool val)=0;
	virtual void setBusinessStartTime(const char * val)=0;
	virtual void setBusinessEndTime(const char * val)=0;
	virtual void copy(IConstWUClusterJobSummaryXLSRequest &from)=0;
};

interface IClientWUClusterJobSummaryXLSRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setShowAll(bool val)=0;
	virtual void setBusinessStartTime(const char * val)=0;
	virtual void setBusinessEndTime(const char * val)=0;
};



interface IConstWUClusterJobSummaryXLSResponse : extends IEspResponse
{
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;
};

interface IEspWUClusterJobSummaryXLSResponse : extends IConstWUClusterJobSummaryXLSResponse
{
	virtual void setResult_mimetype(const char *  val)=0;
	virtual void setResult(const MemoryBuffer & val)=0;
	virtual void copy(IConstWUClusterJobSummaryXLSResponse &from)=0;
};

interface IClientWUClusterJobSummaryXLSResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGetThorJobQueueRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual bool getMaxJobQueueItemsToReturn_isNull()=0;
	virtual unsigned int getMaxJobQueueItemsToReturn()=0;
};

interface IEspWUGetThorJobQueueRequest : extends IConstWUGetThorJobQueueRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setMaxJobQueueItemsToReturn_null()=0;
	virtual void setMaxJobQueueItemsToReturn(unsigned int val)=0;
	virtual void copy(IConstWUGetThorJobQueueRequest &from)=0;
};

interface IClientWUGetThorJobQueueRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setMaxJobQueueItemsToReturn_null()=0;
	virtual void setMaxJobQueueItemsToReturn(unsigned int val)=0;
};



interface IConstWUGetThorJobQueueResponse : extends IEspResponse
{
	virtual int getLongestQueue()=0;
	virtual int getMaxThorConnected()=0;
	virtual IArrayOf<IConstThorQueue> & getQueueList()=0;
	virtual const char * getWarning()=0;
};

interface IEspWUGetThorJobQueueResponse : extends IConstWUGetThorJobQueueResponse
{
	virtual void setLongestQueue(int val)=0;
	virtual void setMaxThorConnected(int val)=0;
	virtual void setQueueList(IArrayOf<IEspThorQueue> &val)=0;
	virtual void setQueueList(IArrayOf<IConstThorQueue> &val)=0;
	virtual void setWarning(const char * val)=0;
	virtual void copy(IConstWUGetThorJobQueueResponse &from)=0;
};

interface IClientWUGetThorJobQueueResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getLongestQueue()=0;
	virtual int getMaxThorConnected()=0;
	virtual IArrayOf<IConstThorQueue> & getQueueList()=0;
	virtual const char * getWarning()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGetThorJobListRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual bool getMaxJobsToReturn_isNull()=0;
	virtual unsigned int getMaxJobsToReturn()=0;
};

interface IEspWUGetThorJobListRequest : extends IConstWUGetThorJobListRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setMaxJobsToReturn_null()=0;
	virtual void setMaxJobsToReturn(unsigned int val)=0;
	virtual void copy(IConstWUGetThorJobListRequest &from)=0;
};

interface IClientWUGetThorJobListRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setMaxJobsToReturn_null()=0;
	virtual void setMaxJobsToReturn(unsigned int val)=0;
};



interface IConstWUGetThorJobListResponse : extends IEspResponse
{
	virtual IArrayOf<IConstECLJob> & getJobList()=0;
	virtual IArrayOf<IConstECLJob> & getInProgressJobList()=0;
	virtual const char * getWarning()=0;
};

interface IEspWUGetThorJobListResponse : extends IConstWUGetThorJobListResponse
{
	virtual void setJobList(IArrayOf<IEspECLJob> &val)=0;
	virtual void setJobList(IArrayOf<IConstECLJob> &val)=0;
	virtual void setInProgressJobList(IArrayOf<IEspECLJob> &val)=0;
	virtual void setInProgressJobList(IArrayOf<IConstECLJob> &val)=0;
	virtual void setWarning(const char * val)=0;
	virtual void copy(IConstWUGetThorJobListResponse &from)=0;
};

interface IClientWUGetThorJobListResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstECLJob> & getJobList()=0;
	virtual IArrayOf<IConstECLJob> & getInProgressJobList()=0;
	virtual const char * getWarning()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstGVCAjaxGraphRequest : extends IEspRequest
{
	virtual const char * getName()=0;
	virtual const char * getGraphName()=0;
	virtual int getSubGraphId()=0;
	virtual bool getSubGraphOnly()=0;
};

interface IEspGVCAjaxGraphRequest : extends IConstGVCAjaxGraphRequest
{
	virtual void setName(const char * val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setSubGraphId(int val)=0;
	virtual void setSubGraphOnly(bool val)=0;
	virtual void copy(IConstGVCAjaxGraphRequest &from)=0;
};

interface IClientGVCAjaxGraphRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setName(const char * val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setSubGraphId(int val)=0;
	virtual void setSubGraphOnly(bool val)=0;
};



interface IConstGVCAjaxGraphResponse : extends IEspResponse
{
	virtual const char * getName()=0;
	virtual const char * getGraphName()=0;
	virtual const char * getGraphType()=0;
	virtual int getSubGraphId()=0;
	virtual bool getSubGraphOnly()=0;
};

interface IEspGVCAjaxGraphResponse : extends IConstGVCAjaxGraphResponse
{
	virtual void setName(const char * val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setGraphType(const char * val)=0;
	virtual void setSubGraphId(int val)=0;
	virtual void setSubGraphOnly(bool val)=0;
	virtual void copy(IConstGVCAjaxGraphResponse &from)=0;
};

interface IClientGVCAjaxGraphResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getName()=0;
	virtual const char * getGraphName()=0;
	virtual const char * getGraphType()=0;
	virtual int getSubGraphId()=0;
	virtual bool getSubGraphOnly()=0;
};



interface IConstWUGraphInfoRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getGID()=0;
	virtual bool getBatchWU_isNull()=0;
	virtual int getBatchWU()=0;
};

interface IEspWUGraphInfoRequest : extends IConstWUGraphInfoRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setGID(const char * val)=0;
	virtual void setBatchWU_null()=0;
	virtual void setBatchWU(int val)=0;
	virtual void copy(IConstWUGraphInfoRequest &from)=0;
};

interface IClientWUGraphInfoRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setGID(const char * val)=0;
	virtual void setBatchWU_null()=0;
	virtual void setBatchWU(int val)=0;
};


interface IConstWUGraphInfoResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getGID()=0;
	virtual int getBatchWU()=0;
	virtual bool getRunning()=0;
};

interface IEspWUGraphInfoResponse : extends IConstWUGraphInfoResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setGID(const char * val)=0;
	virtual void setBatchWU(int val)=0;
	virtual void setRunning(bool val)=0;
	virtual void copy(IConstWUGraphInfoResponse &from)=0;
};

interface IClientWUGraphInfoResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getGID()=0;
	virtual int getBatchWU()=0;
	virtual bool getRunning()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGVCGraphInfoRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getGID()=0;
	virtual bool getBatchWU_isNull()=0;
	virtual int getBatchWU()=0;
	virtual bool getSubgraphId_isNull()=0;
	virtual int getSubgraphId()=0;
};

interface IEspWUGVCGraphInfoRequest : extends IConstWUGVCGraphInfoRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setGID(const char * val)=0;
	virtual void setBatchWU_null()=0;
	virtual void setBatchWU(int val)=0;
	virtual void setSubgraphId_null()=0;
	virtual void setSubgraphId(int val)=0;
	virtual void copy(IConstWUGVCGraphInfoRequest &from)=0;
};

interface IClientWUGVCGraphInfoRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setGID(const char * val)=0;
	virtual void setBatchWU_null()=0;
	virtual void setBatchWU(int val)=0;
	virtual void setSubgraphId_null()=0;
	virtual void setSubgraphId(int val)=0;
};


interface IConstWUGVCGraphInfoResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getGID()=0;
	virtual bool getRunning()=0;
	virtual const char * getTheGraph()=0;
	virtual int getBatchWU()=0;
};

interface IEspWUGVCGraphInfoResponse : extends IConstWUGVCGraphInfoResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setGID(const char * val)=0;
	virtual void setRunning(bool val)=0;
	virtual void setTheGraph(const char * val)=0;
	virtual void setBatchWU(int val)=0;
	virtual void copy(IConstWUGVCGraphInfoResponse &from)=0;
};

interface IClientWUGVCGraphInfoResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getGID()=0;
	virtual bool getRunning()=0;
	virtual const char * getTheGraph()=0;
	virtual int getBatchWU()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWUGraphTimingRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
};

interface IEspWUGraphTimingRequest : extends IConstWUGraphTimingRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void copy(IConstWUGraphTimingRequest &from)=0;
};

interface IClientWUGraphTimingRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
};



interface IConstWUGraphTimingResponse : extends IEspResponse
{
	virtual IConstECLWorkunit & getWorkunit()=0;
};

interface IEspWUGraphTimingResponse : extends IConstWUGraphTimingResponse
{
	virtual IEspECLWorkunit & updateWorkunit()=0;
	virtual void setWorkunit(IConstECLWorkunit &ifrom)=0;
	virtual void copy(IConstWUGraphTimingResponse &from)=0;
};

interface IClientWUGraphTimingResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstECLWorkunit & getWorkunit()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGetGraphNameAndTypesRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getType()=0;
};

interface IEspWUGetGraphNameAndTypesRequest : extends IConstWUGetGraphNameAndTypesRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setType(const char * val)=0;
	virtual void copy(IConstWUGetGraphNameAndTypesRequest &from)=0;
};

interface IClientWUGetGraphNameAndTypesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setType(const char * val)=0;
};



interface IConstWUGetGraphNameAndTypesResponse : extends IEspResponse
{
	virtual IArrayOf<IConstNameAndType> & getGraphNameAndTypes()=0;
};

interface IEspWUGetGraphNameAndTypesResponse : extends IConstWUGetGraphNameAndTypesResponse
{
	virtual void setGraphNameAndTypes(IArrayOf<IEspNameAndType> &val)=0;
	virtual void setGraphNameAndTypes(IArrayOf<IConstNameAndType> &val)=0;
	virtual void copy(IConstWUGetGraphNameAndTypesResponse &from)=0;
};

interface IClientWUGetGraphNameAndTypesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstNameAndType> & getGraphNameAndTypes()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUProcessGraphRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
};

interface IEspWUProcessGraphRequest : extends IConstWUProcessGraphRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void copy(IConstWUProcessGraphRequest &from)=0;
};

interface IClientWUProcessGraphRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
};



interface IConstWUProcessGraphResponse : extends IEspResponse
{
	virtual const char * getTheGraph()=0;
};

interface IEspWUProcessGraphResponse : extends IConstWUProcessGraphResponse
{
	virtual void setTheGraph(const char * val)=0;
	virtual void copy(IConstWUProcessGraphResponse &from)=0;
};

interface IClientWUProcessGraphResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getTheGraph()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGetGraphRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getGraphName()=0;
	virtual const char * getSubGraphId()=0;
};

interface IEspWUGetGraphRequest : extends IConstWUGetGraphRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setSubGraphId(const char * val)=0;
	virtual void copy(IConstWUGetGraphRequest &from)=0;
};

interface IClientWUGetGraphRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setSubGraphId(const char * val)=0;
};



interface IConstWUGetGraphResponse : extends IEspResponse
{
	virtual IArrayOf<IConstECLGraphEx> & getGraphs()=0;
};

interface IEspWUGetGraphResponse : extends IConstWUGetGraphResponse
{
	virtual void setGraphs(IArrayOf<IEspECLGraphEx> &val)=0;
	virtual void setGraphs(IArrayOf<IConstECLGraphEx> &val)=0;
	virtual void copy(IConstWUGetGraphResponse &from)=0;
};

interface IClientWUGetGraphResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstECLGraphEx> & getGraphs()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUQueryGetGraphRequest : extends IEspRequest
{
	virtual const char * getTarget()=0;
	virtual const char * getQueryId()=0;
	virtual const char * getGraphName()=0;
	virtual const char * getSubGraphId()=0;
};

interface IEspWUQueryGetGraphRequest : extends IConstWUQueryGetGraphRequest
{
	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setSubGraphId(const char * val)=0;
	virtual void copy(IConstWUQueryGetGraphRequest &from)=0;
};

interface IClientWUQueryGetGraphRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setGraphName(const char * val)=0;
	virtual void setSubGraphId(const char * val)=0;
};



interface IConstWUQueryGetGraphResponse : extends IEspResponse
{
	virtual IArrayOf<IConstECLGraphEx> & getGraphs()=0;
};

interface IEspWUQueryGetGraphResponse : extends IConstWUQueryGetGraphResponse
{
	virtual void setGraphs(IArrayOf<IEspECLGraphEx> &val)=0;
	virtual void setGraphs(IArrayOf<IConstECLGraphEx> &val)=0;
	virtual void copy(IConstWUQueryGetGraphResponse &from)=0;
};

interface IClientWUQueryGetGraphResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstECLGraphEx> & getGraphs()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUQueryGetSummaryStatsRequest : extends IEspRequest
{
	virtual const char * getTarget()=0;
	virtual const char * getQueryId()=0;
	virtual const char * getFromTime()=0;
	virtual const char * getToTime()=0;
};

interface IEspWUQueryGetSummaryStatsRequest : extends IConstWUQueryGetSummaryStatsRequest
{
	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setFromTime(const char * val)=0;
	virtual void setToTime(const char * val)=0;
	virtual void copy(IConstWUQueryGetSummaryStatsRequest &from)=0;
};

interface IClientWUQueryGetSummaryStatsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setFromTime(const char * val)=0;
	virtual void setToTime(const char * val)=0;
};



interface IConstWUQueryGetSummaryStatsResponse : extends IEspResponse
{
	virtual IArrayOf<IConstQuerySummaryStats> & getStatsList()=0;
};

interface IEspWUQueryGetSummaryStatsResponse : extends IConstWUQueryGetSummaryStatsResponse
{
	virtual void setStatsList(IArrayOf<IEspQuerySummaryStats> &val)=0;
	virtual void setStatsList(IArrayOf<IConstQuerySummaryStats> &val)=0;
	virtual void copy(IConstWUQueryGetSummaryStatsResponse &from)=0;
};

interface IClientWUQueryGetSummaryStatsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstQuerySummaryStats> & getStatsList()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUExportRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getOwner()=0;
	virtual const char * getState()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual const char * getECL()=0;
	virtual const char * getJobname()=0;
};

interface IEspWUExportRequest : extends IConstWUExportRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setECL(const char * val)=0;
	virtual void setJobname(const char * val)=0;
	virtual void copy(IConstWUExportRequest &from)=0;
};

interface IClientWUExportRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setECL(const char * val)=0;
	virtual void setJobname(const char * val)=0;
};


interface IConstWUExportResponse : extends IEspResponse
{
	virtual const char *getExportData_mimetype()=0;
	virtual const MemoryBuffer & getExportData()=0;
};

interface IEspWUExportResponse : extends IConstWUExportResponse
{
	virtual void setExportData_mimetype(const char *  val)=0;
	virtual void setExportData(const MemoryBuffer & val)=0;
	virtual void copy(IConstWUExportResponse &from)=0;
};

interface IClientWUExportResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char *getExportData_mimetype()=0;
	virtual const MemoryBuffer & getExportData()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWUWaitRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual int getWait()=0;
	virtual bool getReturnOnWait()=0;
};

interface IEspWUWaitRequest : extends IConstWUWaitRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setWait(int val)=0;
	virtual void setReturnOnWait(bool val)=0;
	virtual void copy(IConstWUWaitRequest &from)=0;
};

interface IClientWUWaitRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setWait(int val)=0;
	virtual void setReturnOnWait(bool val)=0;
};



interface IConstWUWaitResponse : extends IEspResponse
{
	virtual int getStateID()=0;
};

interface IEspWUWaitResponse : extends IConstWUWaitResponse
{
	virtual void setStateID(int val)=0;
	virtual void copy(IConstWUWaitResponse &from)=0;
};

interface IClientWUWaitResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getStateID()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWUSyntaxCheckRequest : extends IEspRequest
{
	virtual const char * getECL()=0;
	virtual const char * getModuleName()=0;
	virtual const char * getAttributeName()=0;
	virtual const char * getQueue()=0;
	virtual const char * getCluster()=0;
	virtual const char * getSnapshot()=0;
	virtual int getTimeToWait()=0;
	virtual IArrayOf<IConstDebugValue> & getDebugValues()=0;
};

interface IEspWUSyntaxCheckRequest : extends IConstWUSyntaxCheckRequest
{
	virtual void setECL(const char * val)=0;
	virtual void setModuleName(const char * val)=0;
	virtual void setAttributeName(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setTimeToWait(int val)=0;
	virtual void setDebugValues(IArrayOf<IEspDebugValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstDebugValue> &val)=0;
	virtual void copy(IConstWUSyntaxCheckRequest &from)=0;
};

interface IClientWUSyntaxCheckRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setECL(const char * val)=0;
	virtual void setModuleName(const char * val)=0;
	virtual void setAttributeName(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setTimeToWait(int val)=0;
	virtual void setDebugValues(IArrayOf<IEspDebugValue> &val)=0;
	virtual void setDebugValues(IArrayOf<IConstDebugValue> &val)=0;
};



interface IConstWUSyntaxCheckResponse : extends IEspResponse
{
	virtual IArrayOf<IConstECLException> & getErrors()=0;
	virtual const char * getMessage()=0;
};

interface IEspWUSyntaxCheckResponse : extends IConstWUSyntaxCheckResponse
{
	virtual void setErrors(IArrayOf<IEspECLException> &val)=0;
	virtual void setErrors(IArrayOf<IConstECLException> &val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstWUSyntaxCheckResponse &from)=0;
};

interface IClientWUSyntaxCheckResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstECLException> & getErrors()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWUCompileECLRequest : extends IEspRequest
{
	virtual const char * getECL()=0;
	virtual const char * getModuleName()=0;
	virtual const char * getAttributeName()=0;
	virtual const char * getQueue()=0;
	virtual const char * getCluster()=0;
	virtual const char * getSnapshot()=0;
	virtual bool getIncludeDependencies()=0;
	virtual bool getIncludeComplexity()=0;
	virtual int getTimeToWait()=0;
};

interface IEspWUCompileECLRequest : extends IConstWUCompileECLRequest
{
	virtual void setECL(const char * val)=0;
	virtual void setModuleName(const char * val)=0;
	virtual void setAttributeName(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setIncludeDependencies(bool val)=0;
	virtual void setIncludeComplexity(bool val)=0;
	virtual void setTimeToWait(int val)=0;
	virtual void copy(IConstWUCompileECLRequest &from)=0;
};

interface IClientWUCompileECLRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setECL(const char * val)=0;
	virtual void setModuleName(const char * val)=0;
	virtual void setAttributeName(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setIncludeDependencies(bool val)=0;
	virtual void setIncludeComplexity(bool val)=0;
	virtual void setTimeToWait(int val)=0;
};



interface IConstWUCompileECLResponse : extends IEspResponse
{
	virtual const char * getComplexity()=0;
	virtual IArrayOf<IConstECLException> & getErrors()=0;
	virtual IArrayOf<IConstWUECLAttribute> & getDependencies()=0;
};

interface IEspWUCompileECLResponse : extends IConstWUCompileECLResponse
{
	virtual void setComplexity(const char * val)=0;
	virtual void setErrors(IArrayOf<IEspECLException> &val)=0;
	virtual void setErrors(IArrayOf<IConstECLException> &val)=0;
	virtual void setDependencies(IArrayOf<IEspWUECLAttribute> &val)=0;
	virtual void setDependencies(IArrayOf<IConstWUECLAttribute> &val)=0;
	virtual void copy(IConstWUCompileECLResponse &from)=0;
};

interface IClientWUCompileECLResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getComplexity()=0;
	virtual IArrayOf<IConstECLException> & getErrors()=0;
	virtual IArrayOf<IConstWUECLAttribute> & getDependencies()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWUJobListRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getProcess()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual bool getShowAll()=0;
	virtual int getBusinessStartHour()=0;
	virtual int getBusinessEndHour()=0;
};

interface IEspWUJobListRequest : extends IConstWUJobListRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setProcess(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setShowAll(bool val)=0;
	virtual void setBusinessStartHour(int val)=0;
	virtual void setBusinessEndHour(int val)=0;
	virtual void copy(IConstWUJobListRequest &from)=0;
};

interface IClientWUJobListRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setProcess(const char * val)=0;
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setShowAll(bool val)=0;
	virtual void setBusinessStartHour(int val)=0;
	virtual void setBusinessEndHour(int val)=0;
};



interface IConstWUJobListResponse : extends IEspResponse
{
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual IArrayOf<IConstECLJob> & getJobs()=0;
};

interface IEspWUJobListResponse : extends IConstWUJobListResponse
{
	virtual void setStartDate(const char * val)=0;
	virtual void setEndDate(const char * val)=0;
	virtual void setJobs(IArrayOf<IEspECLJob> &val)=0;
	virtual void setJobs(IArrayOf<IConstECLJob> &val)=0;
	virtual void copy(IConstWUJobListResponse &from)=0;
};

interface IClientWUJobListResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getStartDate()=0;
	virtual const char * getEndDate()=0;
	virtual IArrayOf<IConstECLJob> & getJobs()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUShowScheduledRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getEventName()=0;
	virtual const char * getPushEventName()=0;
	virtual const char * getPushEventText()=0;
	virtual const char * getState()=0;
	virtual const char * getJobName()=0;
};

interface IEspWUShowScheduledRequest : extends IConstWUShowScheduledRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setPushEventName(const char * val)=0;
	virtual void setPushEventText(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void copy(IConstWUShowScheduledRequest &from)=0;
};

interface IClientWUShowScheduledRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setPushEventName(const char * val)=0;
	virtual void setPushEventText(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setJobName(const char * val)=0;
};



interface IConstScheduledWU : extends IEspStruct
{
	virtual const char * getWuid()=0;
	virtual const char * getCluster()=0;
	virtual const char * getEventName()=0;
	virtual const char * getEventText()=0;
	virtual const char * getJobName()=0;
	virtual bool getStateID_isNull()=0;
	virtual int getStateID()=0;
	virtual const char * getState()=0;
	virtual const char * getOwner()=0;
};

interface IEspScheduledWU : extends IConstScheduledWU
{
	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setEventText(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void setStateID_null()=0;
	virtual void setStateID(int val)=0;
	virtual void setState(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual void copy(IConstScheduledWU &from)=0;
};

interface IClientScheduledWU : extends IInterface
{
	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setEventText(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void setStateID_null()=0;
	virtual void setStateID(int val)=0;
	virtual void setState(const char * val)=0;
	virtual void setOwner(const char * val)=0;
	virtual const char * getWuid()=0;
	virtual const char * getCluster()=0;
	virtual const char * getEventName()=0;
	virtual const char * getEventText()=0;
	virtual const char * getJobName()=0;
	virtual bool getStateID_isNull()=0;
	virtual int getStateID()=0;
	virtual const char * getState()=0;
	virtual const char * getOwner()=0;
};



interface IConstServerInfo : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getNetAddress()=0;
};

interface IEspServerInfo : extends IConstServerInfo
{
	virtual void setName(const char * val)=0;
	virtual void setNetAddress(const char * val)=0;
	virtual void copy(IConstServerInfo &from)=0;
};

interface IClientServerInfo : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setNetAddress(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getNetAddress()=0;
};



interface IConstWUShowScheduledResponse : extends IEspResponse
{
	virtual bool getClusterSelected_isNull()=0;
	virtual int getClusterSelected()=0;
	virtual const char * getEventName()=0;
	virtual const char * getPushEventName()=0;
	virtual const char * getPushEventText()=0;
	virtual const char * getQuery()=0;
	virtual IArrayOf<IConstServerInfo> & getClusters()=0;
	virtual IArrayOf<IConstScheduledWU> & getWorkunits()=0;
};

interface IEspWUShowScheduledResponse : extends IConstWUShowScheduledResponse
{
	virtual void setClusterSelected_null()=0;
	virtual void setClusterSelected(int val)=0;
	virtual void setEventName(const char * val)=0;
	virtual void setPushEventName(const char * val)=0;
	virtual void setPushEventText(const char * val)=0;
	virtual void setQuery(const char * val)=0;
	virtual void setClusters(IArrayOf<IEspServerInfo> &val)=0;
	virtual void setClusters(IArrayOf<IConstServerInfo> &val)=0;
	virtual void setWorkunits(IArrayOf<IEspScheduledWU> &val)=0;
	virtual void setWorkunits(IArrayOf<IConstScheduledWU> &val)=0;
	virtual void copy(IConstWUShowScheduledResponse &from)=0;
};

interface IClientWUShowScheduledResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getClusterSelected_isNull()=0;
	virtual int getClusterSelected()=0;
	virtual const char * getEventName()=0;
	virtual const char * getPushEventName()=0;
	virtual const char * getPushEventText()=0;
	virtual const char * getQuery()=0;
	virtual IArrayOf<IConstServerInfo> & getClusters()=0;
	virtual IArrayOf<IConstScheduledWU> & getWorkunits()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGetDependancyTreesRequest : extends IEspRequest
{
	virtual const char * getCluster()=0;
	virtual const char * getQueue()=0;
	virtual const char * getSnapshot()=0;
	virtual const char * getItems()=0;
	virtual const char * getTimeoutMilliSec()=0;
};

interface IEspWUGetDependancyTreesRequest : extends IConstWUGetDependancyTreesRequest
{
	virtual void setCluster(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setItems(const char * val)=0;
	virtual void setTimeoutMilliSec(const char * val)=0;
	virtual void copy(IConstWUGetDependancyTreesRequest &from)=0;
};

interface IClientWUGetDependancyTreesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setCluster(const char * val)=0;
	virtual void setQueue(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void setItems(const char * val)=0;
	virtual void setTimeoutMilliSec(const char * val)=0;
};



interface IConstWUGetDependancyTreesResponse : extends IEspResponse
{
	virtual IArrayOf<IConstECLException> & getErrors()=0;
	virtual const char *getDependancyTrees_mimetype()=0;
	virtual const MemoryBuffer & getDependancyTrees()=0;
};

interface IEspWUGetDependancyTreesResponse : extends IConstWUGetDependancyTreesResponse
{
	virtual void setErrors(IArrayOf<IEspECLException> &val)=0;
	virtual void setErrors(IArrayOf<IConstECLException> &val)=0;
	virtual void setDependancyTrees_mimetype(const char *  val)=0;
	virtual void setDependancyTrees(const MemoryBuffer & val)=0;
	virtual void copy(IConstWUGetDependancyTreesResponse &from)=0;
};

interface IClientWUGetDependancyTreesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstECLException> & getErrors()=0;
	virtual const char *getDependancyTrees_mimetype()=0;
	virtual const MemoryBuffer & getDependancyTrees()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUListLocalFileRequiredRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
};

interface IEspWUListLocalFileRequiredRequest : extends IConstWUListLocalFileRequiredRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void copy(IConstWUListLocalFileRequiredRequest &from)=0;
};

interface IClientWUListLocalFileRequiredRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
};



interface IConstWUListLocalFileRequiredResponse : extends IEspResponse
{
	virtual IArrayOf<IConstLogicalFileUpload> & getLocalFileUploads()=0;
};

interface IEspWUListLocalFileRequiredResponse : extends IConstWUListLocalFileRequiredResponse
{
	virtual void setLocalFileUploads(IArrayOf<IEspLogicalFileUpload> &val)=0;
	virtual void setLocalFileUploads(IArrayOf<IConstLogicalFileUpload> &val)=0;
	virtual void copy(IConstWUListLocalFileRequiredResponse &from)=0;
};

interface IClientWUListLocalFileRequiredResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstLogicalFileUpload> & getLocalFileUploads()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUAddLocalFileToWorkunitRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getVal()=0;
	virtual const char * getDefVal()=0;
	virtual int getType()=0;
	virtual int getLength()=0;
};

interface IEspWUAddLocalFileToWorkunitRequest : extends IConstWUAddLocalFileToWorkunitRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setVal(const char * val)=0;
	virtual void setDefVal(const char * val)=0;
	virtual void setType(int val)=0;
	virtual void setLength(int val)=0;
	virtual void copy(IConstWUAddLocalFileToWorkunitRequest &from)=0;
};

interface IClientWUAddLocalFileToWorkunitRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setVal(const char * val)=0;
	virtual void setDefVal(const char * val)=0;
	virtual void setType(int val)=0;
	virtual void setLength(int val)=0;
};



interface IConstWUAddLocalFileToWorkunitResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getResult()=0;
};

interface IEspWUAddLocalFileToWorkunitResponse : extends IConstWUAddLocalFileToWorkunitResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setResult(const char * val)=0;
	virtual void copy(IConstWUAddLocalFileToWorkunitResponse &from)=0;
};

interface IClientWUAddLocalFileToWorkunitResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getName()=0;
	virtual const char * getResult()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUDebugRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getCommand()=0;
};

interface IEspWUDebugRequest : extends IConstWUDebugRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setCommand(const char * val)=0;
	virtual void copy(IConstWUDebugRequest &from)=0;
};

interface IClientWUDebugRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setCommand(const char * val)=0;
};



interface IConstWUDebugResponse : extends IEspResponse
{
	virtual const char * getResult()=0;
};

interface IEspWUDebugResponse : extends IConstWUDebugResponse
{
	virtual void setResult(const char * val)=0;
	virtual void copy(IConstWUDebugResponse &from)=0;
};

interface IClientWUDebugResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getResult()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUCopyLogicalFilesRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getCluster()=0;
	virtual bool getCopyLocal()=0;
};

interface IEspWUCopyLogicalFilesRequest : extends IConstWUCopyLogicalFilesRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setCopyLocal(bool val)=0;
	virtual void copy(IConstWUCopyLogicalFilesRequest &from)=0;
};

interface IClientWUCopyLogicalFilesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setCopyLocal(bool val)=0;
};



interface IConstWULogicalFileCopyInfo : extends IEspStruct
{
	virtual bool getIsIndex()=0;
	virtual const char * getLogicalName()=0;
	virtual const char * getDfuCopyWuid()=0;
	virtual const char * getDfuCopyError()=0;
	virtual StringArray & getClusters()=0;
};

interface IEspWULogicalFileCopyInfo : extends IConstWULogicalFileCopyInfo
{
	virtual void setIsIndex(bool val)=0;
	virtual void setLogicalName(const char * val)=0;
	virtual void setDfuCopyWuid(const char * val)=0;
	virtual void setDfuCopyError(const char * val)=0;
	virtual void setClusters(StringArray &val)=0;
	virtual void copy(IConstWULogicalFileCopyInfo &from)=0;
};

interface IClientWULogicalFileCopyInfo : extends IInterface
{
	virtual void setIsIndex(bool val)=0;
	virtual void setLogicalName(const char * val)=0;
	virtual void setDfuCopyWuid(const char * val)=0;
	virtual void setDfuCopyError(const char * val)=0;
	virtual void setClusters(StringArray &val)=0;
	virtual bool getIsIndex()=0;
	virtual const char * getLogicalName()=0;
	virtual const char * getDfuCopyWuid()=0;
	virtual const char * getDfuCopyError()=0;
	virtual StringArray & getClusters()=0;
};



interface IConstWUCopyLogicalClusterFileSections : extends IEspStruct
{
	virtual const char * getClusterName()=0;
	virtual IArrayOf<IConstWULogicalFileCopyInfo> & getOnCluster()=0;
	virtual IArrayOf<IConstWULogicalFileCopyInfo> & getNotOnCluster()=0;
	virtual IArrayOf<IConstWULogicalFileCopyInfo> & getForeign()=0;
	virtual IArrayOf<IConstWULogicalFileCopyInfo> & getNotFound()=0;
};

interface IEspWUCopyLogicalClusterFileSections : extends IConstWUCopyLogicalClusterFileSections
{
	virtual void setClusterName(const char * val)=0;
	virtual void setOnCluster(IArrayOf<IEspWULogicalFileCopyInfo> &val)=0;
	virtual void setOnCluster(IArrayOf<IConstWULogicalFileCopyInfo> &val)=0;
	virtual void setNotOnCluster(IArrayOf<IEspWULogicalFileCopyInfo> &val)=0;
	virtual void setNotOnCluster(IArrayOf<IConstWULogicalFileCopyInfo> &val)=0;
	virtual void setForeign(IArrayOf<IEspWULogicalFileCopyInfo> &val)=0;
	virtual void setForeign(IArrayOf<IConstWULogicalFileCopyInfo> &val)=0;
	virtual void setNotFound(IArrayOf<IEspWULogicalFileCopyInfo> &val)=0;
	virtual void setNotFound(IArrayOf<IConstWULogicalFileCopyInfo> &val)=0;
	virtual void copy(IConstWUCopyLogicalClusterFileSections &from)=0;
};

interface IClientWUCopyLogicalClusterFileSections : extends IInterface
{
	virtual void setClusterName(const char * val)=0;
	virtual void setOnCluster(IArrayOf<IEspWULogicalFileCopyInfo> &val)=0;
	virtual void setOnCluster(IArrayOf<IConstWULogicalFileCopyInfo> &val)=0;
	virtual void setNotOnCluster(IArrayOf<IEspWULogicalFileCopyInfo> &val)=0;
	virtual void setNotOnCluster(IArrayOf<IConstWULogicalFileCopyInfo> &val)=0;
	virtual void setForeign(IArrayOf<IEspWULogicalFileCopyInfo> &val)=0;
	virtual void setForeign(IArrayOf<IConstWULogicalFileCopyInfo> &val)=0;
	virtual void setNotFound(IArrayOf<IEspWULogicalFileCopyInfo> &val)=0;
	virtual void setNotFound(IArrayOf<IConstWULogicalFileCopyInfo> &val)=0;
	virtual const char * getClusterName()=0;
	virtual IArrayOf<IConstWULogicalFileCopyInfo> & getOnCluster()=0;
	virtual IArrayOf<IConstWULogicalFileCopyInfo> & getNotOnCluster()=0;
	virtual IArrayOf<IConstWULogicalFileCopyInfo> & getForeign()=0;
	virtual IArrayOf<IConstWULogicalFileCopyInfo> & getNotFound()=0;
};



interface IConstWUCopyLogicalFilesResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual IArrayOf<IConstWUCopyLogicalClusterFileSections> & getClusterFiles()=0;
};

interface IEspWUCopyLogicalFilesResponse : extends IConstWUCopyLogicalFilesResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setClusterFiles(IArrayOf<IEspWUCopyLogicalClusterFileSections> &val)=0;
	virtual void setClusterFiles(IArrayOf<IConstWUCopyLogicalClusterFileSections> &val)=0;
	virtual void copy(IConstWUCopyLogicalFilesResponse &from)=0;
};

interface IClientWUCopyLogicalFilesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual IArrayOf<IConstWUCopyLogicalClusterFileSections> & getClusterFiles()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstWUPublishWorkunitRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getCluster()=0;
	virtual const char * getJobName()=0;
	virtual bool getActivate_isNull()=0;
	virtual int getActivate()=0;
	virtual bool getNotifyCluster_isNull()=0;
	virtual bool getNotifyCluster()=0;
	virtual bool getWait_isNull()=0;
	virtual int getWait()=0;
	virtual bool getNoReload_isNull()=0;
	virtual bool getNoReload()=0;
	virtual bool getUpdateWorkUnitName_isNull()=0;
	virtual bool getUpdateWorkUnitName()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual unsigned int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual unsigned int getWarnTimeLimit()=0;
	virtual const char * getPriority()=0;
	virtual const char * getRemoteDali()=0;
	virtual const char * getComment()=0;
	virtual bool getDontCopyFiles_isNull()=0;
	virtual bool getDontCopyFiles()=0;
	virtual const char * getSourceProcess()=0;
	virtual bool getAllowForeignFiles_isNull()=0;
	virtual bool getAllowForeignFiles()=0;
	virtual bool getUpdateDfs_isNull()=0;
	virtual bool getUpdateDfs()=0;
	virtual bool getUpdateSuperFiles_isNull()=0;
	virtual bool getUpdateSuperFiles()=0;
	virtual bool getUpdateCloneFrom_isNull()=0;
	virtual bool getUpdateCloneFrom()=0;
	virtual bool getAppendCluster_isNull()=0;
	virtual bool getAppendCluster()=0;
	virtual bool getIncludeFileErrors_isNull()=0;
	virtual bool getIncludeFileErrors()=0;
};

interface IEspWUPublishWorkunitRequest : extends IConstWUPublishWorkunitRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void setActivate_null()=0;
	virtual void setActivate(int val)=0;
	virtual void setNotifyCluster_null()=0;
	virtual void setNotifyCluster(bool val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setUpdateWorkUnitName_null()=0;
	virtual void setUpdateWorkUnitName(bool val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setRemoteDali(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setDontCopyFiles_null()=0;
	virtual void setDontCopyFiles(bool val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setAllowForeignFiles_null()=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setUpdateDfs_null()=0;
	virtual void setUpdateDfs(bool val)=0;
	virtual void setUpdateSuperFiles_null()=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster_null()=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors_null()=0;
	virtual void setIncludeFileErrors(bool val)=0;
	virtual void copy(IConstWUPublishWorkunitRequest &from)=0;
};

interface IClientWUPublishWorkunitRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setJobName(const char * val)=0;
	virtual void setActivate_null()=0;
	virtual void setActivate(int val)=0;
	virtual void setNotifyCluster_null()=0;
	virtual void setNotifyCluster(bool val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setUpdateWorkUnitName_null()=0;
	virtual void setUpdateWorkUnitName(bool val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setRemoteDali(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setDontCopyFiles_null()=0;
	virtual void setDontCopyFiles(bool val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setAllowForeignFiles_null()=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setUpdateDfs_null()=0;
	virtual void setUpdateDfs(bool val)=0;
	virtual void setUpdateSuperFiles_null()=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster_null()=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors_null()=0;
	virtual void setIncludeFileErrors(bool val)=0;
};



interface IConstWUPublishWorkunitResponse : extends IEspResponse
{
	virtual const char * getWuid()=0;
	virtual const char * getResult()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getQueryId()=0;
	virtual bool getReloadFailed()=0;
	virtual bool getSuspended()=0;
	virtual const char * getErrorMessage()=0;
	virtual IArrayOf<IConstWUCopyLogicalClusterFileSections> & getClusterFiles()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;
};

interface IEspWUPublishWorkunitResponse : extends IConstWUPublishWorkunitResponse
{
	virtual void setWuid(const char * val)=0;
	virtual void setResult(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setQueryName(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setReloadFailed(bool val)=0;
	virtual void setSuspended(bool val)=0;
	virtual void setErrorMessage(const char * val)=0;
	virtual void setClusterFiles(IArrayOf<IEspWUCopyLogicalClusterFileSections> &val)=0;
	virtual void setClusterFiles(IArrayOf<IConstWUCopyLogicalClusterFileSections> &val)=0;
	virtual void setFileErrors(IArrayOf<IEspLogicalFileError> &val)=0;
	virtual void setFileErrors(IArrayOf<IConstLogicalFileError> &val)=0;
	virtual void copy(IConstWUPublishWorkunitResponse &from)=0;
};

interface IClientWUPublishWorkunitResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWuid()=0;
	virtual const char * getResult()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getQueryId()=0;
	virtual bool getReloadFailed()=0;
	virtual bool getSuspended()=0;
	virtual const char * getErrorMessage()=0;
	virtual IArrayOf<IConstWUCopyLogicalClusterFileSections> & getClusterFiles()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUQueryConfigRequest : extends IEspRequest
{
	virtual const char * getTarget()=0;
	virtual const char * getQueryId()=0;
	virtual bool getWait_isNull()=0;
	virtual int getWait()=0;
	virtual bool getNoReload_isNull()=0;
	virtual bool getNoReload()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual unsigned int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual unsigned int getWarnTimeLimit()=0;
	virtual const char * getPriority()=0;
	virtual const char * getComment()=0;
};

interface IEspWUQueryConfigRequest : extends IConstWUQueryConfigRequest
{
	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void copy(IConstWUQueryConfigRequest &from)=0;
};

interface IClientWUQueryConfigRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
};



interface IConstWUQueryConfigResult : extends IEspStruct
{
	virtual const char * getQueryId()=0;
};

interface IEspWUQueryConfigResult : extends IConstWUQueryConfigResult
{
	virtual void setQueryId(const char * val)=0;
	virtual void copy(IConstWUQueryConfigResult &from)=0;
};

interface IClientWUQueryConfigResult : extends IInterface
{
	virtual void setQueryId(const char * val)=0;
	virtual const char * getQueryId()=0;
};



interface IConstWUQueryConfigResponse : extends IEspResponse
{
	virtual bool getReloadFailed()=0;
	virtual IArrayOf<IConstWUQueryConfigResult> & getResults()=0;
};

interface IEspWUQueryConfigResponse : extends IConstWUQueryConfigResponse
{
	virtual void setReloadFailed(bool val)=0;
	virtual void setResults(IArrayOf<IEspWUQueryConfigResult> &val)=0;
	virtual void setResults(IArrayOf<IConstWUQueryConfigResult> &val)=0;
	virtual void copy(IConstWUQueryConfigResponse &from)=0;
};

interface IClientWUQueryConfigResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getReloadFailed()=0;
	virtual IArrayOf<IConstWUQueryConfigResult> & getResults()=0;

	virtual const IMultiException& getExceptions()=0;
};




interface IConstQuerySet : extends IEspStruct
{
	virtual const char * getQuerySetName()=0;
};

interface IEspQuerySet : extends IConstQuerySet
{
	virtual void setQuerySetName(const char * val)=0;
	virtual void copy(IConstQuerySet &from)=0;
};

interface IClientQuerySet : extends IInterface
{
	virtual void setQuerySetName(const char * val)=0;
	virtual const char * getQuerySetName()=0;
};



interface IConstWUQuerysetsRequest : extends IEspRequest
{
	virtual bool getTest()=0;
};

interface IEspWUQuerysetsRequest : extends IConstWUQuerysetsRequest
{
	virtual void setTest(bool val)=0;
	virtual void copy(IConstWUQuerysetsRequest &from)=0;
};

interface IClientWUQuerysetsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTest(bool val)=0;
};



interface IConstWUQuerysetsResponse : extends IEspResponse
{
	virtual IArrayOf<IConstQuerySet> & getQuerysets()=0;
};

interface IEspWUQuerysetsResponse : extends IConstWUQuerysetsResponse
{
	virtual void setQuerysets(IArrayOf<IEspQuerySet> &val)=0;
	virtual void setQuerysets(IArrayOf<IConstQuerySet> &val)=0;
	virtual void copy(IConstWUQuerysetsResponse &from)=0;
};

interface IClientWUQuerysetsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstQuerySet> & getQuerysets()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstClusterQueryState : extends IEspStruct
{
	virtual const char * getCluster()=0;
	virtual const char * getState()=0;
	virtual const char * getErrors()=0;
	virtual bool getMixedNodeStates()=0;
};

interface IEspClusterQueryState : extends IConstClusterQueryState
{
	virtual void setCluster(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setErrors(const char * val)=0;
	virtual void setMixedNodeStates(bool val)=0;
	virtual void copy(IConstClusterQueryState &from)=0;
};

interface IClientClusterQueryState : extends IInterface
{
	virtual void setCluster(const char * val)=0;
	virtual void setState(const char * val)=0;
	virtual void setErrors(const char * val)=0;
	virtual void setMixedNodeStates(bool val)=0;
	virtual const char * getCluster()=0;
	virtual const char * getState()=0;
	virtual const char * getErrors()=0;
	virtual bool getMixedNodeStates()=0;
};



interface IConstQuerySetQuery : extends IEspStruct
{
	virtual const char * getId()=0;
	virtual const char * getName()=0;
	virtual const char * getWuid()=0;
	virtual const char * getDll()=0;
	virtual bool getSuspended_isNull()=0;
	virtual bool getSuspended()=0;
	virtual IArrayOf<IConstClusterQueryState> & getClusters()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual unsigned int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual unsigned int getWarnTimeLimit()=0;
	virtual const char * getPriority()=0;
	virtual const char * getComment()=0;
	virtual const char * getQuerySetId()=0;
	virtual bool getIsLibrary_isNull()=0;
	virtual bool getIsLibrary()=0;
	virtual bool getActivated_isNull()=0;
	virtual bool getActivated()=0;
	virtual const char * getPublishedBy()=0;
	virtual const char * getSnapshot()=0;
};

interface IEspQuerySetQuery : extends IConstQuerySetQuery
{
	virtual void setId(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setDll(const char * val)=0;
	virtual void setSuspended_null()=0;
	virtual void setSuspended(bool val)=0;
	virtual void setClusters(IArrayOf<IEspClusterQueryState> &val)=0;
	virtual void setClusters(IArrayOf<IConstClusterQueryState> &val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setQuerySetId(const char * val)=0;
	virtual void setIsLibrary_null()=0;
	virtual void setIsLibrary(bool val)=0;
	virtual void setActivated_null()=0;
	virtual void setActivated(bool val)=0;
	virtual void setPublishedBy(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual void copy(IConstQuerySetQuery &from)=0;
};

interface IClientQuerySetQuery : extends IInterface
{
	virtual void setId(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setDll(const char * val)=0;
	virtual void setSuspended_null()=0;
	virtual void setSuspended(bool val)=0;
	virtual void setClusters(IArrayOf<IEspClusterQueryState> &val)=0;
	virtual void setClusters(IArrayOf<IConstClusterQueryState> &val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setQuerySetId(const char * val)=0;
	virtual void setIsLibrary_null()=0;
	virtual void setIsLibrary(bool val)=0;
	virtual void setActivated_null()=0;
	virtual void setActivated(bool val)=0;
	virtual void setPublishedBy(const char * val)=0;
	virtual void setSnapshot(const char * val)=0;
	virtual const char * getId()=0;
	virtual const char * getName()=0;
	virtual const char * getWuid()=0;
	virtual const char * getDll()=0;
	virtual bool getSuspended_isNull()=0;
	virtual bool getSuspended()=0;
	virtual IArrayOf<IConstClusterQueryState> & getClusters()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual unsigned int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual unsigned int getWarnTimeLimit()=0;
	virtual const char * getPriority()=0;
	virtual const char * getComment()=0;
	virtual const char * getQuerySetId()=0;
	virtual bool getIsLibrary_isNull()=0;
	virtual bool getIsLibrary()=0;
	virtual bool getActivated_isNull()=0;
	virtual bool getActivated()=0;
	virtual const char * getPublishedBy()=0;
	virtual const char * getSnapshot()=0;
};



interface IConstQuerySetAlias : extends IEspStruct
{
	virtual const char * getId()=0;
	virtual const char * getName()=0;
};

interface IEspQuerySetAlias : extends IConstQuerySetAlias
{
	virtual void setId(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void copy(IConstQuerySetAlias &from)=0;
};

interface IClientQuerySetAlias : extends IInterface
{
	virtual void setId(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual const char * getId()=0;
	virtual const char * getName()=0;
};



enum CWUQuerySetFilterType { WUQuerySetFilterType_Undefined=-1,CWUQuerySetFilterType_ALL, CWUQuerySetFilterType_ID, CWUQuerySetFilterType_NAME, CWUQuerySetFilterType_ALIAS, CWUQuerySetFilterType_STATUS, };
typedef ArrayOf<CWUQuerySetFilterType> WUQuerySetFilterTypeArray;


interface IConstWUQuerySetDetailsRequest : extends IEspRequest
{
	virtual const char * getQuerySetName()=0;
	virtual const char * getFilter()=0;
	virtual const char * getClusterName()=0;
	virtual CWUQuerySetFilterType getFilterType()=0;
	virtual const char* getFilterTypeAsString()=0;
	virtual bool getCheckAllNodes()=0;
};

interface IEspWUQuerySetDetailsRequest : extends IConstWUQuerySetDetailsRequest
{
	virtual void setQuerySetName(const char * val)=0;
	virtual void setFilter(const char * val)=0;
	virtual void setClusterName(const char * val)=0;
	virtual void setFilterType(CWUQuerySetFilterType val)=0;
	virtual void setFilterType(const char* val)=0;
	virtual void setCheckAllNodes(bool val)=0;
	virtual void copy(IConstWUQuerySetDetailsRequest &from)=0;
};

interface IClientWUQuerySetDetailsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setQuerySetName(const char * val)=0;
	virtual void setFilter(const char * val)=0;
	virtual void setClusterName(const char * val)=0;
	virtual void setFilterType(CWUQuerySetFilterType val)=0;
	virtual void setFilterType(const char* val)=0;
	virtual void setCheckAllNodes(bool val)=0;
};



interface IConstWUQuerySetDetailsResponse : extends IEspResponse
{
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetQuery> & getQuerysetQueries()=0;
	virtual IArrayOf<IConstQuerySetAlias> & getQuerysetAliases()=0;
	virtual const char * getClusterName()=0;
	virtual const char * getFilter()=0;
	virtual CWUQuerySetFilterType getFilterType()=0;
	virtual const char* getFilterTypeAsString()=0;
	virtual StringArray & getClusterNames()=0;
};

interface IEspWUQuerySetDetailsResponse : extends IConstWUQuerySetDetailsResponse
{
	virtual void setQuerySetName(const char * val)=0;
	virtual void setQuerysetQueries(IArrayOf<IEspQuerySetQuery> &val)=0;
	virtual void setQuerysetQueries(IArrayOf<IConstQuerySetQuery> &val)=0;
	virtual void setQuerysetAliases(IArrayOf<IEspQuerySetAlias> &val)=0;
	virtual void setQuerysetAliases(IArrayOf<IConstQuerySetAlias> &val)=0;
	virtual void setClusterName(const char * val)=0;
	virtual void setFilter(const char * val)=0;
	virtual void setFilterType(CWUQuerySetFilterType val)=0;
	virtual void setFilterType(const char* val)=0;
	virtual void setClusterNames(StringArray &val)=0;
	virtual void copy(IConstWUQuerySetDetailsResponse &from)=0;
};

interface IClientWUQuerySetDetailsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetQuery> & getQuerysetQueries()=0;
	virtual IArrayOf<IConstQuerySetAlias> & getQuerysetAliases()=0;
	virtual const char * getClusterName()=0;
	virtual const char * getFilter()=0;
	virtual CWUQuerySetFilterType getFilterType()=0;
	virtual const char* getFilterTypeAsString()=0;
	virtual StringArray & getClusterNames()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUListQueriesRequest : extends IEspRequest
{
	virtual const char * getQuerySetName()=0;
	virtual const char * getClusterName()=0;
	virtual const char * getLibraryName()=0;
	virtual bool getMemoryLimitLow_isNull()=0;
	virtual __int64 getMemoryLimitLow()=0;
	virtual bool getMemoryLimitHigh_isNull()=0;
	virtual __int64 getMemoryLimitHigh()=0;
	virtual bool getTimeLimitLow_isNull()=0;
	virtual unsigned int getTimeLimitLow()=0;
	virtual bool getTimeLimitHigh_isNull()=0;
	virtual unsigned int getTimeLimitHigh()=0;
	virtual bool getWarnTimeLimitLow_isNull()=0;
	virtual unsigned int getWarnTimeLimitLow()=0;
	virtual bool getWarnTimeLimitHigh_isNull()=0;
	virtual unsigned int getWarnTimeLimitHigh()=0;
	virtual bool getPriorityLow_isNull()=0;
	virtual unsigned int getPriorityLow()=0;
	virtual bool getPriorityHigh_isNull()=0;
	virtual unsigned int getPriorityHigh()=0;
	virtual bool getActivated_isNull()=0;
	virtual bool getActivated()=0;
	virtual bool getSuspendedByUser_isNull()=0;
	virtual bool getSuspendedByUser()=0;
	virtual const char * getWUID()=0;
	virtual const char * getQueryID()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getPublishedBy()=0;
	virtual bool getPageSize_isNull()=0;
	virtual unsigned int getPageSize()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual unsigned int getPageStartFrom()=0;
	virtual const char * getSortby()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
	virtual const char * getFileName()=0;
	virtual bool getCheckAllNodes_isNull()=0;
	virtual bool getCheckAllNodes()=0;
};

interface IEspWUListQueriesRequest : extends IConstWUListQueriesRequest
{
	virtual void setQuerySetName(const char * val)=0;
	virtual void setClusterName(const char * val)=0;
	virtual void setLibraryName(const char * val)=0;
	virtual void setMemoryLimitLow_null()=0;
	virtual void setMemoryLimitLow(__int64 val)=0;
	virtual void setMemoryLimitHigh_null()=0;
	virtual void setMemoryLimitHigh(__int64 val)=0;
	virtual void setTimeLimitLow_null()=0;
	virtual void setTimeLimitLow(unsigned int val)=0;
	virtual void setTimeLimitHigh_null()=0;
	virtual void setTimeLimitHigh(unsigned int val)=0;
	virtual void setWarnTimeLimitLow_null()=0;
	virtual void setWarnTimeLimitLow(unsigned int val)=0;
	virtual void setWarnTimeLimitHigh_null()=0;
	virtual void setWarnTimeLimitHigh(unsigned int val)=0;
	virtual void setPriorityLow_null()=0;
	virtual void setPriorityLow(unsigned int val)=0;
	virtual void setPriorityHigh_null()=0;
	virtual void setPriorityHigh(unsigned int val)=0;
	virtual void setActivated_null()=0;
	virtual void setActivated(bool val)=0;
	virtual void setSuspendedByUser_null()=0;
	virtual void setSuspendedByUser(bool val)=0;
	virtual void setWUID(const char * val)=0;
	virtual void setQueryID(const char * val)=0;
	virtual void setQueryName(const char * val)=0;
	virtual void setPublishedBy(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(unsigned int val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setCheckAllNodes_null()=0;
	virtual void setCheckAllNodes(bool val)=0;
	virtual void copy(IConstWUListQueriesRequest &from)=0;
};

interface IClientWUListQueriesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setQuerySetName(const char * val)=0;
	virtual void setClusterName(const char * val)=0;
	virtual void setLibraryName(const char * val)=0;
	virtual void setMemoryLimitLow_null()=0;
	virtual void setMemoryLimitLow(__int64 val)=0;
	virtual void setMemoryLimitHigh_null()=0;
	virtual void setMemoryLimitHigh(__int64 val)=0;
	virtual void setTimeLimitLow_null()=0;
	virtual void setTimeLimitLow(unsigned int val)=0;
	virtual void setTimeLimitHigh_null()=0;
	virtual void setTimeLimitHigh(unsigned int val)=0;
	virtual void setWarnTimeLimitLow_null()=0;
	virtual void setWarnTimeLimitLow(unsigned int val)=0;
	virtual void setWarnTimeLimitHigh_null()=0;
	virtual void setWarnTimeLimitHigh(unsigned int val)=0;
	virtual void setPriorityLow_null()=0;
	virtual void setPriorityLow(unsigned int val)=0;
	virtual void setPriorityHigh_null()=0;
	virtual void setPriorityHigh(unsigned int val)=0;
	virtual void setActivated_null()=0;
	virtual void setActivated(bool val)=0;
	virtual void setSuspendedByUser_null()=0;
	virtual void setSuspendedByUser(bool val)=0;
	virtual void setWUID(const char * val)=0;
	virtual void setQueryID(const char * val)=0;
	virtual void setQueryName(const char * val)=0;
	virtual void setPublishedBy(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(unsigned int val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setCheckAllNodes_null()=0;
	virtual void setCheckAllNodes(bool val)=0;
};



interface IConstWUListQueriesResponse : extends IEspResponse
{
	virtual int getNumberOfQueries()=0;
	virtual __int64 getCacheHint()=0;
	virtual IArrayOf<IConstQuerySetQuery> & getQuerysetQueries()=0;
};

interface IEspWUListQueriesResponse : extends IConstWUListQueriesResponse
{
	virtual void setNumberOfQueries(int val)=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void setQuerysetQueries(IArrayOf<IEspQuerySetQuery> &val)=0;
	virtual void setQuerysetQueries(IArrayOf<IConstQuerySetQuery> &val)=0;
	virtual void copy(IConstWUListQueriesResponse &from)=0;
};

interface IClientWUListQueriesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getNumberOfQueries()=0;
	virtual __int64 getCacheHint()=0;
	virtual IArrayOf<IConstQuerySetQuery> & getQuerysetQueries()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUListQueriesUsingFileRequest : extends IEspRequest
{
	virtual const char * getTarget()=0;
	virtual const char * getProcess()=0;
	virtual const char * getFileName()=0;
};

interface IEspWUListQueriesUsingFileRequest : extends IConstWUListQueriesUsingFileRequest
{
	virtual void setTarget(const char * val)=0;
	virtual void setProcess(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void copy(IConstWUListQueriesUsingFileRequest &from)=0;
};

interface IClientWUListQueriesUsingFileRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTarget(const char * val)=0;
	virtual void setProcess(const char * val)=0;
	virtual void setFileName(const char * val)=0;
};



interface IConstQueryUsingFile : extends IEspStruct
{
	virtual const char * getId()=0;
	virtual const char * getPackage()=0;
};

interface IEspQueryUsingFile : extends IConstQueryUsingFile
{
	virtual void setId(const char * val)=0;
	virtual void setPackage(const char * val)=0;
	virtual void copy(IConstQueryUsingFile &from)=0;
};

interface IClientQueryUsingFile : extends IInterface
{
	virtual void setId(const char * val)=0;
	virtual void setPackage(const char * val)=0;
	virtual const char * getId()=0;
	virtual const char * getPackage()=0;
};



interface IConstTargetQueriesUsingFile : extends IEspStruct
{
	virtual const char * getTarget()=0;
	virtual const char * getPackageMap()=0;
	virtual IArrayOf<IConstQueryUsingFile> & getQueries()=0;
};

interface IEspTargetQueriesUsingFile : extends IConstTargetQueriesUsingFile
{
	virtual void setTarget(const char * val)=0;
	virtual void setPackageMap(const char * val)=0;
	virtual void setQueries(IArrayOf<IEspQueryUsingFile> &val)=0;
	virtual void setQueries(IArrayOf<IConstQueryUsingFile> &val)=0;
	virtual void copy(IConstTargetQueriesUsingFile &from)=0;
};

interface IClientTargetQueriesUsingFile : extends IInterface
{
	virtual void setTarget(const char * val)=0;
	virtual void setPackageMap(const char * val)=0;
	virtual void setQueries(IArrayOf<IEspQueryUsingFile> &val)=0;
	virtual void setQueries(IArrayOf<IConstQueryUsingFile> &val)=0;
	virtual const char * getTarget()=0;
	virtual const char * getPackageMap()=0;
	virtual IArrayOf<IConstQueryUsingFile> & getQueries()=0;
};




interface IConstWUListQueriesUsingFileResponse : extends IEspResponse
{
	virtual const char * getProcess()=0;
	virtual const char * getFileName()=0;
	virtual IArrayOf<IConstTargetQueriesUsingFile> & getTargets()=0;
};

interface IEspWUListQueriesUsingFileResponse : extends IConstWUListQueriesUsingFileResponse
{
	virtual void setProcess(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setTargets(IArrayOf<IEspTargetQueriesUsingFile> &val)=0;
	virtual void setTargets(IArrayOf<IConstTargetQueriesUsingFile> &val)=0;
	virtual void copy(IConstWUListQueriesUsingFileResponse &from)=0;
};

interface IClientWUListQueriesUsingFileResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getProcess()=0;
	virtual const char * getFileName()=0;
	virtual IArrayOf<IConstTargetQueriesUsingFile> & getTargets()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUQueryFilesRequest : extends IEspRequest
{
	virtual const char * getTarget()=0;
	virtual const char * getQueryId()=0;
};

interface IEspWUQueryFilesRequest : extends IConstWUQueryFilesRequest
{
	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void copy(IConstWUQueryFilesRequest &from)=0;
};

interface IClientWUQueryFilesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTarget(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
};



interface IConstFileUsedByQuery : extends IEspStruct
{
	virtual const char * getFileName()=0;
	virtual bool getFileSize_isNull()=0;
	virtual __int64 getFileSize()=0;
	virtual bool getNumberOfParts_isNull()=0;
	virtual unsigned int getNumberOfParts()=0;
};

interface IEspFileUsedByQuery : extends IConstFileUsedByQuery
{
	virtual void setFileName(const char * val)=0;
	virtual void setFileSize_null()=0;
	virtual void setFileSize(__int64 val)=0;
	virtual void setNumberOfParts_null()=0;
	virtual void setNumberOfParts(unsigned int val)=0;
	virtual void copy(IConstFileUsedByQuery &from)=0;
};

interface IClientFileUsedByQuery : extends IInterface
{
	virtual void setFileName(const char * val)=0;
	virtual void setFileSize_null()=0;
	virtual void setFileSize(__int64 val)=0;
	virtual void setNumberOfParts_null()=0;
	virtual void setNumberOfParts(unsigned int val)=0;
	virtual const char * getFileName()=0;
	virtual bool getFileSize_isNull()=0;
	virtual __int64 getFileSize()=0;
	virtual bool getNumberOfParts_isNull()=0;
	virtual unsigned int getNumberOfParts()=0;
};



interface IConstWUQueryFilesResponse : extends IEspResponse
{
	virtual IArrayOf<IConstFileUsedByQuery> & getFiles()=0;
};

interface IEspWUQueryFilesResponse : extends IConstWUQueryFilesResponse
{
	virtual void setFiles(IArrayOf<IEspFileUsedByQuery> &val)=0;
	virtual void setFiles(IArrayOf<IConstFileUsedByQuery> &val)=0;
	virtual void copy(IConstWUQueryFilesResponse &from)=0;
};

interface IClientWUQueryFilesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstFileUsedByQuery> & getFiles()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUQueryDetailsRequest : extends IEspRequest
{
	virtual const char * getQueryId()=0;
	virtual const char * getQuerySet()=0;
	virtual bool getIncludeStateOnClusters()=0;
	virtual bool getIncludeSuperFiles()=0;
	virtual bool getIncludeWsEclAddresses()=0;
	virtual bool getCheckAllNodes()=0;
};

interface IEspWUQueryDetailsRequest : extends IConstWUQueryDetailsRequest
{
	virtual void setQueryId(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setIncludeStateOnClusters(bool val)=0;
	virtual void setIncludeSuperFiles(bool val)=0;
	virtual void setIncludeWsEclAddresses(bool val)=0;
	virtual void setCheckAllNodes(bool val)=0;
	virtual void copy(IConstWUQueryDetailsRequest &from)=0;
};

interface IClientWUQueryDetailsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setQueryId(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setIncludeStateOnClusters(bool val)=0;
	virtual void setIncludeSuperFiles(bool val)=0;
	virtual void setIncludeWsEclAddresses(bool val)=0;
	virtual void setCheckAllNodes(bool val)=0;
};



interface IConstQuerySuperFile : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual StringArray & getSubFiles()=0;
	virtual IArrayOf<IConstQuerySuperFile> & getSuperFiles()=0;
};

interface IEspQuerySuperFile : extends IConstQuerySuperFile
{
	virtual void setName(const char * val)=0;
	virtual void setSubFiles(StringArray &val)=0;
	virtual void setSuperFiles(IArrayOf<IEspQuerySuperFile> &val)=0;
	virtual void setSuperFiles(IArrayOf<IConstQuerySuperFile> &val)=0;
	virtual void copy(IConstQuerySuperFile &from)=0;
};

interface IClientQuerySuperFile : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setSubFiles(StringArray &val)=0;
	virtual void setSuperFiles(IArrayOf<IEspQuerySuperFile> &val)=0;
	virtual void setSuperFiles(IArrayOf<IConstQuerySuperFile> &val)=0;
	virtual const char * getName()=0;
	virtual StringArray & getSubFiles()=0;
	virtual IArrayOf<IConstQuerySuperFile> & getSuperFiles()=0;
};



interface IConstWUQueryDetailsResponse : extends IEspResponse
{
	virtual const char * getQueryId()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getWuid()=0;
	virtual const char * getDll()=0;
	virtual bool getSuspended()=0;
	virtual bool getActivated()=0;
	virtual const char * getSuspendedBy()=0;
	virtual IArrayOf<IConstClusterQueryState> & getClusters()=0;
	virtual const char * getPublishedBy()=0;
	virtual const char * getComment()=0;
	virtual StringArray & getLogicalFiles()=0;
	virtual IArrayOf<IConstQuerySuperFile> & getSuperFiles()=0;
	virtual bool getIsLibrary()=0;
	virtual const char * getPriority()=0;
	virtual const char * getWUSnapShot()=0;
	virtual const char * getCompileTime()=0;
	virtual StringArray & getLibrariesUsed()=0;
	virtual int getCountGraphs()=0;
	virtual StringArray & getGraphIds()=0;
	virtual int getResourceURLCount()=0;
	virtual StringArray & getWsEclAddresses()=0;
	virtual IArrayOf<IConstECLGraph> & getWUGraphs()=0;
	virtual IArrayOf<IConstECLTimer> & getWUTimers()=0;
};

interface IEspWUQueryDetailsResponse : extends IConstWUQueryDetailsResponse
{
	virtual void setQueryId(const char * val)=0;
	virtual void setQuerySet(const char * val)=0;
	virtual void setQueryName(const char * val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void setDll(const char * val)=0;
	virtual void setSuspended(bool val)=0;
	virtual void setActivated(bool val)=0;
	virtual void setSuspendedBy(const char * val)=0;
	virtual void setClusters(IArrayOf<IEspClusterQueryState> &val)=0;
	virtual void setClusters(IArrayOf<IConstClusterQueryState> &val)=0;
	virtual void setPublishedBy(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setLogicalFiles(StringArray &val)=0;
	virtual void setSuperFiles(IArrayOf<IEspQuerySuperFile> &val)=0;
	virtual void setSuperFiles(IArrayOf<IConstQuerySuperFile> &val)=0;
	virtual void setIsLibrary(bool val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setWUSnapShot(const char * val)=0;
	virtual void setCompileTime(const char * val)=0;
	virtual void setLibrariesUsed(StringArray &val)=0;
	virtual void setCountGraphs(int val)=0;
	virtual void setGraphIds(StringArray &val)=0;
	virtual void setResourceURLCount(int val)=0;
	virtual void setWsEclAddresses(StringArray &val)=0;
	virtual void setWUGraphs(IArrayOf<IEspECLGraph> &val)=0;
	virtual void setWUGraphs(IArrayOf<IConstECLGraph> &val)=0;
	virtual void setWUTimers(IArrayOf<IEspECLTimer> &val)=0;
	virtual void setWUTimers(IArrayOf<IConstECLTimer> &val)=0;
	virtual void copy(IConstWUQueryDetailsResponse &from)=0;
};

interface IClientWUQueryDetailsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getQueryId()=0;
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryName()=0;
	virtual const char * getWuid()=0;
	virtual const char * getDll()=0;
	virtual bool getSuspended()=0;
	virtual bool getActivated()=0;
	virtual const char * getSuspendedBy()=0;
	virtual IArrayOf<IConstClusterQueryState> & getClusters()=0;
	virtual const char * getPublishedBy()=0;
	virtual const char * getComment()=0;
	virtual StringArray & getLogicalFiles()=0;
	virtual IArrayOf<IConstQuerySuperFile> & getSuperFiles()=0;
	virtual bool getIsLibrary()=0;
	virtual const char * getPriority()=0;
	virtual const char * getWUSnapShot()=0;
	virtual const char * getCompileTime()=0;
	virtual StringArray & getLibrariesUsed()=0;
	virtual int getCountGraphs()=0;
	virtual StringArray & getGraphIds()=0;
	virtual int getResourceURLCount()=0;
	virtual StringArray & getWsEclAddresses()=0;
	virtual IArrayOf<IConstECLGraph> & getWUGraphs()=0;
	virtual IArrayOf<IConstECLTimer> & getWUTimers()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUMultiQuerySetDetailsRequest : extends IEspRequest
{
	virtual const char * getClusterName()=0;
	virtual const char * getQuerySetName()=0;
	virtual const char * getFilter()=0;
	virtual CWUQuerySetFilterType getFilterType()=0;
	virtual const char* getFilterTypeAsString()=0;
	virtual bool getCheckAllNodes()=0;
};

interface IEspWUMultiQuerySetDetailsRequest : extends IConstWUMultiQuerySetDetailsRequest
{
	virtual void setClusterName(const char * val)=0;
	virtual void setQuerySetName(const char * val)=0;
	virtual void setFilter(const char * val)=0;
	virtual void setFilterType(CWUQuerySetFilterType val)=0;
	virtual void setFilterType(const char* val)=0;
	virtual void setCheckAllNodes(bool val)=0;
	virtual void copy(IConstWUMultiQuerySetDetailsRequest &from)=0;
};

interface IClientWUMultiQuerySetDetailsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setClusterName(const char * val)=0;
	virtual void setQuerySetName(const char * val)=0;
	virtual void setFilter(const char * val)=0;
	virtual void setFilterType(CWUQuerySetFilterType val)=0;
	virtual void setFilterType(const char* val)=0;
	virtual void setCheckAllNodes(bool val)=0;
};



interface IConstWUQuerySetDetail : extends IEspStruct
{
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetQuery> & getQueries()=0;
	virtual IArrayOf<IConstQuerySetAlias> & getAliases()=0;
};

interface IEspWUQuerySetDetail : extends IConstWUQuerySetDetail
{
	virtual void setQuerySetName(const char * val)=0;
	virtual void setQueries(IArrayOf<IEspQuerySetQuery> &val)=0;
	virtual void setQueries(IArrayOf<IConstQuerySetQuery> &val)=0;
	virtual void setAliases(IArrayOf<IEspQuerySetAlias> &val)=0;
	virtual void setAliases(IArrayOf<IConstQuerySetAlias> &val)=0;
	virtual void copy(IConstWUQuerySetDetail &from)=0;
};

interface IClientWUQuerySetDetail : extends IInterface
{
	virtual void setQuerySetName(const char * val)=0;
	virtual void setQueries(IArrayOf<IEspQuerySetQuery> &val)=0;
	virtual void setQueries(IArrayOf<IConstQuerySetQuery> &val)=0;
	virtual void setAliases(IArrayOf<IEspQuerySetAlias> &val)=0;
	virtual void setAliases(IArrayOf<IConstQuerySetAlias> &val)=0;
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetQuery> & getQueries()=0;
	virtual IArrayOf<IConstQuerySetAlias> & getAliases()=0;
};




interface IConstWUMultiQuerySetDetailsResponse : extends IEspResponse
{
	virtual const char * getClusterName()=0;
	virtual IArrayOf<IConstWUQuerySetDetail> & getQuerysets()=0;
};

interface IEspWUMultiQuerySetDetailsResponse : extends IConstWUMultiQuerySetDetailsResponse
{
	virtual void setClusterName(const char * val)=0;
	virtual void setQuerysets(IArrayOf<IEspWUQuerySetDetail> &val)=0;
	virtual void setQuerysets(IArrayOf<IConstWUQuerySetDetail> &val)=0;
	virtual void copy(IConstWUMultiQuerySetDetailsResponse &from)=0;
};

interface IClientWUMultiQuerySetDetailsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getClusterName()=0;
	virtual IArrayOf<IConstWUQuerySetDetail> & getQuerysets()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUQuerysetExportRequest : extends IEspRequest
{
	virtual const char * getTarget()=0;
	virtual bool getCompress()=0;
	virtual bool getActiveOnly()=0;
	virtual bool getProtect()=0;
};

interface IEspWUQuerysetExportRequest : extends IConstWUQuerysetExportRequest
{
	virtual void setTarget(const char * val)=0;
	virtual void setCompress(bool val)=0;
	virtual void setActiveOnly(bool val)=0;
	virtual void setProtect(bool val)=0;
	virtual void copy(IConstWUQuerysetExportRequest &from)=0;
};

interface IClientWUQuerysetExportRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTarget(const char * val)=0;
	virtual void setCompress(bool val)=0;
	virtual void setActiveOnly(bool val)=0;
	virtual void setProtect(bool val)=0;
};



interface IConstWUQuerysetExportResponse : extends IEspResponse
{
	virtual const char * getTarget()=0;
	virtual bool getCompressed()=0;
	virtual const MemoryBuffer & getData()=0;
};

interface IEspWUQuerysetExportResponse : extends IConstWUQuerysetExportResponse
{
	virtual void setTarget(const char * val)=0;
	virtual void setCompressed(bool val)=0;
	virtual void setData(const MemoryBuffer & val)=0;
	virtual void copy(IConstWUQuerysetExportResponse &from)=0;
};

interface IClientWUQuerysetExportResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getTarget()=0;
	virtual bool getCompressed()=0;
	virtual const MemoryBuffer & getData()=0;

	virtual const IMultiException& getExceptions()=0;
};



enum CQuerysetImportActivation { QuerysetImportActivation_Undefined=-1,CQuerysetImportActivation_None, CQuerysetImportActivation_ImportedActive, };
typedef ArrayOf<CQuerysetImportActivation> QuerysetImportActivationArray;



interface IConstWUQuerysetImportRequest : extends IEspRequest
{
	virtual const char * getTarget()=0;
	virtual const char * getQueryMask()=0;
	virtual bool getReplace()=0;
	virtual bool getActiveOnly()=0;
	virtual CQuerysetImportActivation getActivation()=0;
	virtual const char* getActivationAsString()=0;
	virtual bool getCompressed()=0;
	virtual const MemoryBuffer & getData()=0;
	virtual bool getAllowForeignFiles()=0;
	virtual const char * getDfsServer()=0;
	virtual bool getCopyFiles()=0;
	virtual bool getOverwriteDfs()=0;
	virtual const char * getSourceProcess()=0;
	virtual bool getUpdateSuperFiles()=0;
	virtual bool getUpdateCloneFrom()=0;
	virtual bool getAppendCluster()=0;
	virtual bool getIncludeFileErrors()=0;
};

interface IEspWUQuerysetImportRequest : extends IConstWUQuerysetImportRequest
{
	virtual void setTarget(const char * val)=0;
	virtual void setQueryMask(const char * val)=0;
	virtual void setReplace(bool val)=0;
	virtual void setActiveOnly(bool val)=0;
	virtual void setActivation(CQuerysetImportActivation val)=0;
	virtual void setActivation(const char* val)=0;
	virtual void setCompressed(bool val)=0;
	virtual void setData(const MemoryBuffer & val)=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setDfsServer(const char * val)=0;
	virtual void setCopyFiles(bool val)=0;
	virtual void setOverwriteDfs(bool val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors(bool val)=0;
	virtual void copy(IConstWUQuerysetImportRequest &from)=0;
};

interface IClientWUQuerysetImportRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setTarget(const char * val)=0;
	virtual void setQueryMask(const char * val)=0;
	virtual void setReplace(bool val)=0;
	virtual void setActiveOnly(bool val)=0;
	virtual void setActivation(CQuerysetImportActivation val)=0;
	virtual void setActivation(const char* val)=0;
	virtual void setCompressed(bool val)=0;
	virtual void setData(const MemoryBuffer & val)=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setDfsServer(const char * val)=0;
	virtual void setCopyFiles(bool val)=0;
	virtual void setOverwriteDfs(bool val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors(bool val)=0;
};



interface IConstWUQuerysetImportResponse : extends IEspResponse
{
	virtual const char * getTarget()=0;
	virtual bool getClearedExisting()=0;
	virtual bool getSuccess()=0;
	virtual StringArray & getImportedQueries()=0;
	virtual StringArray & getExistingQueries()=0;
	virtual StringArray & getMissingWuids()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;
};

interface IEspWUQuerysetImportResponse : extends IConstWUQuerysetImportResponse
{
	virtual void setTarget(const char * val)=0;
	virtual void setClearedExisting(bool val)=0;
	virtual void setSuccess(bool val)=0;
	virtual void setImportedQueries(StringArray &val)=0;
	virtual void setExistingQueries(StringArray &val)=0;
	virtual void setMissingWuids(StringArray &val)=0;
	virtual void setFileErrors(IArrayOf<IEspLogicalFileError> &val)=0;
	virtual void setFileErrors(IArrayOf<IConstLogicalFileError> &val)=0;
	virtual void copy(IConstWUQuerysetImportResponse &from)=0;
};

interface IClientWUQuerysetImportResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getTarget()=0;
	virtual bool getClearedExisting()=0;
	virtual bool getSuccess()=0;
	virtual StringArray & getImportedQueries()=0;
	virtual StringArray & getExistingQueries()=0;
	virtual StringArray & getMissingWuids()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUUpdateQueryEntryRequest : extends IEspRequest
{
	virtual const char * getQuerySet()=0;
	virtual const char * getQueryId()=0;
	virtual const char * getComment()=0;
};

interface IEspWUUpdateQueryEntryRequest : extends IConstWUUpdateQueryEntryRequest
{
	virtual void setQuerySet(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void copy(IConstWUUpdateQueryEntryRequest &from)=0;
};

interface IClientWUUpdateQueryEntryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setQuerySet(const char * val)=0;
	virtual void setQueryId(const char * val)=0;
	virtual void setComment(const char * val)=0;
};



interface IConstWUUpdateQueryEntryResponse : extends IEspResponse
{
};

interface IEspWUUpdateQueryEntryResponse : extends IConstWUUpdateQueryEntryResponse
{
	virtual void copy(IConstWUUpdateQueryEntryResponse &from)=0;
};

interface IClientWUUpdateQueryEntryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;

	virtual const IMultiException& getExceptions()=0;
};



enum CQuerySetQueryActionTypes { QuerySetQueryActionTypes_Undefined=-1,CQuerySetQueryActionTypes_Suspend, CQuerySetQueryActionTypes_Unsuspend, CQuerySetQueryActionTypes_ToggleSuspend, CQuerySetQueryActionTypes_Activate, CQuerySetQueryActionTypes_Delete, CQuerySetQueryActionTypes_RemoveAllAliases, CQuerySetQueryActionTypes_ResetQueryStats, };
typedef ArrayOf<CQuerySetQueryActionTypes> QuerySetQueryActionTypesArray;


interface IConstQuerySetQueryClientState : extends IEspStruct
{
	virtual const char * getSuspended()=0;
};

interface IEspQuerySetQueryClientState : extends IConstQuerySetQueryClientState
{
	virtual void setSuspended(const char * val)=0;
	virtual void copy(IConstQuerySetQueryClientState &from)=0;
};

interface IClientQuerySetQueryClientState : extends IInterface
{
	virtual void setSuspended(const char * val)=0;
	virtual const char * getSuspended()=0;
};



interface IConstQuerySetQueryActionItem : extends IEspStruct
{
	virtual const char * getQueryId()=0;
	virtual IConstQuerySetQueryClientState & getClientState()=0;
};

interface IEspQuerySetQueryActionItem : extends IConstQuerySetQueryActionItem
{
	virtual void setQueryId(const char * val)=0;
	virtual IEspQuerySetQueryClientState & updateClientState()=0;
	virtual void setClientState(IConstQuerySetQueryClientState &ifrom)=0;
	virtual void copy(IConstQuerySetQueryActionItem &from)=0;
};

interface IClientQuerySetQueryActionItem : extends IInterface
{
	virtual void setQueryId(const char * val)=0;
	virtual IEspQuerySetQueryClientState & updateClientState()=0;
	virtual void setClientState(IConstQuerySetQueryClientState &ifrom)=0;
	virtual const char * getQueryId()=0;
	virtual IConstQuerySetQueryClientState & getClientState()=0;
};



interface IConstWUQuerySetQueryActionRequest : extends IEspRequest
{
	virtual CQuerySetQueryActionTypes getAction()=0;
	virtual const char* getActionAsString()=0;
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetQueryActionItem> & getQueries()=0;
};

interface IEspWUQuerySetQueryActionRequest : extends IConstWUQuerySetQueryActionRequest
{
	virtual void setAction(CQuerySetQueryActionTypes val)=0;
	virtual void setAction(const char* val)=0;
	virtual void setQuerySetName(const char * val)=0;
	virtual void setQueries(IArrayOf<IEspQuerySetQueryActionItem> &val)=0;
	virtual void setQueries(IArrayOf<IConstQuerySetQueryActionItem> &val)=0;
	virtual void copy(IConstWUQuerySetQueryActionRequest &from)=0;
};

interface IClientWUQuerySetQueryActionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setAction(CQuerySetQueryActionTypes val)=0;
	virtual void setAction(const char* val)=0;
	virtual void setQuerySetName(const char * val)=0;
	virtual void setQueries(IArrayOf<IEspQuerySetQueryActionItem> &val)=0;
	virtual void setQueries(IArrayOf<IConstQuerySetQueryActionItem> &val)=0;
};



interface IConstQuerySetQueryActionResult : extends IEspStruct
{
	virtual const char * getQueryId()=0;
	virtual bool getSuspended()=0;
	virtual bool getSuccess()=0;
	virtual int getCode()=0;
	virtual const char * getMessage()=0;
};

interface IEspQuerySetQueryActionResult : extends IConstQuerySetQueryActionResult
{
	virtual void setQueryId(const char * val)=0;
	virtual void setSuspended(bool val)=0;
	virtual void setSuccess(bool val)=0;
	virtual void setCode(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstQuerySetQueryActionResult &from)=0;
};

interface IClientQuerySetQueryActionResult : extends IInterface
{
	virtual void setQueryId(const char * val)=0;
	virtual void setSuspended(bool val)=0;
	virtual void setSuccess(bool val)=0;
	virtual void setCode(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual const char * getQueryId()=0;
	virtual bool getSuspended()=0;
	virtual bool getSuccess()=0;
	virtual int getCode()=0;
	virtual const char * getMessage()=0;
};



interface IConstWUQuerySetQueryActionResponse : extends IEspResponse
{
	virtual CQuerySetQueryActionTypes getAction()=0;
	virtual const char* getActionAsString()=0;
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetQueryActionResult> & getResults()=0;
};

interface IEspWUQuerySetQueryActionResponse : extends IConstWUQuerySetQueryActionResponse
{
	virtual void setAction(CQuerySetQueryActionTypes val)=0;
	virtual void setAction(const char* val)=0;
	virtual void setQuerySetName(const char * val)=0;
	virtual void setResults(IArrayOf<IEspQuerySetQueryActionResult> &val)=0;
	virtual void setResults(IArrayOf<IConstQuerySetQueryActionResult> &val)=0;
	virtual void copy(IConstWUQuerySetQueryActionResponse &from)=0;
};

interface IClientWUQuerySetQueryActionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual CQuerySetQueryActionTypes getAction()=0;
	virtual const char* getActionAsString()=0;
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetQueryActionResult> & getResults()=0;

	virtual const IMultiException& getExceptions()=0;
};



enum CQuerySetAliasActionTypes { QuerySetAliasActionTypes_Undefined=-1,CQuerySetAliasActionTypes_Deactivate, };
typedef ArrayOf<CQuerySetAliasActionTypes> QuerySetAliasActionTypesArray;


interface IConstQuerySetAliasActionItem : extends IEspStruct
{
	virtual const char * getName()=0;
};

interface IEspQuerySetAliasActionItem : extends IConstQuerySetAliasActionItem
{
	virtual void setName(const char * val)=0;
	virtual void copy(IConstQuerySetAliasActionItem &from)=0;
};

interface IClientQuerySetAliasActionItem : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual const char * getName()=0;
};



interface IConstWUQuerySetAliasActionRequest : extends IEspRequest
{
	virtual CQuerySetAliasActionTypes getAction()=0;
	virtual const char* getActionAsString()=0;
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetAliasActionItem> & getAliases()=0;
};

interface IEspWUQuerySetAliasActionRequest : extends IConstWUQuerySetAliasActionRequest
{
	virtual void setAction(CQuerySetAliasActionTypes val)=0;
	virtual void setAction(const char* val)=0;
	virtual void setQuerySetName(const char * val)=0;
	virtual void setAliases(IArrayOf<IEspQuerySetAliasActionItem> &val)=0;
	virtual void setAliases(IArrayOf<IConstQuerySetAliasActionItem> &val)=0;
	virtual void copy(IConstWUQuerySetAliasActionRequest &from)=0;
};

interface IClientWUQuerySetAliasActionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setAction(CQuerySetAliasActionTypes val)=0;
	virtual void setAction(const char* val)=0;
	virtual void setQuerySetName(const char * val)=0;
	virtual void setAliases(IArrayOf<IEspQuerySetAliasActionItem> &val)=0;
	virtual void setAliases(IArrayOf<IConstQuerySetAliasActionItem> &val)=0;
};



interface IConstQuerySetAliasActionResult : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual bool getSuccess()=0;
	virtual int getCode()=0;
	virtual const char * getMessage()=0;
};

interface IEspQuerySetAliasActionResult : extends IConstQuerySetAliasActionResult
{
	virtual void setName(const char * val)=0;
	virtual void setSuccess(bool val)=0;
	virtual void setCode(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstQuerySetAliasActionResult &from)=0;
};

interface IClientQuerySetAliasActionResult : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setSuccess(bool val)=0;
	virtual void setCode(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual const char * getName()=0;
	virtual bool getSuccess()=0;
	virtual int getCode()=0;
	virtual const char * getMessage()=0;
};



interface IConstWUQuerySetAliasActionResponse : extends IEspResponse
{
	virtual CQuerySetAliasActionTypes getAction()=0;
	virtual const char* getActionAsString()=0;
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetAliasActionResult> & getResults()=0;
};

interface IEspWUQuerySetAliasActionResponse : extends IConstWUQuerySetAliasActionResponse
{
	virtual void setAction(CQuerySetAliasActionTypes val)=0;
	virtual void setAction(const char* val)=0;
	virtual void setQuerySetName(const char * val)=0;
	virtual void setResults(IArrayOf<IEspQuerySetAliasActionResult> &val)=0;
	virtual void setResults(IArrayOf<IConstQuerySetAliasActionResult> &val)=0;
	virtual void copy(IConstWUQuerySetAliasActionResponse &from)=0;
};

interface IClientWUQuerySetAliasActionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual CQuerySetAliasActionTypes getAction()=0;
	virtual const char* getActionAsString()=0;
	virtual const char * getQuerySetName()=0;
	virtual IArrayOf<IConstQuerySetAliasActionResult> & getResults()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUQuerySetCopyQueryRequest : extends IEspRequest
{
	virtual const char * getSource()=0;
	virtual const char * getTarget()=0;
	virtual const char * getCluster()=0;
	virtual const char * getDaliServer()=0;
	virtual bool getActivate_isNull()=0;
	virtual int getActivate()=0;
	virtual bool getOverwrite_isNull()=0;
	virtual bool getOverwrite()=0;
	virtual bool getDontCopyFiles_isNull()=0;
	virtual bool getDontCopyFiles()=0;
	virtual bool getWait_isNull()=0;
	virtual int getWait()=0;
	virtual bool getNoReload_isNull()=0;
	virtual bool getNoReload()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual unsigned int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual unsigned int getWarnTimeLimit()=0;
	virtual const char * getPriority()=0;
	virtual const char * getComment()=0;
	virtual const char * getSourceProcess()=0;
	virtual const char * getDestName()=0;
	virtual bool getAllowForeignFiles_isNull()=0;
	virtual bool getAllowForeignFiles()=0;
	virtual bool getUpdateSuperFiles_isNull()=0;
	virtual bool getUpdateSuperFiles()=0;
	virtual bool getUpdateCloneFrom_isNull()=0;
	virtual bool getUpdateCloneFrom()=0;
	virtual bool getAppendCluster_isNull()=0;
	virtual bool getAppendCluster()=0;
	virtual bool getIncludeFileErrors_isNull()=0;
	virtual bool getIncludeFileErrors()=0;
};

interface IEspWUQuerySetCopyQueryRequest : extends IConstWUQuerySetCopyQueryRequest
{
	virtual void setSource(const char * val)=0;
	virtual void setTarget(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setDaliServer(const char * val)=0;
	virtual void setActivate_null()=0;
	virtual void setActivate(int val)=0;
	virtual void setOverwrite_null()=0;
	virtual void setOverwrite(bool val)=0;
	virtual void setDontCopyFiles_null()=0;
	virtual void setDontCopyFiles(bool val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setDestName(const char * val)=0;
	virtual void setAllowForeignFiles_null()=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setUpdateSuperFiles_null()=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster_null()=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors_null()=0;
	virtual void setIncludeFileErrors(bool val)=0;
	virtual void copy(IConstWUQuerySetCopyQueryRequest &from)=0;
};

interface IClientWUQuerySetCopyQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setSource(const char * val)=0;
	virtual void setTarget(const char * val)=0;
	virtual void setCluster(const char * val)=0;
	virtual void setDaliServer(const char * val)=0;
	virtual void setActivate_null()=0;
	virtual void setActivate(int val)=0;
	virtual void setOverwrite_null()=0;
	virtual void setOverwrite(bool val)=0;
	virtual void setDontCopyFiles_null()=0;
	virtual void setDontCopyFiles(bool val)=0;
	virtual void setWait_null()=0;
	virtual void setWait(int val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(unsigned int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(unsigned int val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setDestName(const char * val)=0;
	virtual void setAllowForeignFiles_null()=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setUpdateSuperFiles_null()=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster_null()=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors_null()=0;
	virtual void setIncludeFileErrors(bool val)=0;
};



interface IConstWUQuerySetCopyQueryResponse : extends IEspResponse
{
	virtual const char * getQueryId()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;
};

interface IEspWUQuerySetCopyQueryResponse : extends IConstWUQuerySetCopyQueryResponse
{
	virtual void setQueryId(const char * val)=0;
	virtual void setFileErrors(IArrayOf<IEspLogicalFileError> &val)=0;
	virtual void setFileErrors(IArrayOf<IConstLogicalFileError> &val)=0;
	virtual void copy(IConstWUQuerySetCopyQueryResponse &from)=0;
};

interface IClientWUQuerySetCopyQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getQueryId()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUCopyQuerySetRequest : extends IEspRequest
{
	virtual const char * getSource()=0;
	virtual const char * getTarget()=0;
	virtual bool getActiveOnly_isNull()=0;
	virtual bool getActiveOnly()=0;
	virtual bool getCloneActiveState_isNull()=0;
	virtual bool getCloneActiveState()=0;
	virtual bool getAllowForeignFiles_isNull()=0;
	virtual bool getAllowForeignFiles()=0;
	virtual const char * getDfsServer()=0;
	virtual bool getCopyFiles_isNull()=0;
	virtual bool getCopyFiles()=0;
	virtual bool getOverwriteDfs_isNull()=0;
	virtual bool getOverwriteDfs()=0;
	virtual const char * getSourceProcess()=0;
	virtual bool getUpdateSuperFiles_isNull()=0;
	virtual bool getUpdateSuperFiles()=0;
	virtual bool getUpdateCloneFrom_isNull()=0;
	virtual bool getUpdateCloneFrom()=0;
	virtual bool getAppendCluster_isNull()=0;
	virtual bool getAppendCluster()=0;
	virtual bool getIncludeFileErrors_isNull()=0;
	virtual bool getIncludeFileErrors()=0;
};

interface IEspWUCopyQuerySetRequest : extends IConstWUCopyQuerySetRequest
{
	virtual void setSource(const char * val)=0;
	virtual void setTarget(const char * val)=0;
	virtual void setActiveOnly_null()=0;
	virtual void setActiveOnly(bool val)=0;
	virtual void setCloneActiveState_null()=0;
	virtual void setCloneActiveState(bool val)=0;
	virtual void setAllowForeignFiles_null()=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setDfsServer(const char * val)=0;
	virtual void setCopyFiles_null()=0;
	virtual void setCopyFiles(bool val)=0;
	virtual void setOverwriteDfs_null()=0;
	virtual void setOverwriteDfs(bool val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setUpdateSuperFiles_null()=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster_null()=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors_null()=0;
	virtual void setIncludeFileErrors(bool val)=0;
	virtual void copy(IConstWUCopyQuerySetRequest &from)=0;
};

interface IClientWUCopyQuerySetRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setSource(const char * val)=0;
	virtual void setTarget(const char * val)=0;
	virtual void setActiveOnly_null()=0;
	virtual void setActiveOnly(bool val)=0;
	virtual void setCloneActiveState_null()=0;
	virtual void setCloneActiveState(bool val)=0;
	virtual void setAllowForeignFiles_null()=0;
	virtual void setAllowForeignFiles(bool val)=0;
	virtual void setDfsServer(const char * val)=0;
	virtual void setCopyFiles_null()=0;
	virtual void setCopyFiles(bool val)=0;
	virtual void setOverwriteDfs_null()=0;
	virtual void setOverwriteDfs(bool val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setUpdateSuperFiles_null()=0;
	virtual void setUpdateSuperFiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setAppendCluster_null()=0;
	virtual void setAppendCluster(bool val)=0;
	virtual void setIncludeFileErrors_null()=0;
	virtual void setIncludeFileErrors(bool val)=0;
};



interface IConstWUCopyQuerySetResponse : extends IEspResponse
{
	virtual StringArray & getCopiedQueries()=0;
	virtual StringArray & getExistingQueries()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;
};

interface IEspWUCopyQuerySetResponse : extends IConstWUCopyQuerySetResponse
{
	virtual void setCopiedQueries(StringArray &val)=0;
	virtual void setExistingQueries(StringArray &val)=0;
	virtual void setFileErrors(IArrayOf<IEspLogicalFileError> &val)=0;
	virtual void setFileErrors(IArrayOf<IConstLogicalFileError> &val)=0;
	virtual void copy(IConstWUCopyQuerySetResponse &from)=0;
};

interface IClientWUCopyQuerySetResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual StringArray & getCopiedQueries()=0;
	virtual StringArray & getExistingQueries()=0;
	virtual IArrayOf<IConstLogicalFileError> & getFileErrors()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGetZAPInfoRequest : extends IEspRequest
{
	virtual const char * getWUID()=0;
};

interface IEspWUGetZAPInfoRequest : extends IConstWUGetZAPInfoRequest
{
	virtual void setWUID(const char * val)=0;
	virtual void copy(IConstWUGetZAPInfoRequest &from)=0;
};

interface IClientWUGetZAPInfoRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWUID(const char * val)=0;
};



interface IConstWUGetZAPInfoResponse : extends IEspResponse
{
	virtual const char * getWUID()=0;
	virtual const char * getESPIPAddress()=0;
	virtual const char * getThorIPAddress()=0;
	virtual const char * getBuildVersion()=0;
	virtual const char * getArchive()=0;
	virtual const char * getEmailTo()=0;
	virtual const char * getEmailFrom()=0;
};

interface IEspWUGetZAPInfoResponse : extends IConstWUGetZAPInfoResponse
{
	virtual void setWUID(const char * val)=0;
	virtual void setESPIPAddress(const char * val)=0;
	virtual void setThorIPAddress(const char * val)=0;
	virtual void setBuildVersion(const char * val)=0;
	virtual void setArchive(const char * val)=0;
	virtual void setEmailTo(const char * val)=0;
	virtual void setEmailFrom(const char * val)=0;
	virtual void copy(IConstWUGetZAPInfoResponse &from)=0;
};

interface IClientWUGetZAPInfoResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWUID()=0;
	virtual const char * getESPIPAddress()=0;
	virtual const char * getThorIPAddress()=0;
	virtual const char * getBuildVersion()=0;
	virtual const char * getArchive()=0;
	virtual const char * getEmailTo()=0;
	virtual const char * getEmailFrom()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUCreateZAPInfoRequest : extends IEspRequest
{
	virtual const char * getWuid()=0;
	virtual const char * getESPIPAddress()=0;
	virtual const char * getThorIPAddress()=0;
	virtual const char * getBuildVersion()=0;
	virtual const char * getProblemDescription()=0;
	virtual const char * getWhatChanged()=0;
	virtual const char * getWhereSlow()=0;
	virtual const char * getPassword()=0;
	virtual const char * getZAPFileName()=0;
	virtual const char * getIncludeThorSlaveLog()=0;
	virtual const char * getZAPPassword()=0;
	virtual bool getSendEmail_isNull()=0;
	virtual bool getSendEmail()=0;
	virtual bool getAttachZAPReportToEmail_isNull()=0;
	virtual bool getAttachZAPReportToEmail()=0;
	virtual const char * getEmailFrom()=0;
	virtual const char * getEmailSubject()=0;
	virtual const char * getEmailBody()=0;
};

interface IEspWUCreateZAPInfoRequest : extends IConstWUCreateZAPInfoRequest
{
	virtual void setWuid(const char * val)=0;
	virtual void setESPIPAddress(const char * val)=0;
	virtual void setThorIPAddress(const char * val)=0;
	virtual void setBuildVersion(const char * val)=0;
	virtual void setProblemDescription(const char * val)=0;
	virtual void setWhatChanged(const char * val)=0;
	virtual void setWhereSlow(const char * val)=0;
	virtual void setPassword(const char * val)=0;
	virtual void setZAPFileName(const char * val)=0;
	virtual void setIncludeThorSlaveLog(const char * val)=0;
	virtual void setZAPPassword(const char * val)=0;
	virtual void setSendEmail_null()=0;
	virtual void setSendEmail(bool val)=0;
	virtual void setAttachZAPReportToEmail_null()=0;
	virtual void setAttachZAPReportToEmail(bool val)=0;
	virtual void setEmailFrom(const char * val)=0;
	virtual void setEmailSubject(const char * val)=0;
	virtual void setEmailBody(const char * val)=0;
	virtual void copy(IConstWUCreateZAPInfoRequest &from)=0;
};

interface IClientWUCreateZAPInfoRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWuid(const char * val)=0;
	virtual void setESPIPAddress(const char * val)=0;
	virtual void setThorIPAddress(const char * val)=0;
	virtual void setBuildVersion(const char * val)=0;
	virtual void setProblemDescription(const char * val)=0;
	virtual void setWhatChanged(const char * val)=0;
	virtual void setWhereSlow(const char * val)=0;
	virtual void setPassword(const char * val)=0;
	virtual void setZAPFileName(const char * val)=0;
	virtual void setIncludeThorSlaveLog(const char * val)=0;
	virtual void setZAPPassword(const char * val)=0;
	virtual void setSendEmail_null()=0;
	virtual void setSendEmail(bool val)=0;
	virtual void setAttachZAPReportToEmail_null()=0;
	virtual void setAttachZAPReportToEmail(bool val)=0;
	virtual void setEmailFrom(const char * val)=0;
	virtual void setEmailSubject(const char * val)=0;
	virtual void setEmailBody(const char * val)=0;
};



interface IConstWUCreateZAPInfoResponse : extends IEspResponse
{
	virtual const char *getThefile_mimetype()=0;
	virtual const MemoryBuffer & getThefile()=0;
	virtual const char * getZAPFileName()=0;
};

interface IEspWUCreateZAPInfoResponse : extends IConstWUCreateZAPInfoResponse
{
	virtual void setThefile_mimetype(const char *  val)=0;
	virtual void setThefile(const MemoryBuffer & val)=0;
	virtual void setZAPFileName(const char * val)=0;
	virtual void copy(IConstWUCreateZAPInfoResponse &from)=0;
};

interface IClientWUCreateZAPInfoResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char *getThefile_mimetype()=0;
	virtual const MemoryBuffer & getThefile()=0;
	virtual const char * getZAPFileName()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUCheckFeaturesRequest : extends IEspRequest
{
};

interface IEspWUCheckFeaturesRequest : extends IConstWUCheckFeaturesRequest
{
	virtual void copy(IConstWUCheckFeaturesRequest &from)=0;
};

interface IClientWUCheckFeaturesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstDeploymentFeatures : extends IEspStruct
{
	virtual bool getUseCompression()=0;
};

interface IEspDeploymentFeatures : extends IConstDeploymentFeatures
{
	virtual void setUseCompression(bool val)=0;
	virtual void copy(IConstDeploymentFeatures &from)=0;
};

interface IClientDeploymentFeatures : extends IInterface
{
	virtual void setUseCompression(bool val)=0;
	virtual bool getUseCompression()=0;
};



interface IConstWUCheckFeaturesResponse : extends IEspResponse
{
	virtual int getBuildVersionMajor()=0;
	virtual int getBuildVersionMinor()=0;
	virtual int getBuildVersionPoint()=0;
	virtual unsigned int getMaxRequestEntityLength()=0;
	virtual IConstDeploymentFeatures & getDeployment()=0;
};

interface IEspWUCheckFeaturesResponse : extends IConstWUCheckFeaturesResponse
{
	virtual void setBuildVersionMajor(int val)=0;
	virtual void setBuildVersionMinor(int val)=0;
	virtual void setBuildVersionPoint(int val)=0;
	virtual void setMaxRequestEntityLength(unsigned int val)=0;
	virtual IEspDeploymentFeatures & updateDeployment()=0;
	virtual void setDeployment(IConstDeploymentFeatures &ifrom)=0;
	virtual void copy(IConstWUCheckFeaturesResponse &from)=0;
};

interface IClientWUCheckFeaturesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getBuildVersionMajor()=0;
	virtual int getBuildVersionMinor()=0;
	virtual int getBuildVersionPoint()=0;
	virtual unsigned int getMaxRequestEntityLength()=0;
	virtual IConstDeploymentFeatures & getDeployment()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUStatisticItem : extends IEspStruct
{
	virtual const char * getCreator()=0;
	virtual const char * getCreatorType()=0;
	virtual const char * getScope()=0;
	virtual const char * getScopeType()=0;
	virtual const char * getDescription()=0;
	virtual const char * getTimeStamp()=0;
	virtual const char * getMeasure()=0;
	virtual const char * getKind()=0;
	virtual const char * getValue()=0;
	virtual bool getRawValue_isNull()=0;
	virtual __int64 getRawValue()=0;
	virtual bool getCount_isNull()=0;
	virtual __int64 getCount()=0;
	virtual bool getMax_isNull()=0;
	virtual __int64 getMax()=0;
	virtual const char * getWuid()=0;
};

interface IEspWUStatisticItem : extends IConstWUStatisticItem
{
	virtual void setCreator(const char * val)=0;
	virtual void setCreatorType(const char * val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setScopeType(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setTimeStamp(const char * val)=0;
	virtual void setMeasure(const char * val)=0;
	virtual void setKind(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual void setRawValue_null()=0;
	virtual void setRawValue(__int64 val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(__int64 val)=0;
	virtual void setMax_null()=0;
	virtual void setMax(__int64 val)=0;
	virtual void setWuid(const char * val)=0;
	virtual void copy(IConstWUStatisticItem &from)=0;
};

interface IClientWUStatisticItem : extends IInterface
{
	virtual void setCreator(const char * val)=0;
	virtual void setCreatorType(const char * val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setScopeType(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setTimeStamp(const char * val)=0;
	virtual void setMeasure(const char * val)=0;
	virtual void setKind(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual void setRawValue_null()=0;
	virtual void setRawValue(__int64 val)=0;
	virtual void setCount_null()=0;
	virtual void setCount(__int64 val)=0;
	virtual void setMax_null()=0;
	virtual void setMax(__int64 val)=0;
	virtual void setWuid(const char * val)=0;
	virtual const char * getCreator()=0;
	virtual const char * getCreatorType()=0;
	virtual const char * getScope()=0;
	virtual const char * getScopeType()=0;
	virtual const char * getDescription()=0;
	virtual const char * getTimeStamp()=0;
	virtual const char * getMeasure()=0;
	virtual const char * getKind()=0;
	virtual const char * getValue()=0;
	virtual bool getRawValue_isNull()=0;
	virtual __int64 getRawValue()=0;
	virtual bool getCount_isNull()=0;
	virtual __int64 getCount()=0;
	virtual bool getMax_isNull()=0;
	virtual __int64 getMax()=0;
	virtual const char * getWuid()=0;
};



interface IConstWUGetStatsRequest : extends IEspRequest
{
	virtual const char * getWUID()=0;
	virtual const char * getCreatorType()=0;
	virtual const char * getCreator()=0;
	virtual const char * getScopeType()=0;
	virtual const char * getScope()=0;
	virtual const char * getKind()=0;
	virtual const char * getMeasure()=0;
	virtual bool getMinScopeDepth_isNull()=0;
	virtual unsigned int getMinScopeDepth()=0;
	virtual bool getMaxScopeDepth_isNull()=0;
	virtual unsigned int getMaxScopeDepth()=0;
	virtual bool getIncludeGraphs_isNull()=0;
	virtual bool getIncludeGraphs()=0;
	virtual bool getCreateDescriptions_isNull()=0;
	virtual bool getCreateDescriptions()=0;
	virtual bool getMinValue_isNull()=0;
	virtual __int64 getMinValue()=0;
	virtual bool getMaxValue_isNull()=0;
	virtual __int64 getMaxValue()=0;
	virtual const char * getFilter()=0;
};

interface IEspWUGetStatsRequest : extends IConstWUGetStatsRequest
{
	virtual void setWUID(const char * val)=0;
	virtual void setCreatorType(const char * val)=0;
	virtual void setCreator(const char * val)=0;
	virtual void setScopeType(const char * val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setKind(const char * val)=0;
	virtual void setMeasure(const char * val)=0;
	virtual void setMinScopeDepth_null()=0;
	virtual void setMinScopeDepth(unsigned int val)=0;
	virtual void setMaxScopeDepth_null()=0;
	virtual void setMaxScopeDepth(unsigned int val)=0;
	virtual void setIncludeGraphs_null()=0;
	virtual void setIncludeGraphs(bool val)=0;
	virtual void setCreateDescriptions_null()=0;
	virtual void setCreateDescriptions(bool val)=0;
	virtual void setMinValue_null()=0;
	virtual void setMinValue(__int64 val)=0;
	virtual void setMaxValue_null()=0;
	virtual void setMaxValue(__int64 val)=0;
	virtual void setFilter(const char * val)=0;
	virtual void copy(IConstWUGetStatsRequest &from)=0;
};

interface IClientWUGetStatsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWUID(const char * val)=0;
	virtual void setCreatorType(const char * val)=0;
	virtual void setCreator(const char * val)=0;
	virtual void setScopeType(const char * val)=0;
	virtual void setScope(const char * val)=0;
	virtual void setKind(const char * val)=0;
	virtual void setMeasure(const char * val)=0;
	virtual void setMinScopeDepth_null()=0;
	virtual void setMinScopeDepth(unsigned int val)=0;
	virtual void setMaxScopeDepth_null()=0;
	virtual void setMaxScopeDepth(unsigned int val)=0;
	virtual void setIncludeGraphs_null()=0;
	virtual void setIncludeGraphs(bool val)=0;
	virtual void setCreateDescriptions_null()=0;
	virtual void setCreateDescriptions(bool val)=0;
	virtual void setMinValue_null()=0;
	virtual void setMinValue(__int64 val)=0;
	virtual void setMaxValue_null()=0;
	virtual void setMaxValue(__int64 val)=0;
	virtual void setFilter(const char * val)=0;
};



interface IConstWUGetStatsResponse : extends IEspResponse
{
	virtual const char * getWUID()=0;
	virtual IArrayOf<IConstWUStatisticItem> & getStatistics()=0;
};

interface IEspWUGetStatsResponse : extends IConstWUGetStatsResponse
{
	virtual void setWUID(const char * val)=0;
	virtual void setStatistics(IArrayOf<IEspWUStatisticItem> &val)=0;
	virtual void setStatistics(IArrayOf<IConstWUStatisticItem> &val)=0;
	virtual void copy(IConstWUGetStatsResponse &from)=0;
};

interface IClientWUGetStatsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getWUID()=0;
	virtual IArrayOf<IConstWUStatisticItem> & getStatistics()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUArchiveFile : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getKey()=0;
	virtual const char * getSourcePath()=0;
	virtual const char * getPath()=0;
};

interface IEspWUArchiveFile : extends IConstWUArchiveFile
{
	virtual void setName(const char * val)=0;
	virtual void setKey(const char * val)=0;
	virtual void setSourcePath(const char * val)=0;
	virtual void setPath(const char * val)=0;
	virtual void copy(IConstWUArchiveFile &from)=0;
};

interface IClientWUArchiveFile : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setKey(const char * val)=0;
	virtual void setSourcePath(const char * val)=0;
	virtual void setPath(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getKey()=0;
	virtual const char * getSourcePath()=0;
	virtual const char * getPath()=0;
};



interface IConstWUArchiveModule : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getFullName()=0;
	virtual bool getFlags_isNull()=0;
	virtual unsigned int getFlags()=0;
	virtual const char * getKey()=0;
	virtual const char * getPlugin()=0;
	virtual const char * getSourcePath()=0;
	virtual const char * getVersion()=0;
	virtual const char * getPath()=0;
	virtual IArrayOf<IConstWUArchiveModule> & getArchiveModules()=0;
	virtual IArrayOf<IConstWUArchiveFile> & getFiles()=0;
};

interface IEspWUArchiveModule : extends IConstWUArchiveModule
{
	virtual void setName(const char * val)=0;
	virtual void setFullName(const char * val)=0;
	virtual void setFlags_null()=0;
	virtual void setFlags(unsigned int val)=0;
	virtual void setKey(const char * val)=0;
	virtual void setPlugin(const char * val)=0;
	virtual void setSourcePath(const char * val)=0;
	virtual void setVersion(const char * val)=0;
	virtual void setPath(const char * val)=0;
	virtual void setArchiveModules(IArrayOf<IEspWUArchiveModule> &val)=0;
	virtual void setArchiveModules(IArrayOf<IConstWUArchiveModule> &val)=0;
	virtual void setFiles(IArrayOf<IEspWUArchiveFile> &val)=0;
	virtual void setFiles(IArrayOf<IConstWUArchiveFile> &val)=0;
	virtual void copy(IConstWUArchiveModule &from)=0;
};

interface IClientWUArchiveModule : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setFullName(const char * val)=0;
	virtual void setFlags_null()=0;
	virtual void setFlags(unsigned int val)=0;
	virtual void setKey(const char * val)=0;
	virtual void setPlugin(const char * val)=0;
	virtual void setSourcePath(const char * val)=0;
	virtual void setVersion(const char * val)=0;
	virtual void setPath(const char * val)=0;
	virtual void setArchiveModules(IArrayOf<IEspWUArchiveModule> &val)=0;
	virtual void setArchiveModules(IArrayOf<IConstWUArchiveModule> &val)=0;
	virtual void setFiles(IArrayOf<IEspWUArchiveFile> &val)=0;
	virtual void setFiles(IArrayOf<IConstWUArchiveFile> &val)=0;
	virtual const char * getName()=0;
	virtual const char * getFullName()=0;
	virtual bool getFlags_isNull()=0;
	virtual unsigned int getFlags()=0;
	virtual const char * getKey()=0;
	virtual const char * getPlugin()=0;
	virtual const char * getSourcePath()=0;
	virtual const char * getVersion()=0;
	virtual const char * getPath()=0;
	virtual IArrayOf<IConstWUArchiveModule> & getArchiveModules()=0;
	virtual IArrayOf<IConstWUArchiveFile> & getFiles()=0;
};



interface IConstWUListArchiveFilesRequest : extends IEspRequest
{
	virtual const char * getWUID()=0;
};

interface IEspWUListArchiveFilesRequest : extends IConstWUListArchiveFilesRequest
{
	virtual void setWUID(const char * val)=0;
	virtual void copy(IConstWUListArchiveFilesRequest &from)=0;
};

interface IClientWUListArchiveFilesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWUID(const char * val)=0;
};



interface IConstWUListArchiveFilesResponse : extends IEspResponse
{
	virtual IArrayOf<IConstWUArchiveModule> & getArchiveModules()=0;
	virtual IArrayOf<IConstWUArchiveFile> & getFiles()=0;
	virtual const char * getMessage()=0;
};

interface IEspWUListArchiveFilesResponse : extends IConstWUListArchiveFilesResponse
{
	virtual void setArchiveModules(IArrayOf<IEspWUArchiveModule> &val)=0;
	virtual void setArchiveModules(IArrayOf<IConstWUArchiveModule> &val)=0;
	virtual void setFiles(IArrayOf<IEspWUArchiveFile> &val)=0;
	virtual void setFiles(IArrayOf<IConstWUArchiveFile> &val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstWUListArchiveFilesResponse &from)=0;
};

interface IClientWUListArchiveFilesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstWUArchiveModule> & getArchiveModules()=0;
	virtual IArrayOf<IConstWUArchiveFile> & getFiles()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGetArchiveFileRequest : extends IEspRequest
{
	virtual const char * getWUID()=0;
	virtual const char * getModuleName()=0;
	virtual const char * getFileName()=0;
	virtual const char * getPath()=0;
};

interface IEspWUGetArchiveFileRequest : extends IConstWUGetArchiveFileRequest
{
	virtual void setWUID(const char * val)=0;
	virtual void setModuleName(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setPath(const char * val)=0;
	virtual void copy(IConstWUGetArchiveFileRequest &from)=0;
};

interface IClientWUGetArchiveFileRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWUID(const char * val)=0;
	virtual void setModuleName(const char * val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setPath(const char * val)=0;
};



interface IConstWUGetArchiveFileResponse : extends IEspResponse
{
	virtual const char * getFile()=0;
	virtual const char * getMessage()=0;
};

interface IEspWUGetArchiveFileResponse : extends IConstWUGetArchiveFileResponse
{
	virtual void setFile(const char * val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstWUGetArchiveFileResponse &from)=0;
};

interface IClientWUGetArchiveFileResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getFile()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUGetNumFileToCopyRequest : extends IEspRequest
{
	virtual const char * getClusterName()=0;
	virtual bool getPageSize_isNull()=0;
	virtual __int64 getPageSize()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual const char * getSortby()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspWUGetNumFileToCopyRequest : extends IConstWUGetNumFileToCopyRequest
{
	virtual void setClusterName(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(__int64 val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstWUGetNumFileToCopyRequest &from)=0;
};

interface IClientWUGetNumFileToCopyRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setClusterName(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(__int64 val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortby(const char * val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
};



interface IConstWUGetNumFileToCopyResponse : extends IEspResponse
{
	virtual IArrayOf<IConstClusterEndpoint> & getEndpoints()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
	virtual bool getTotal_isNull()=0;
	virtual __int64 getTotal()=0;
};

interface IEspWUGetNumFileToCopyResponse : extends IConstWUGetNumFileToCopyResponse
{
	virtual void setEndpoints(IArrayOf<IEspClusterEndpoint> &val)=0;
	virtual void setEndpoints(IArrayOf<IConstClusterEndpoint> &val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void setTotal_null()=0;
	virtual void setTotal(__int64 val)=0;
	virtual void copy(IConstWUGetNumFileToCopyResponse &from)=0;
};

interface IClientWUGetNumFileToCopyResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstClusterEndpoint> & getEndpoints()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
	virtual bool getTotal_isNull()=0;
	virtual __int64 getTotal()=0;

	virtual const IMultiException& getExceptions()=0;
};



// ----------------------------------------------------------------------------------
// WUDetails service
//
// Request related structures
interface IConstWUPropertyFilter : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getExactValue()=0;
	virtual const char * getMinValue()=0;
	virtual const char * getMaxValue()=0;
};

interface IEspWUPropertyFilter : extends IConstWUPropertyFilter
{
	virtual void setName(const char * val)=0;
	virtual void setExactValue(const char * val)=0;
	virtual void setMinValue(const char * val)=0;
	virtual void setMaxValue(const char * val)=0;
	virtual void copy(IConstWUPropertyFilter &from)=0;
};

interface IClientWUPropertyFilter : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setExactValue(const char * val)=0;
	virtual void setMinValue(const char * val)=0;
	virtual void setMaxValue(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getExactValue()=0;
	virtual const char * getMinValue()=0;
	virtual const char * getMaxValue()=0;
};



// Filters that indicates which nodes are explicitly matched
// Scopes can be used at the same time as Ids.
// ScopeTypes cannot be used at the same time as Scopes or Ids.
// PropertyFilters (attributes or statistics) is applied to all matches
interface IConstWUScopeFilter : extends IEspStruct
{
	virtual int getMaxDepth()=0;
	virtual StringArray & getScopes()=0;
	virtual StringArray & getIds()=0;
	virtual StringArray & getScopeTypes()=0;
	virtual IArrayOf<IConstWUPropertyFilter> & getPropertyFilters()=0;
};

interface IEspWUScopeFilter : extends IConstWUScopeFilter
{
	virtual void setMaxDepth(int val)=0;
	virtual void setScopes(StringArray &val)=0;
	virtual void setIds(StringArray &val)=0;
	virtual void setScopeTypes(StringArray &val)=0;
	virtual void setPropertyFilters(IArrayOf<IEspWUPropertyFilter> &val)=0;
	virtual void setPropertyFilters(IArrayOf<IConstWUPropertyFilter> &val)=0;
	virtual void copy(IConstWUScopeFilter &from)=0;
};

interface IClientWUScopeFilter : extends IInterface
{
	virtual void setMaxDepth(int val)=0;
	virtual void setScopes(StringArray &val)=0;
	virtual void setIds(StringArray &val)=0;
	virtual void setScopeTypes(StringArray &val)=0;
	virtual void setPropertyFilters(IArrayOf<IEspWUPropertyFilter> &val)=0;
	virtual void setPropertyFilters(IArrayOf<IConstWUPropertyFilter> &val)=0;
	virtual int getMaxDepth()=0;
	virtual StringArray & getScopes()=0;
	virtual StringArray & getIds()=0;
	virtual StringArray & getScopeTypes()=0;
	virtual IArrayOf<IConstWUPropertyFilter> & getPropertyFilters()=0;
};



// This provides the filter which indicates which nodes are implicitly matched
// Once a match is found, all nested scopes to a depth of depth are implicitly matched, provided they match the nested filter
interface IConstWUNestedFilter : extends IEspStruct
{
	virtual unsigned int getDepth()=0;
	virtual StringArray & getScopeTypes()=0;
};

interface IEspWUNestedFilter : extends IConstWUNestedFilter
{
	virtual void setDepth(unsigned int val)=0;
	virtual void setScopeTypes(StringArray &val)=0;
	virtual void copy(IConstWUNestedFilter &from)=0;
};

interface IClientWUNestedFilter : extends IInterface
{
	virtual void setDepth(unsigned int val)=0;
	virtual void setScopeTypes(StringArray &val)=0;
	virtual unsigned int getDepth()=0;
	virtual StringArray & getScopeTypes()=0;
};



// Additional properties that are returned for a scopeType
interface IConstWUExtraProperties : extends IEspStruct
{
	virtual const char * getScopeType()=0;
	virtual StringArray & getProperties()=0;
};

interface IEspWUExtraProperties : extends IConstWUExtraProperties
{
	virtual void setScopeType(const char * val)=0;
	virtual void setProperties(StringArray &val)=0;
	virtual void copy(IConstWUExtraProperties &from)=0;
};

interface IClientWUExtraProperties : extends IInterface
{
	virtual void setScopeType(const char * val)=0;
	virtual void setProperties(StringArray &val)=0;
	virtual const char * getScopeType()=0;
	virtual StringArray & getProperties()=0;
};



// If measure and attributes are omitted then all matches are returned
// Measure and Attributes/ScopeAttributes are mutually exclusive.
// Measure set to blank or Attributes set to empty will prevent any attributes being returned.
interface IConstWUPropertiesToReturn : extends IEspStruct
{
	virtual bool getAllStatistics()=0;
	virtual bool getAllAttributes()=0;
	virtual bool getAllHints()=0;
	virtual bool getAllScopes()=0;
	virtual bool getAllProperties()=0;
	virtual const char * getMinVersion()=0;
	virtual const char * getMeasure()=0;
	virtual StringArray & getProperties()=0;
	virtual IArrayOf<IConstWUExtraProperties> & getExtraProperties()=0;
};

interface IEspWUPropertiesToReturn : extends IConstWUPropertiesToReturn
{
	virtual void setAllStatistics(bool val)=0;
	virtual void setAllAttributes(bool val)=0;
	virtual void setAllHints(bool val)=0;
	virtual void setAllScopes(bool val)=0;
	virtual void setAllProperties(bool val)=0;
	virtual void setMinVersion(const char * val)=0;
	virtual void setMeasure(const char * val)=0;
	virtual void setProperties(StringArray &val)=0;
	virtual void setExtraProperties(IArrayOf<IEspWUExtraProperties> &val)=0;
	virtual void setExtraProperties(IArrayOf<IConstWUExtraProperties> &val)=0;
	virtual void copy(IConstWUPropertiesToReturn &from)=0;
};

interface IClientWUPropertiesToReturn : extends IInterface
{
	virtual void setAllStatistics(bool val)=0;
	virtual void setAllAttributes(bool val)=0;
	virtual void setAllHints(bool val)=0;
	virtual void setAllScopes(bool val)=0;
	virtual void setAllProperties(bool val)=0;
	virtual void setMinVersion(const char * val)=0;
	virtual void setMeasure(const char * val)=0;
	virtual void setProperties(StringArray &val)=0;
	virtual void setExtraProperties(IArrayOf<IEspWUExtraProperties> &val)=0;
	virtual void setExtraProperties(IArrayOf<IConstWUExtraProperties> &val)=0;
	virtual bool getAllStatistics()=0;
	virtual bool getAllAttributes()=0;
	virtual bool getAllHints()=0;
	virtual bool getAllScopes()=0;
	virtual bool getAllProperties()=0;
	virtual const char * getMinVersion()=0;
	virtual const char * getMeasure()=0;
	virtual StringArray & getProperties()=0;
	virtual IArrayOf<IConstWUExtraProperties> & getExtraProperties()=0;
};



interface IConstWUScopeOptions : extends IEspStruct
{
	virtual bool getIncludeMatchedScopesInResults()=0;
	virtual bool getIncludeScope()=0;
	virtual bool getIncludeId()=0;
	virtual bool getIncludeScopeType()=0;
};

interface IEspWUScopeOptions : extends IConstWUScopeOptions
{
	virtual void setIncludeMatchedScopesInResults(bool val)=0;
	virtual void setIncludeScope(bool val)=0;
	virtual void setIncludeId(bool val)=0;
	virtual void setIncludeScopeType(bool val)=0;
	virtual void copy(IConstWUScopeOptions &from)=0;
};

interface IClientWUScopeOptions : extends IInterface
{
	virtual void setIncludeMatchedScopesInResults(bool val)=0;
	virtual void setIncludeScope(bool val)=0;
	virtual void setIncludeId(bool val)=0;
	virtual void setIncludeScopeType(bool val)=0;
	virtual bool getIncludeMatchedScopesInResults()=0;
	virtual bool getIncludeScope()=0;
	virtual bool getIncludeId()=0;
	virtual bool getIncludeScopeType()=0;
};



// Controls which information is returned for the statistics
interface IConstWUPropertyOptions : extends IEspStruct
{
	virtual bool getIncludeName()=0;
	virtual bool getIncludeRawValue()=0;
	virtual bool getIncludeFormatted()=0;
	virtual bool getIncludeMeasure()=0;
	virtual bool getIncludeCreator()=0;
	virtual bool getIncludeCreatorType()=0;
};

interface IEspWUPropertyOptions : extends IConstWUPropertyOptions
{
	virtual void setIncludeName(bool val)=0;
	virtual void setIncludeRawValue(bool val)=0;
	virtual void setIncludeFormatted(bool val)=0;
	virtual void setIncludeMeasure(bool val)=0;
	virtual void setIncludeCreator(bool val)=0;
	virtual void setIncludeCreatorType(bool val)=0;
	virtual void copy(IConstWUPropertyOptions &from)=0;
};

interface IClientWUPropertyOptions : extends IInterface
{
	virtual void setIncludeName(bool val)=0;
	virtual void setIncludeRawValue(bool val)=0;
	virtual void setIncludeFormatted(bool val)=0;
	virtual void setIncludeMeasure(bool val)=0;
	virtual void setIncludeCreator(bool val)=0;
	virtual void setIncludeCreatorType(bool val)=0;
	virtual bool getIncludeName()=0;
	virtual bool getIncludeRawValue()=0;
	virtual bool getIncludeFormatted()=0;
	virtual bool getIncludeMeasure()=0;
	virtual bool getIncludeCreator()=0;
	virtual bool getIncludeCreatorType()=0;
};



interface IConstWUDetailsRequest : extends IEspRequest
{
	virtual const char * getWUID()=0;
	virtual IConstWUScopeFilter & getScopeFilter()=0;
	virtual IConstWUNestedFilter & getNestedFilter()=0;
	virtual IConstWUPropertiesToReturn & getPropertiesToReturn()=0;
	virtual const char * getFilter()=0;
	virtual IConstWUScopeOptions & getScopeOptions()=0;
	virtual IConstWUPropertyOptions & getPropertyOptions()=0;
};

interface IEspWUDetailsRequest : extends IConstWUDetailsRequest
{
	virtual void setWUID(const char * val)=0;
	virtual IEspWUScopeFilter & updateScopeFilter()=0;
	virtual void setScopeFilter(IConstWUScopeFilter &ifrom)=0;
	virtual IEspWUNestedFilter & updateNestedFilter()=0;
	virtual void setNestedFilter(IConstWUNestedFilter &ifrom)=0;
	virtual IEspWUPropertiesToReturn & updatePropertiesToReturn()=0;
	virtual void setPropertiesToReturn(IConstWUPropertiesToReturn &ifrom)=0;
	virtual void setFilter(const char * val)=0;
	virtual IEspWUScopeOptions & updateScopeOptions()=0;
	virtual void setScopeOptions(IConstWUScopeOptions &ifrom)=0;
	virtual IEspWUPropertyOptions & updatePropertyOptions()=0;
	virtual void setPropertyOptions(IConstWUPropertyOptions &ifrom)=0;
	virtual void copy(IConstWUDetailsRequest &from)=0;
};

interface IClientWUDetailsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setWUID(const char * val)=0;
	virtual IEspWUScopeFilter & updateScopeFilter()=0;
	virtual void setScopeFilter(IConstWUScopeFilter &ifrom)=0;
	virtual IEspWUNestedFilter & updateNestedFilter()=0;
	virtual void setNestedFilter(IConstWUNestedFilter &ifrom)=0;
	virtual IEspWUPropertiesToReturn & updatePropertiesToReturn()=0;
	virtual void setPropertiesToReturn(IConstWUPropertiesToReturn &ifrom)=0;
	virtual void setFilter(const char * val)=0;
	virtual IEspWUScopeOptions & updateScopeOptions()=0;
	virtual void setScopeOptions(IConstWUScopeOptions &ifrom)=0;
	virtual IEspWUPropertyOptions & updatePropertyOptions()=0;
	virtual void setPropertyOptions(IConstWUPropertyOptions &ifrom)=0;
};



// ----------------------------------------------------------------------------------
// Response related structures
interface IConstWUResponseProperty : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getRawValue()=0;
	virtual const char * getFormatted()=0;
	virtual const char * getMeasure()=0;
	virtual const char * getCreator()=0;
	virtual const char * getCreatorType()=0;
};

interface IEspWUResponseProperty : extends IConstWUResponseProperty
{
	virtual void setName(const char * val)=0;
	virtual void setRawValue(const char * val)=0;
	virtual void setFormatted(const char * val)=0;
	virtual void setMeasure(const char * val)=0;
	virtual void setCreator(const char * val)=0;
	virtual void setCreatorType(const char * val)=0;
	virtual void copy(IConstWUResponseProperty &from)=0;
};

interface IClientWUResponseProperty : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setRawValue(const char * val)=0;
	virtual void setFormatted(const char * val)=0;
	virtual void setMeasure(const char * val)=0;
	virtual void setCreator(const char * val)=0;
	virtual void setCreatorType(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getRawValue()=0;
	virtual const char * getFormatted()=0;
	virtual const char * getMeasure()=0;
	virtual const char * getCreator()=0;
	virtual const char * getCreatorType()=0;
};



interface IConstWUResponseScope : extends IEspStruct
{
	virtual const char * getScopeName()=0;
	virtual const char * getId()=0;
	virtual const char * getScopeType()=0;
	virtual IArrayOf<IConstWUResponseProperty> & getProperties()=0;
};

interface IEspWUResponseScope : extends IConstWUResponseScope
{
	virtual void setScopeName(const char * val)=0;
	virtual void setId(const char * val)=0;
	virtual void setScopeType(const char * val)=0;
	virtual void setProperties(IArrayOf<IEspWUResponseProperty> &val)=0;
	virtual void setProperties(IArrayOf<IConstWUResponseProperty> &val)=0;
	virtual void copy(IConstWUResponseScope &from)=0;
};

interface IClientWUResponseScope : extends IInterface
{
	virtual void setScopeName(const char * val)=0;
	virtual void setId(const char * val)=0;
	virtual void setScopeType(const char * val)=0;
	virtual void setProperties(IArrayOf<IEspWUResponseProperty> &val)=0;
	virtual void setProperties(IArrayOf<IConstWUResponseProperty> &val)=0;
	virtual const char * getScopeName()=0;
	virtual const char * getId()=0;
	virtual const char * getScopeType()=0;
	virtual IArrayOf<IConstWUResponseProperty> & getProperties()=0;
};




interface IConstWUDetailsResponse : extends IEspResponse
{
	virtual const char * getMaxVersion()=0;
	virtual const char * getWUID()=0;
	virtual IArrayOf<IConstWUResponseScope> & getScopes()=0;
};

interface IEspWUDetailsResponse : extends IConstWUDetailsResponse
{
	virtual void setMaxVersion(const char * val)=0;
	virtual void setWUID(const char * val)=0;
	virtual void setScopes(IArrayOf<IEspWUResponseScope> &val)=0;
	virtual void setScopes(IArrayOf<IConstWUResponseScope> &val)=0;
	virtual void copy(IConstWUDetailsResponse &from)=0;
};

interface IClientWUDetailsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getMaxVersion()=0;
	virtual const char * getWUID()=0;
	virtual IArrayOf<IConstWUResponseScope> & getScopes()=0;

	virtual const IMultiException& getExceptions()=0;
};



// ----------------------------------------------------------------------------------
enum CWUDetailsAttrValueType { WUDetailsAttrValueType_Undefined=-1,CWUDetailsAttrValueType_Single, CWUDetailsAttrValueType_List, CWUDetailsAttrValueType_Multi, };
typedef ArrayOf<CWUDetailsAttrValueType> WUDetailsAttrValueTypeArray;


interface IConstWUDetailsMetaProperty : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual CWUDetailsAttrValueType getValueType()=0;
	virtual const char* getValueTypeAsString()=0;
};

interface IEspWUDetailsMetaProperty : extends IConstWUDetailsMetaProperty
{
	virtual void setName(const char * val)=0;
	virtual void setValueType(CWUDetailsAttrValueType val)=0;
	virtual void setValueType(const char* val)=0;
	virtual void copy(IConstWUDetailsMetaProperty &from)=0;
};

interface IClientWUDetailsMetaProperty : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setValueType(CWUDetailsAttrValueType val)=0;
	virtual void setValueType(const char* val)=0;
	virtual const char * getName()=0;
	virtual CWUDetailsAttrValueType getValueType()=0;
	virtual const char* getValueTypeAsString()=0;
};



interface IConstWUDetailsActivityInfo : extends IEspStruct
{
	virtual unsigned int getKind()=0;
	virtual const char * getName()=0;
	virtual bool getIsSink()=0;
	virtual bool getIsSource()=0;
};

interface IEspWUDetailsActivityInfo : extends IConstWUDetailsActivityInfo
{
	virtual void setKind(unsigned int val)=0;
	virtual void setName(const char * val)=0;
	virtual void setIsSink(bool val)=0;
	virtual void setIsSource(bool val)=0;
	virtual void copy(IConstWUDetailsActivityInfo &from)=0;
};

interface IClientWUDetailsActivityInfo : extends IInterface
{
	virtual void setKind(unsigned int val)=0;
	virtual void setName(const char * val)=0;
	virtual void setIsSink(bool val)=0;
	virtual void setIsSource(bool val)=0;
	virtual unsigned int getKind()=0;
	virtual const char * getName()=0;
	virtual bool getIsSink()=0;
	virtual bool getIsSource()=0;
};



interface IConstWUDetailsMetaRequest : extends IEspRequest
{
};

interface IEspWUDetailsMetaRequest : extends IConstWUDetailsMetaRequest
{
	virtual void copy(IConstWUDetailsMetaRequest &from)=0;
};

interface IClientWUDetailsMetaRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstWUDetailsMetaResponse : extends IEspResponse
{
	virtual IArrayOf<IConstWUDetailsMetaProperty> & getProperties()=0;
	virtual StringArray & getScopeTypes()=0;
	virtual StringArray & getMeasures()=0;
	virtual IArrayOf<IConstWUDetailsActivityInfo> & getActivities()=0;
};

interface IEspWUDetailsMetaResponse : extends IConstWUDetailsMetaResponse
{
	virtual void setProperties(IArrayOf<IEspWUDetailsMetaProperty> &val)=0;
	virtual void setProperties(IArrayOf<IConstWUDetailsMetaProperty> &val)=0;
	virtual void setScopeTypes(StringArray &val)=0;
	virtual void setMeasures(StringArray &val)=0;
	virtual void setActivities(IArrayOf<IEspWUDetailsActivityInfo> &val)=0;
	virtual void setActivities(IArrayOf<IConstWUDetailsActivityInfo> &val)=0;
	virtual void copy(IConstWUDetailsMetaResponse &from)=0;
};

interface IClientWUDetailsMetaResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstWUDetailsMetaProperty> & getProperties()=0;
	virtual StringArray & getScopeTypes()=0;
	virtual StringArray & getMeasures()=0;
	virtual IArrayOf<IConstWUDetailsActivityInfo> & getActivities()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWUEclDefinitionActionResult : extends IEspStruct
{
	virtual const char * getEclDefinition()=0;
	virtual const char * getAction()=0;
	virtual const char * getWUID()=0;
	virtual const char * getQueryID()=0;
	virtual const char * getResult()=0;
};

interface IEspWUEclDefinitionActionResult : extends IConstWUEclDefinitionActionResult
{
	virtual void setEclDefinition(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setWUID(const char * val)=0;
	virtual void setQueryID(const char * val)=0;
	virtual void setResult(const char * val)=0;
	virtual void copy(IConstWUEclDefinitionActionResult &from)=0;
};

interface IClientWUEclDefinitionActionResult : extends IInterface
{
	virtual void setEclDefinition(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setWUID(const char * val)=0;
	virtual void setQueryID(const char * val)=0;
	virtual void setResult(const char * val)=0;
	virtual const char * getEclDefinition()=0;
	virtual const char * getAction()=0;
	virtual const char * getWUID()=0;
	virtual const char * getQueryID()=0;
	virtual const char * getResult()=0;
};



interface IConstWUEclDefinitionActionRequest : extends IEspRequest
{
	virtual StringArray & getEclDefinitions()=0;
	virtual CEclDefinitionActions getActionType()=0;
	virtual const char* getActionTypeAsString()=0;
	virtual const char * getTarget()=0;
	virtual const char * getRemoteDali()=0;
	virtual const char * getSourceProcess()=0;
	virtual const char * getPriority()=0;
	virtual const char * getComment()=0;
	virtual const char * getMemoryLimit()=0;
	virtual bool getDeletePrevious_isNull()=0;
	virtual bool getDeletePrevious()=0;
	virtual bool getSuspendPrevious_isNull()=0;
	virtual bool getSuspendPrevious()=0;
	virtual bool getNoActivate_isNull()=0;
	virtual bool getNoActivate()=0;
	virtual bool getNoReload_isNull()=0;
	virtual bool getNoReload()=0;
	virtual bool getDontCopyFiles_isNull()=0;
	virtual bool getDontCopyFiles()=0;
	virtual bool getAllowForeign_isNull()=0;
	virtual bool getAllowForeign()=0;
	virtual bool getUpdateDfs_isNull()=0;
	virtual bool getUpdateDfs()=0;
	virtual bool getUpdateSuperfiles_isNull()=0;
	virtual bool getUpdateSuperfiles()=0;
	virtual bool getUpdateCloneFrom_isNull()=0;
	virtual bool getUpdateCloneFrom()=0;
	virtual bool getDontAppendCluster_isNull()=0;
	virtual bool getDontAppendCluster()=0;
	virtual bool getMsToWait_isNull()=0;
	virtual int getMsToWait()=0;
	virtual bool getTimeLimit_isNull()=0;
	virtual int getTimeLimit()=0;
	virtual bool getWarnTimeLimit_isNull()=0;
	virtual int getWarnTimeLimit()=0;
};

interface IEspWUEclDefinitionActionRequest : extends IConstWUEclDefinitionActionRequest
{
	virtual void setEclDefinitions(StringArray &val)=0;
	virtual void setActionType(CEclDefinitionActions val)=0;
	virtual void setActionType(const char* val)=0;
	virtual void setTarget(const char * val)=0;
	virtual void setRemoteDali(const char * val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setDeletePrevious_null()=0;
	virtual void setDeletePrevious(bool val)=0;
	virtual void setSuspendPrevious_null()=0;
	virtual void setSuspendPrevious(bool val)=0;
	virtual void setNoActivate_null()=0;
	virtual void setNoActivate(bool val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setDontCopyFiles_null()=0;
	virtual void setDontCopyFiles(bool val)=0;
	virtual void setAllowForeign_null()=0;
	virtual void setAllowForeign(bool val)=0;
	virtual void setUpdateDfs_null()=0;
	virtual void setUpdateDfs(bool val)=0;
	virtual void setUpdateSuperfiles_null()=0;
	virtual void setUpdateSuperfiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setDontAppendCluster_null()=0;
	virtual void setDontAppendCluster(bool val)=0;
	virtual void setMsToWait_null()=0;
	virtual void setMsToWait(int val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(int val)=0;
	virtual void copy(IConstWUEclDefinitionActionRequest &from)=0;
};

interface IClientWUEclDefinitionActionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setEclDefinitions(StringArray &val)=0;
	virtual void setActionType(CEclDefinitionActions val)=0;
	virtual void setActionType(const char* val)=0;
	virtual void setTarget(const char * val)=0;
	virtual void setRemoteDali(const char * val)=0;
	virtual void setSourceProcess(const char * val)=0;
	virtual void setPriority(const char * val)=0;
	virtual void setComment(const char * val)=0;
	virtual void setMemoryLimit(const char * val)=0;
	virtual void setDeletePrevious_null()=0;
	virtual void setDeletePrevious(bool val)=0;
	virtual void setSuspendPrevious_null()=0;
	virtual void setSuspendPrevious(bool val)=0;
	virtual void setNoActivate_null()=0;
	virtual void setNoActivate(bool val)=0;
	virtual void setNoReload_null()=0;
	virtual void setNoReload(bool val)=0;
	virtual void setDontCopyFiles_null()=0;
	virtual void setDontCopyFiles(bool val)=0;
	virtual void setAllowForeign_null()=0;
	virtual void setAllowForeign(bool val)=0;
	virtual void setUpdateDfs_null()=0;
	virtual void setUpdateDfs(bool val)=0;
	virtual void setUpdateSuperfiles_null()=0;
	virtual void setUpdateSuperfiles(bool val)=0;
	virtual void setUpdateCloneFrom_null()=0;
	virtual void setUpdateCloneFrom(bool val)=0;
	virtual void setDontAppendCluster_null()=0;
	virtual void setDontAppendCluster(bool val)=0;
	virtual void setMsToWait_null()=0;
	virtual void setMsToWait(int val)=0;
	virtual void setTimeLimit_null()=0;
	virtual void setTimeLimit(int val)=0;
	virtual void setWarnTimeLimit_null()=0;
	virtual void setWarnTimeLimit(int val)=0;
};



interface IConstWUEclDefinitionActionResponse : extends IEspResponse
{
	virtual IArrayOf<IConstWUEclDefinitionActionResult> & getActionResults()=0;
};

interface IEspWUEclDefinitionActionResponse : extends IConstWUEclDefinitionActionResponse
{
	virtual void setActionResults(IArrayOf<IEspWUEclDefinitionActionResult> &val)=0;
	virtual void setActionResults(IArrayOf<IConstWUEclDefinitionActionResult> &val)=0;
	virtual void copy(IConstWUEclDefinitionActionResponse &from)=0;
};

interface IClientWUEclDefinitionActionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstWUEclDefinitionActionResult> & getActionResults()=0;

	virtual const IMultiException& getExceptions()=0;
};



// ----------------------------------------------------------------------------------
interface IConstWsWorkunitsPingRequest : extends IEspRequest
{
};

interface IEspWsWorkunitsPingRequest : extends IConstWsWorkunitsPingRequest
{
	virtual void copy(IConstWsWorkunitsPingRequest &from)=0;
};

interface IClientWsWorkunitsPingRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};

interface IConstWsWorkunitsPingResponse : extends IEspResponse
{
};

interface IEspWsWorkunitsPingResponse : extends IConstWsWorkunitsPingResponse
{
	virtual void copy(IConstWsWorkunitsPingResponse &from)=0;
};

interface IClientWsWorkunitsPingResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
};

interface IEspWsWorkunits : extends IEspService
{
	virtual bool onGVCAjaxGraph(IEspContext &context, IEspGVCAjaxGraphRequest &req, IEspGVCAjaxGraphResponse &resp)=0;
	virtual bool onPing(IEspContext &context, IEspWsWorkunitsPingRequest &req, IEspWsWorkunitsPingResponse &resp)=0;
	virtual bool onWUAbort(IEspContext &context, IEspWUAbortRequest &req, IEspWUAbortResponse &resp)=0;
	virtual bool onWUAction(IEspContext &context, IEspWUActionRequest &req, IEspWUActionResponse &resp)=0;
	virtual bool onWUAddLocalFileToWorkunit(IEspContext &context, IEspWUAddLocalFileToWorkunitRequest &req, IEspWUAddLocalFileToWorkunitResponse &resp)=0;
	virtual bool onWUCDebug(IEspContext &context, IEspWUDebugRequest &req, IEspWUDebugResponse &resp)=0;
	virtual bool onWUCheckFeatures(IEspContext &context, IEspWUCheckFeaturesRequest &req, IEspWUCheckFeaturesResponse &resp)=0;
	virtual bool onWUClusterJobQueueLOG(IEspContext &context, IEspWUClusterJobQueueLOGRequest &req, IEspWUClusterJobQueueLOGResponse &resp)=0;
	virtual bool onWUClusterJobQueueXLS(IEspContext &context, IEspWUClusterJobQueueXLSRequest &req, IEspWUClusterJobQueueXLSResponse &resp)=0;
	virtual bool onWUClusterJobSummaryXLS(IEspContext &context, IEspWUClusterJobSummaryXLSRequest &req, IEspWUClusterJobSummaryXLSResponse &resp)=0;
	virtual bool onWUClusterJobXLS(IEspContext &context, IEspWUClusterJobXLSRequest &req, IEspWUClusterJobXLSResponse &resp)=0;
	virtual bool onWUCompileECL(IEspContext &context, IEspWUCompileECLRequest &req, IEspWUCompileECLResponse &resp)=0;
	virtual bool onWUCopyLogicalFiles(IEspContext &context, IEspWUCopyLogicalFilesRequest &req, IEspWUCopyLogicalFilesResponse &resp)=0;
	virtual bool onWUCopyQuerySet(IEspContext &context, IEspWUCopyQuerySetRequest &req, IEspWUCopyQuerySetResponse &resp)=0;
	virtual bool onWUCreate(IEspContext &context, IEspWUCreateRequest &req, IEspWUCreateResponse &resp)=0;
	virtual bool onWUCreateAndUpdate(IEspContext &context, IEspWUUpdateRequest &req, IEspWUUpdateResponse &resp)=0;
	virtual bool onWUCreateZAPInfo(IEspContext &context, IEspWUCreateZAPInfoRequest &req, IEspWUCreateZAPInfoResponse &resp)=0;
	virtual bool onWUDelete(IEspContext &context, IEspWUDeleteRequest &req, IEspWUDeleteResponse &resp)=0;
	virtual bool onWUDeployWorkunit(IEspContext &context, IEspWUDeployWorkunitRequest &req, IEspWUDeployWorkunitResponse &resp)=0;
	virtual bool onWUDetails(IEspContext &context, IEspWUDetailsRequest &req, IEspWUDetailsResponse &resp)=0;
	virtual bool onWUDetailsMeta(IEspContext &context, IEspWUDetailsMetaRequest &req, IEspWUDetailsMetaResponse &resp)=0;
	virtual bool onWUEclDefinitionAction(IEspContext &context, IEspWUEclDefinitionActionRequest &req, IEspWUEclDefinitionActionResponse &resp)=0;
	virtual bool onWUExport(IEspContext &context, IEspWUExportRequest &req, IEspWUExportResponse &resp)=0;
	virtual bool onWUFile(IEspContext &context, IEspWULogFileRequest &req, IEspWULogFileResponse &resp)=0;
	virtual bool onWUFullResult(IEspContext &context, IEspWUFullResultRequest &req, IEspWUFullResultResponse &resp)=0;
	virtual bool onWUGVCGraphInfo(IEspContext &context, IEspWUGVCGraphInfoRequest &req, IEspWUGVCGraphInfoResponse &resp)=0;
	virtual bool onWUGetArchiveFile(IEspContext &context, IEspWUGetArchiveFileRequest &req, IEspWUGetArchiveFileResponse &resp)=0;
	virtual bool onWUGetDependancyTrees(IEspContext &context, IEspWUGetDependancyTreesRequest &req, IEspWUGetDependancyTreesResponse &resp)=0;
	virtual bool onWUGetGraph(IEspContext &context, IEspWUGetGraphRequest &req, IEspWUGetGraphResponse &resp)=0;
	virtual bool onWUGetGraphNameAndTypes(IEspContext &context, IEspWUGetGraphNameAndTypesRequest &req, IEspWUGetGraphNameAndTypesResponse &resp)=0;
	virtual bool onWUGetNumFileToCopy(IEspContext &context, IEspWUGetNumFileToCopyRequest &req, IEspWUGetNumFileToCopyResponse &resp)=0;
	virtual bool onWUGetStats(IEspContext &context, IEspWUGetStatsRequest &req, IEspWUGetStatsResponse &resp)=0;
	virtual bool onWUGetThorJobList(IEspContext &context, IEspWUGetThorJobListRequest &req, IEspWUGetThorJobListResponse &resp)=0;
	virtual bool onWUGetThorJobQueue(IEspContext &context, IEspWUGetThorJobQueueRequest &req, IEspWUGetThorJobQueueResponse &resp)=0;
	virtual bool onWUGetZAPInfo(IEspContext &context, IEspWUGetZAPInfoRequest &req, IEspWUGetZAPInfoResponse &resp)=0;
	virtual bool onWUGraphInfo(IEspContext &context, IEspWUGraphInfoRequest &req, IEspWUGraphInfoResponse &resp)=0;
	virtual bool onWUGraphTiming(IEspContext &context, IEspWUGraphTimingRequest &req, IEspWUGraphTimingResponse &resp)=0;
	virtual bool onWUInfo(IEspContext &context, IEspWUInfoRequest &req, IEspWUInfoResponse &resp)=0;
	virtual bool onWUInfoDetails(IEspContext &context, IEspWUInfoRequest &req, IEspWUInfoResponse &resp)=0;
	virtual bool onWUJobList(IEspContext &context, IEspWUJobListRequest &req, IEspWUJobListResponse &resp)=0;
	virtual bool onWULightWeightQuery(IEspContext &context, IEspWULightWeightQueryRequest &req, IEspWULightWeightQueryResponse &resp)=0;
	virtual bool onWUListArchiveFiles(IEspContext &context, IEspWUListArchiveFilesRequest &req, IEspWUListArchiveFilesResponse &resp)=0;
	virtual bool onWUListLocalFileRequired(IEspContext &context, IEspWUListLocalFileRequiredRequest &req, IEspWUListLocalFileRequiredResponse &resp)=0;
	virtual bool onWUListQueries(IEspContext &context, IEspWUListQueriesRequest &req, IEspWUListQueriesResponse &resp)=0;
	virtual bool onWUListQueriesUsingFile(IEspContext &context, IEspWUListQueriesUsingFileRequest &req, IEspWUListQueriesUsingFileResponse &resp)=0;
	virtual bool onWUMultiQuerysetDetails(IEspContext &context, IEspWUMultiQuerySetDetailsRequest &req, IEspWUMultiQuerySetDetailsResponse &resp)=0;
	virtual bool onWUProcessGraph(IEspContext &context, IEspWUProcessGraphRequest &req, IEspWUProcessGraphResponse &resp)=0;
	virtual bool onWUProtect(IEspContext &context, IEspWUProtectRequest &req, IEspWUProtectResponse &resp)=0;
	virtual bool onWUPublishWorkunit(IEspContext &context, IEspWUPublishWorkunitRequest &req, IEspWUPublishWorkunitResponse &resp)=0;
	virtual bool onWUPushEvent(IEspContext &context, IEspWUPushEventRequest &req, IEspWUPushEventResponse &resp)=0;
	virtual bool onWUQuery(IEspContext &context, IEspWUQueryRequest &req, IEspWUQueryResponse &resp)=0;
	virtual bool onWUQueryConfig(IEspContext &context, IEspWUQueryConfigRequest &req, IEspWUQueryConfigResponse &resp)=0;
	virtual bool onWUQueryDetails(IEspContext &context, IEspWUQueryDetailsRequest &req, IEspWUQueryDetailsResponse &resp)=0;
	virtual bool onWUQueryFiles(IEspContext &context, IEspWUQueryFilesRequest &req, IEspWUQueryFilesResponse &resp)=0;
	virtual bool onWUQueryGetGraph(IEspContext &context, IEspWUQueryGetGraphRequest &req, IEspWUQueryGetGraphResponse &resp)=0;
	virtual bool onWUQueryGetSummaryStats(IEspContext &context, IEspWUQueryGetSummaryStatsRequest &req, IEspWUQueryGetSummaryStatsResponse &resp)=0;
	virtual bool onWUQuerysetAliasAction(IEspContext &context, IEspWUQuerySetAliasActionRequest &req, IEspWUQuerySetAliasActionResponse &resp)=0;
	virtual bool onWUQuerysetCopyQuery(IEspContext &context, IEspWUQuerySetCopyQueryRequest &req, IEspWUQuerySetCopyQueryResponse &resp)=0;
	virtual bool onWUQuerysetDetails(IEspContext &context, IEspWUQuerySetDetailsRequest &req, IEspWUQuerySetDetailsResponse &resp)=0;
	virtual bool onWUQuerysetExport(IEspContext &context, IEspWUQuerysetExportRequest &req, IEspWUQuerysetExportResponse &resp)=0;
	virtual bool onWUQuerysetImport(IEspContext &context, IEspWUQuerysetImportRequest &req, IEspWUQuerysetImportResponse &resp)=0;
	virtual bool onWUQuerysetQueryAction(IEspContext &context, IEspWUQuerySetQueryActionRequest &req, IEspWUQuerySetQueryActionResponse &resp)=0;
	virtual bool onWUQuerysets(IEspContext &context, IEspWUQuerysetsRequest &req, IEspWUQuerysetsResponse &resp)=0;
	virtual bool onWURecreateQuery(IEspContext &context, IEspWURecreateQueryRequest &req, IEspWURecreateQueryResponse &resp)=0;
	virtual bool onWUResubmit(IEspContext &context, IEspWUResubmitRequest &req, IEspWUResubmitResponse &resp)=0;
	virtual bool onWUResult(IEspContext &context, IEspWUResultRequest &req, IEspWUResultResponse &resp)=0;
	virtual bool onWUResultBin(IEspContext &context, IEspWUResultBinRequest &req, IEspWUResultBinResponse &resp)=0;
	virtual bool onWUResultSummary(IEspContext &context, IEspWUResultSummaryRequest &req, IEspWUResultSummaryResponse &resp)=0;
	virtual bool onWUResultView(IEspContext &context, IEspWUResultViewRequest &req, IEspWUResultViewResponse &resp)=0;
	virtual bool onWURun(IEspContext &context, IEspWURunRequest &req, IEspWURunResponse &resp)=0;
	virtual bool onWUSchedule(IEspContext &context, IEspWUScheduleRequest &req, IEspWUScheduleResponse &resp)=0;
	virtual bool onWUShowScheduled(IEspContext &context, IEspWUShowScheduledRequest &req, IEspWUShowScheduledResponse &resp)=0;
	virtual bool onWUSubmit(IEspContext &context, IEspWUSubmitRequest &req, IEspWUSubmitResponse &resp)=0;
	virtual bool onWUSyntaxCheckECL(IEspContext &context, IEspWUSyntaxCheckRequest &req, IEspWUSyntaxCheckResponse &resp)=0;
	virtual bool onWUUpdate(IEspContext &context, IEspWUUpdateRequest &req, IEspWUUpdateResponse &resp)=0;
	virtual bool onWUUpdateQueryEntry(IEspContext &context, IEspWUUpdateQueryEntryRequest &req, IEspWUUpdateQueryEntryResponse &resp)=0;
	virtual bool onWUWaitCompiled(IEspContext &context, IEspWUWaitRequest &req, IEspWUWaitResponse &resp)=0;
	virtual bool onWUWaitComplete(IEspContext &context, IEspWUWaitRequest &req, IEspWUWaitResponse &resp)=0;
};

interface IClientWsWorkunitsEvents : extends IInterface
{
	virtual int onGVCAjaxGraphComplete(IClientGVCAjaxGraphResponse *resp,IInterface* state)=0;
	virtual int onGVCAjaxGraphError(IClientGVCAjaxGraphResponse *resp,IInterface* state)=0;
	virtual int onPingComplete(IClientWsWorkunitsPingResponse *resp,IInterface* state)=0;
	virtual int onPingError(IClientWsWorkunitsPingResponse *resp,IInterface* state)=0;
	virtual int onWUAbortComplete(IClientWUAbortResponse *resp,IInterface* state)=0;
	virtual int onWUAbortError(IClientWUAbortResponse *resp,IInterface* state)=0;
	virtual int onWUActionComplete(IClientWUActionResponse *resp,IInterface* state)=0;
	virtual int onWUActionError(IClientWUActionResponse *resp,IInterface* state)=0;
	virtual int onWUAddLocalFileToWorkunitComplete(IClientWUAddLocalFileToWorkunitResponse *resp,IInterface* state)=0;
	virtual int onWUAddLocalFileToWorkunitError(IClientWUAddLocalFileToWorkunitResponse *resp,IInterface* state)=0;
	virtual int onWUCDebugComplete(IClientWUDebugResponse *resp,IInterface* state)=0;
	virtual int onWUCDebugError(IClientWUDebugResponse *resp,IInterface* state)=0;
	virtual int onWUCheckFeaturesComplete(IClientWUCheckFeaturesResponse *resp,IInterface* state)=0;
	virtual int onWUCheckFeaturesError(IClientWUCheckFeaturesResponse *resp,IInterface* state)=0;
	virtual int onWUClusterJobQueueLOGComplete(IClientWUClusterJobQueueLOGResponse *resp,IInterface* state)=0;
	virtual int onWUClusterJobQueueLOGError(IClientWUClusterJobQueueLOGResponse *resp,IInterface* state)=0;
	virtual int onWUClusterJobQueueXLSComplete(IClientWUClusterJobQueueXLSResponse *resp,IInterface* state)=0;
	virtual int onWUClusterJobQueueXLSError(IClientWUClusterJobQueueXLSResponse *resp,IInterface* state)=0;
	virtual int onWUClusterJobSummaryXLSComplete(IClientWUClusterJobSummaryXLSResponse *resp,IInterface* state)=0;
	virtual int onWUClusterJobSummaryXLSError(IClientWUClusterJobSummaryXLSResponse *resp,IInterface* state)=0;
	virtual int onWUClusterJobXLSComplete(IClientWUClusterJobXLSResponse *resp,IInterface* state)=0;
	virtual int onWUClusterJobXLSError(IClientWUClusterJobXLSResponse *resp,IInterface* state)=0;
	virtual int onWUCompileECLComplete(IClientWUCompileECLResponse *resp,IInterface* state)=0;
	virtual int onWUCompileECLError(IClientWUCompileECLResponse *resp,IInterface* state)=0;
	virtual int onWUCopyLogicalFilesComplete(IClientWUCopyLogicalFilesResponse *resp,IInterface* state)=0;
	virtual int onWUCopyLogicalFilesError(IClientWUCopyLogicalFilesResponse *resp,IInterface* state)=0;
	virtual int onWUCopyQuerySetComplete(IClientWUCopyQuerySetResponse *resp,IInterface* state)=0;
	virtual int onWUCopyQuerySetError(IClientWUCopyQuerySetResponse *resp,IInterface* state)=0;
	virtual int onWUCreateComplete(IClientWUCreateResponse *resp,IInterface* state)=0;
	virtual int onWUCreateError(IClientWUCreateResponse *resp,IInterface* state)=0;
	virtual int onWUCreateAndUpdateComplete(IClientWUUpdateResponse *resp,IInterface* state)=0;
	virtual int onWUCreateAndUpdateError(IClientWUUpdateResponse *resp,IInterface* state)=0;
	virtual int onWUCreateZAPInfoComplete(IClientWUCreateZAPInfoResponse *resp,IInterface* state)=0;
	virtual int onWUCreateZAPInfoError(IClientWUCreateZAPInfoResponse *resp,IInterface* state)=0;
	virtual int onWUDeleteComplete(IClientWUDeleteResponse *resp,IInterface* state)=0;
	virtual int onWUDeleteError(IClientWUDeleteResponse *resp,IInterface* state)=0;
	virtual int onWUDeployWorkunitComplete(IClientWUDeployWorkunitResponse *resp,IInterface* state)=0;
	virtual int onWUDeployWorkunitError(IClientWUDeployWorkunitResponse *resp,IInterface* state)=0;
	virtual int onWUDetailsComplete(IClientWUDetailsResponse *resp,IInterface* state)=0;
	virtual int onWUDetailsError(IClientWUDetailsResponse *resp,IInterface* state)=0;
	virtual int onWUDetailsMetaComplete(IClientWUDetailsMetaResponse *resp,IInterface* state)=0;
	virtual int onWUDetailsMetaError(IClientWUDetailsMetaResponse *resp,IInterface* state)=0;
	virtual int onWUEclDefinitionActionComplete(IClientWUEclDefinitionActionResponse *resp,IInterface* state)=0;
	virtual int onWUEclDefinitionActionError(IClientWUEclDefinitionActionResponse *resp,IInterface* state)=0;
	virtual int onWUExportComplete(IClientWUExportResponse *resp,IInterface* state)=0;
	virtual int onWUExportError(IClientWUExportResponse *resp,IInterface* state)=0;
	virtual int onWUFileComplete(IClientWULogFileResponse *resp,IInterface* state)=0;
	virtual int onWUFileError(IClientWULogFileResponse *resp,IInterface* state)=0;
	virtual int onWUFullResultComplete(IClientWUFullResultResponse *resp,IInterface* state)=0;
	virtual int onWUFullResultError(IClientWUFullResultResponse *resp,IInterface* state)=0;
	virtual int onWUGVCGraphInfoComplete(IClientWUGVCGraphInfoResponse *resp,IInterface* state)=0;
	virtual int onWUGVCGraphInfoError(IClientWUGVCGraphInfoResponse *resp,IInterface* state)=0;
	virtual int onWUGetArchiveFileComplete(IClientWUGetArchiveFileResponse *resp,IInterface* state)=0;
	virtual int onWUGetArchiveFileError(IClientWUGetArchiveFileResponse *resp,IInterface* state)=0;
	virtual int onWUGetDependancyTreesComplete(IClientWUGetDependancyTreesResponse *resp,IInterface* state)=0;
	virtual int onWUGetDependancyTreesError(IClientWUGetDependancyTreesResponse *resp,IInterface* state)=0;
	virtual int onWUGetGraphComplete(IClientWUGetGraphResponse *resp,IInterface* state)=0;
	virtual int onWUGetGraphError(IClientWUGetGraphResponse *resp,IInterface* state)=0;
	virtual int onWUGetGraphNameAndTypesComplete(IClientWUGetGraphNameAndTypesResponse *resp,IInterface* state)=0;
	virtual int onWUGetGraphNameAndTypesError(IClientWUGetGraphNameAndTypesResponse *resp,IInterface* state)=0;
	virtual int onWUGetNumFileToCopyComplete(IClientWUGetNumFileToCopyResponse *resp,IInterface* state)=0;
	virtual int onWUGetNumFileToCopyError(IClientWUGetNumFileToCopyResponse *resp,IInterface* state)=0;
	virtual int onWUGetStatsComplete(IClientWUGetStatsResponse *resp,IInterface* state)=0;
	virtual int onWUGetStatsError(IClientWUGetStatsResponse *resp,IInterface* state)=0;
	virtual int onWUGetThorJobListComplete(IClientWUGetThorJobListResponse *resp,IInterface* state)=0;
	virtual int onWUGetThorJobListError(IClientWUGetThorJobListResponse *resp,IInterface* state)=0;
	virtual int onWUGetThorJobQueueComplete(IClientWUGetThorJobQueueResponse *resp,IInterface* state)=0;
	virtual int onWUGetThorJobQueueError(IClientWUGetThorJobQueueResponse *resp,IInterface* state)=0;
	virtual int onWUGetZAPInfoComplete(IClientWUGetZAPInfoResponse *resp,IInterface* state)=0;
	virtual int onWUGetZAPInfoError(IClientWUGetZAPInfoResponse *resp,IInterface* state)=0;
	virtual int onWUGraphInfoComplete(IClientWUGraphInfoResponse *resp,IInterface* state)=0;
	virtual int onWUGraphInfoError(IClientWUGraphInfoResponse *resp,IInterface* state)=0;
	virtual int onWUGraphTimingComplete(IClientWUGraphTimingResponse *resp,IInterface* state)=0;
	virtual int onWUGraphTimingError(IClientWUGraphTimingResponse *resp,IInterface* state)=0;
	virtual int onWUInfoComplete(IClientWUInfoResponse *resp,IInterface* state)=0;
	virtual int onWUInfoError(IClientWUInfoResponse *resp,IInterface* state)=0;
	virtual int onWUInfoDetailsComplete(IClientWUInfoResponse *resp,IInterface* state)=0;
	virtual int onWUInfoDetailsError(IClientWUInfoResponse *resp,IInterface* state)=0;
	virtual int onWUJobListComplete(IClientWUJobListResponse *resp,IInterface* state)=0;
	virtual int onWUJobListError(IClientWUJobListResponse *resp,IInterface* state)=0;
	virtual int onWULightWeightQueryComplete(IClientWULightWeightQueryResponse *resp,IInterface* state)=0;
	virtual int onWULightWeightQueryError(IClientWULightWeightQueryResponse *resp,IInterface* state)=0;
	virtual int onWUListArchiveFilesComplete(IClientWUListArchiveFilesResponse *resp,IInterface* state)=0;
	virtual int onWUListArchiveFilesError(IClientWUListArchiveFilesResponse *resp,IInterface* state)=0;
	virtual int onWUListLocalFileRequiredComplete(IClientWUListLocalFileRequiredResponse *resp,IInterface* state)=0;
	virtual int onWUListLocalFileRequiredError(IClientWUListLocalFileRequiredResponse *resp,IInterface* state)=0;
	virtual int onWUListQueriesComplete(IClientWUListQueriesResponse *resp,IInterface* state)=0;
	virtual int onWUListQueriesError(IClientWUListQueriesResponse *resp,IInterface* state)=0;
	virtual int onWUListQueriesUsingFileComplete(IClientWUListQueriesUsingFileResponse *resp,IInterface* state)=0;
	virtual int onWUListQueriesUsingFileError(IClientWUListQueriesUsingFileResponse *resp,IInterface* state)=0;
	virtual int onWUMultiQuerysetDetailsComplete(IClientWUMultiQuerySetDetailsResponse *resp,IInterface* state)=0;
	virtual int onWUMultiQuerysetDetailsError(IClientWUMultiQuerySetDetailsResponse *resp,IInterface* state)=0;
	virtual int onWUProcessGraphComplete(IClientWUProcessGraphResponse *resp,IInterface* state)=0;
	virtual int onWUProcessGraphError(IClientWUProcessGraphResponse *resp,IInterface* state)=0;
	virtual int onWUProtectComplete(IClientWUProtectResponse *resp,IInterface* state)=0;
	virtual int onWUProtectError(IClientWUProtectResponse *resp,IInterface* state)=0;
	virtual int onWUPublishWorkunitComplete(IClientWUPublishWorkunitResponse *resp,IInterface* state)=0;
	virtual int onWUPublishWorkunitError(IClientWUPublishWorkunitResponse *resp,IInterface* state)=0;
	virtual int onWUPushEventComplete(IClientWUPushEventResponse *resp,IInterface* state)=0;
	virtual int onWUPushEventError(IClientWUPushEventResponse *resp,IInterface* state)=0;
	virtual int onWUQueryComplete(IClientWUQueryResponse *resp,IInterface* state)=0;
	virtual int onWUQueryError(IClientWUQueryResponse *resp,IInterface* state)=0;
	virtual int onWUQueryConfigComplete(IClientWUQueryConfigResponse *resp,IInterface* state)=0;
	virtual int onWUQueryConfigError(IClientWUQueryConfigResponse *resp,IInterface* state)=0;
	virtual int onWUQueryDetailsComplete(IClientWUQueryDetailsResponse *resp,IInterface* state)=0;
	virtual int onWUQueryDetailsError(IClientWUQueryDetailsResponse *resp,IInterface* state)=0;
	virtual int onWUQueryFilesComplete(IClientWUQueryFilesResponse *resp,IInterface* state)=0;
	virtual int onWUQueryFilesError(IClientWUQueryFilesResponse *resp,IInterface* state)=0;
	virtual int onWUQueryGetGraphComplete(IClientWUQueryGetGraphResponse *resp,IInterface* state)=0;
	virtual int onWUQueryGetGraphError(IClientWUQueryGetGraphResponse *resp,IInterface* state)=0;
	virtual int onWUQueryGetSummaryStatsComplete(IClientWUQueryGetSummaryStatsResponse *resp,IInterface* state)=0;
	virtual int onWUQueryGetSummaryStatsError(IClientWUQueryGetSummaryStatsResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetAliasActionComplete(IClientWUQuerySetAliasActionResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetAliasActionError(IClientWUQuerySetAliasActionResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetCopyQueryComplete(IClientWUQuerySetCopyQueryResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetCopyQueryError(IClientWUQuerySetCopyQueryResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetDetailsComplete(IClientWUQuerySetDetailsResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetDetailsError(IClientWUQuerySetDetailsResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetExportComplete(IClientWUQuerysetExportResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetExportError(IClientWUQuerysetExportResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetImportComplete(IClientWUQuerysetImportResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetImportError(IClientWUQuerysetImportResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetQueryActionComplete(IClientWUQuerySetQueryActionResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetQueryActionError(IClientWUQuerySetQueryActionResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetsComplete(IClientWUQuerysetsResponse *resp,IInterface* state)=0;
	virtual int onWUQuerysetsError(IClientWUQuerysetsResponse *resp,IInterface* state)=0;
	virtual int onWURecreateQueryComplete(IClientWURecreateQueryResponse *resp,IInterface* state)=0;
	virtual int onWURecreateQueryError(IClientWURecreateQueryResponse *resp,IInterface* state)=0;
	virtual int onWUResubmitComplete(IClientWUResubmitResponse *resp,IInterface* state)=0;
	virtual int onWUResubmitError(IClientWUResubmitResponse *resp,IInterface* state)=0;
	virtual int onWUResultComplete(IClientWUResultResponse *resp,IInterface* state)=0;
	virtual int onWUResultError(IClientWUResultResponse *resp,IInterface* state)=0;
	virtual int onWUResultBinComplete(IClientWUResultBinResponse *resp,IInterface* state)=0;
	virtual int onWUResultBinError(IClientWUResultBinResponse *resp,IInterface* state)=0;
	virtual int onWUResultSummaryComplete(IClientWUResultSummaryResponse *resp,IInterface* state)=0;
	virtual int onWUResultSummaryError(IClientWUResultSummaryResponse *resp,IInterface* state)=0;
	virtual int onWUResultViewComplete(IClientWUResultViewResponse *resp,IInterface* state)=0;
	virtual int onWUResultViewError(IClientWUResultViewResponse *resp,IInterface* state)=0;
	virtual int onWURunComplete(IClientWURunResponse *resp,IInterface* state)=0;
	virtual int onWURunError(IClientWURunResponse *resp,IInterface* state)=0;
	virtual int onWUScheduleComplete(IClientWUScheduleResponse *resp,IInterface* state)=0;
	virtual int onWUScheduleError(IClientWUScheduleResponse *resp,IInterface* state)=0;
	virtual int onWUShowScheduledComplete(IClientWUShowScheduledResponse *resp,IInterface* state)=0;
	virtual int onWUShowScheduledError(IClientWUShowScheduledResponse *resp,IInterface* state)=0;
	virtual int onWUSubmitComplete(IClientWUSubmitResponse *resp,IInterface* state)=0;
	virtual int onWUSubmitError(IClientWUSubmitResponse *resp,IInterface* state)=0;
	virtual int onWUSyntaxCheckECLComplete(IClientWUSyntaxCheckResponse *resp,IInterface* state)=0;
	virtual int onWUSyntaxCheckECLError(IClientWUSyntaxCheckResponse *resp,IInterface* state)=0;
	virtual int onWUUpdateComplete(IClientWUUpdateResponse *resp,IInterface* state)=0;
	virtual int onWUUpdateError(IClientWUUpdateResponse *resp,IInterface* state)=0;
	virtual int onWUUpdateQueryEntryComplete(IClientWUUpdateQueryEntryResponse *resp,IInterface* state)=0;
	virtual int onWUUpdateQueryEntryError(IClientWUUpdateQueryEntryResponse *resp,IInterface* state)=0;
	virtual int onWUWaitCompiledComplete(IClientWUWaitResponse *resp,IInterface* state)=0;
	virtual int onWUWaitCompiledError(IClientWUWaitResponse *resp,IInterface* state)=0;
	virtual int onWUWaitCompleteComplete(IClientWUWaitResponse *resp,IInterface* state)=0;
	virtual int onWUWaitCompleteError(IClientWUWaitResponse *resp,IInterface* state)=0;
};

interface IClientWsWorkunits : extends IInterface
{
	virtual void setProxyAddress(const char *address)=0;
	virtual void addServiceUrl(const char *url)=0;
	virtual void removeServiceUrl(const char *url)=0;
	virtual void setUsernameToken(const char *userName,const char *passWord,const char *realm)=0;
	virtual void setAction(const char *action)=0;

	virtual IClientGVCAjaxGraphRequest * createGVCAjaxGraphRequest()=0;
	virtual IClientGVCAjaxGraphResponse * GVCAjaxGraph(IClientGVCAjaxGraphRequest *request)=0;
	virtual void async_GVCAjaxGraph(IClientGVCAjaxGraphRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWsWorkunitsPingRequest * createPingRequest()=0;
	virtual IClientWsWorkunitsPingResponse * Ping(IClientWsWorkunitsPingRequest *request)=0;
	virtual void async_Ping(IClientWsWorkunitsPingRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUAbortRequest * createWUAbortRequest()=0;
	virtual IClientWUAbortResponse * WUAbort(IClientWUAbortRequest *request)=0;
	virtual void async_WUAbort(IClientWUAbortRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUActionRequest * createWUActionRequest()=0;
	virtual IClientWUActionResponse * WUAction(IClientWUActionRequest *request)=0;
	virtual void async_WUAction(IClientWUActionRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUAddLocalFileToWorkunitRequest * createWUAddLocalFileToWorkunitRequest()=0;
	virtual IClientWUAddLocalFileToWorkunitResponse * WUAddLocalFileToWorkunit(IClientWUAddLocalFileToWorkunitRequest *request)=0;
	virtual void async_WUAddLocalFileToWorkunit(IClientWUAddLocalFileToWorkunitRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUDebugRequest * createWUCDebugRequest()=0;
	virtual IClientWUDebugResponse * WUCDebug(IClientWUDebugRequest *request)=0;
	virtual void async_WUCDebug(IClientWUDebugRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUCheckFeaturesRequest * createWUCheckFeaturesRequest()=0;
	virtual IClientWUCheckFeaturesResponse * WUCheckFeatures(IClientWUCheckFeaturesRequest *request)=0;
	virtual void async_WUCheckFeatures(IClientWUCheckFeaturesRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUClusterJobQueueLOGRequest * createWUClusterJobQueueLOGRequest()=0;
	virtual IClientWUClusterJobQueueLOGResponse * WUClusterJobQueueLOG(IClientWUClusterJobQueueLOGRequest *request)=0;
	virtual void async_WUClusterJobQueueLOG(IClientWUClusterJobQueueLOGRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUClusterJobQueueXLSRequest * createWUClusterJobQueueXLSRequest()=0;
	virtual IClientWUClusterJobQueueXLSResponse * WUClusterJobQueueXLS(IClientWUClusterJobQueueXLSRequest *request)=0;
	virtual void async_WUClusterJobQueueXLS(IClientWUClusterJobQueueXLSRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUClusterJobSummaryXLSRequest * createWUClusterJobSummaryXLSRequest()=0;
	virtual IClientWUClusterJobSummaryXLSResponse * WUClusterJobSummaryXLS(IClientWUClusterJobSummaryXLSRequest *request)=0;
	virtual void async_WUClusterJobSummaryXLS(IClientWUClusterJobSummaryXLSRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUClusterJobXLSRequest * createWUClusterJobXLSRequest()=0;
	virtual IClientWUClusterJobXLSResponse * WUClusterJobXLS(IClientWUClusterJobXLSRequest *request)=0;
	virtual void async_WUClusterJobXLS(IClientWUClusterJobXLSRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUCompileECLRequest * createWUCompileECLRequest()=0;
	virtual IClientWUCompileECLResponse * WUCompileECL(IClientWUCompileECLRequest *request)=0;
	virtual void async_WUCompileECL(IClientWUCompileECLRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUCopyLogicalFilesRequest * createWUCopyLogicalFilesRequest()=0;
	virtual IClientWUCopyLogicalFilesResponse * WUCopyLogicalFiles(IClientWUCopyLogicalFilesRequest *request)=0;
	virtual void async_WUCopyLogicalFiles(IClientWUCopyLogicalFilesRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUCopyQuerySetRequest * createWUCopyQuerySetRequest()=0;
	virtual IClientWUCopyQuerySetResponse * WUCopyQuerySet(IClientWUCopyQuerySetRequest *request)=0;
	virtual void async_WUCopyQuerySet(IClientWUCopyQuerySetRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUCreateRequest * createWUCreateRequest()=0;
	virtual IClientWUCreateResponse * WUCreate(IClientWUCreateRequest *request)=0;
	virtual void async_WUCreate(IClientWUCreateRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUUpdateRequest * createWUCreateAndUpdateRequest()=0;
	virtual IClientWUUpdateResponse * WUCreateAndUpdate(IClientWUUpdateRequest *request)=0;
	virtual void async_WUCreateAndUpdate(IClientWUUpdateRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUCreateZAPInfoRequest * createWUCreateZAPInfoRequest()=0;
	virtual IClientWUCreateZAPInfoResponse * WUCreateZAPInfo(IClientWUCreateZAPInfoRequest *request)=0;
	virtual void async_WUCreateZAPInfo(IClientWUCreateZAPInfoRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUDeleteRequest * createWUDeleteRequest()=0;
	virtual IClientWUDeleteResponse * WUDelete(IClientWUDeleteRequest *request)=0;
	virtual void async_WUDelete(IClientWUDeleteRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUDeployWorkunitRequest * createWUDeployWorkunitRequest()=0;
	virtual IClientWUDeployWorkunitResponse * WUDeployWorkunit(IClientWUDeployWorkunitRequest *request)=0;
	virtual void async_WUDeployWorkunit(IClientWUDeployWorkunitRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUDetailsRequest * createWUDetailsRequest()=0;
	virtual IClientWUDetailsResponse * WUDetails(IClientWUDetailsRequest *request)=0;
	virtual void async_WUDetails(IClientWUDetailsRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUDetailsMetaRequest * createWUDetailsMetaRequest()=0;
	virtual IClientWUDetailsMetaResponse * WUDetailsMeta(IClientWUDetailsMetaRequest *request)=0;
	virtual void async_WUDetailsMeta(IClientWUDetailsMetaRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUEclDefinitionActionRequest * createWUEclDefinitionActionRequest()=0;
	virtual IClientWUEclDefinitionActionResponse * WUEclDefinitionAction(IClientWUEclDefinitionActionRequest *request)=0;
	virtual void async_WUEclDefinitionAction(IClientWUEclDefinitionActionRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUExportRequest * createWUExportRequest()=0;
	virtual IClientWUExportResponse * WUExport(IClientWUExportRequest *request)=0;
	virtual void async_WUExport(IClientWUExportRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWULogFileRequest * createWUFileRequest()=0;
	virtual IClientWULogFileResponse * WUFile(IClientWULogFileRequest *request)=0;
	virtual void async_WUFile(IClientWULogFileRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUFullResultRequest * createWUFullResultRequest()=0;
	virtual IClientWUFullResultResponse * WUFullResult(IClientWUFullResultRequest *request)=0;
	virtual void async_WUFullResult(IClientWUFullResultRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGVCGraphInfoRequest * createWUGVCGraphInfoRequest()=0;
	virtual IClientWUGVCGraphInfoResponse * WUGVCGraphInfo(IClientWUGVCGraphInfoRequest *request)=0;
	virtual void async_WUGVCGraphInfo(IClientWUGVCGraphInfoRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetArchiveFileRequest * createWUGetArchiveFileRequest()=0;
	virtual IClientWUGetArchiveFileResponse * WUGetArchiveFile(IClientWUGetArchiveFileRequest *request)=0;
	virtual void async_WUGetArchiveFile(IClientWUGetArchiveFileRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetDependancyTreesRequest * createWUGetDependancyTreesRequest()=0;
	virtual IClientWUGetDependancyTreesResponse * WUGetDependancyTrees(IClientWUGetDependancyTreesRequest *request)=0;
	virtual void async_WUGetDependancyTrees(IClientWUGetDependancyTreesRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetGraphRequest * createWUGetGraphRequest()=0;
	virtual IClientWUGetGraphResponse * WUGetGraph(IClientWUGetGraphRequest *request)=0;
	virtual void async_WUGetGraph(IClientWUGetGraphRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetGraphNameAndTypesRequest * createWUGetGraphNameAndTypesRequest()=0;
	virtual IClientWUGetGraphNameAndTypesResponse * WUGetGraphNameAndTypes(IClientWUGetGraphNameAndTypesRequest *request)=0;
	virtual void async_WUGetGraphNameAndTypes(IClientWUGetGraphNameAndTypesRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetNumFileToCopyRequest * createWUGetNumFileToCopyRequest()=0;
	virtual IClientWUGetNumFileToCopyResponse * WUGetNumFileToCopy(IClientWUGetNumFileToCopyRequest *request)=0;
	virtual void async_WUGetNumFileToCopy(IClientWUGetNumFileToCopyRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetStatsRequest * createWUGetStatsRequest()=0;
	virtual IClientWUGetStatsResponse * WUGetStats(IClientWUGetStatsRequest *request)=0;
	virtual void async_WUGetStats(IClientWUGetStatsRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetThorJobListRequest * createWUGetThorJobListRequest()=0;
	virtual IClientWUGetThorJobListResponse * WUGetThorJobList(IClientWUGetThorJobListRequest *request)=0;
	virtual void async_WUGetThorJobList(IClientWUGetThorJobListRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetThorJobQueueRequest * createWUGetThorJobQueueRequest()=0;
	virtual IClientWUGetThorJobQueueResponse * WUGetThorJobQueue(IClientWUGetThorJobQueueRequest *request)=0;
	virtual void async_WUGetThorJobQueue(IClientWUGetThorJobQueueRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGetZAPInfoRequest * createWUGetZAPInfoRequest()=0;
	virtual IClientWUGetZAPInfoResponse * WUGetZAPInfo(IClientWUGetZAPInfoRequest *request)=0;
	virtual void async_WUGetZAPInfo(IClientWUGetZAPInfoRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGraphInfoRequest * createWUGraphInfoRequest()=0;
	virtual IClientWUGraphInfoResponse * WUGraphInfo(IClientWUGraphInfoRequest *request)=0;
	virtual void async_WUGraphInfo(IClientWUGraphInfoRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUGraphTimingRequest * createWUGraphTimingRequest()=0;
	virtual IClientWUGraphTimingResponse * WUGraphTiming(IClientWUGraphTimingRequest *request)=0;
	virtual void async_WUGraphTiming(IClientWUGraphTimingRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUInfoRequest * createWUInfoRequest()=0;
	virtual IClientWUInfoResponse * WUInfo(IClientWUInfoRequest *request)=0;
	virtual void async_WUInfo(IClientWUInfoRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUInfoRequest * createWUInfoDetailsRequest()=0;
	virtual IClientWUInfoResponse * WUInfoDetails(IClientWUInfoRequest *request)=0;
	virtual void async_WUInfoDetails(IClientWUInfoRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUJobListRequest * createWUJobListRequest()=0;
	virtual IClientWUJobListResponse * WUJobList(IClientWUJobListRequest *request)=0;
	virtual void async_WUJobList(IClientWUJobListRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWULightWeightQueryRequest * createWULightWeightQueryRequest()=0;
	virtual IClientWULightWeightQueryResponse * WULightWeightQuery(IClientWULightWeightQueryRequest *request)=0;
	virtual void async_WULightWeightQuery(IClientWULightWeightQueryRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUListArchiveFilesRequest * createWUListArchiveFilesRequest()=0;
	virtual IClientWUListArchiveFilesResponse * WUListArchiveFiles(IClientWUListArchiveFilesRequest *request)=0;
	virtual void async_WUListArchiveFiles(IClientWUListArchiveFilesRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUListLocalFileRequiredRequest * createWUListLocalFileRequiredRequest()=0;
	virtual IClientWUListLocalFileRequiredResponse * WUListLocalFileRequired(IClientWUListLocalFileRequiredRequest *request)=0;
	virtual void async_WUListLocalFileRequired(IClientWUListLocalFileRequiredRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUListQueriesRequest * createWUListQueriesRequest()=0;
	virtual IClientWUListQueriesResponse * WUListQueries(IClientWUListQueriesRequest *request)=0;
	virtual void async_WUListQueries(IClientWUListQueriesRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUListQueriesUsingFileRequest * createWUListQueriesUsingFileRequest()=0;
	virtual IClientWUListQueriesUsingFileResponse * WUListQueriesUsingFile(IClientWUListQueriesUsingFileRequest *request)=0;
	virtual void async_WUListQueriesUsingFile(IClientWUListQueriesUsingFileRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUMultiQuerySetDetailsRequest * createWUMultiQuerysetDetailsRequest()=0;
	virtual IClientWUMultiQuerySetDetailsResponse * WUMultiQuerysetDetails(IClientWUMultiQuerySetDetailsRequest *request)=0;
	virtual void async_WUMultiQuerysetDetails(IClientWUMultiQuerySetDetailsRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUProcessGraphRequest * createWUProcessGraphRequest()=0;
	virtual IClientWUProcessGraphResponse * WUProcessGraph(IClientWUProcessGraphRequest *request)=0;
	virtual void async_WUProcessGraph(IClientWUProcessGraphRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUProtectRequest * createWUProtectRequest()=0;
	virtual IClientWUProtectResponse * WUProtect(IClientWUProtectRequest *request)=0;
	virtual void async_WUProtect(IClientWUProtectRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUPublishWorkunitRequest * createWUPublishWorkunitRequest()=0;
	virtual IClientWUPublishWorkunitResponse * WUPublishWorkunit(IClientWUPublishWorkunitRequest *request)=0;
	virtual void async_WUPublishWorkunit(IClientWUPublishWorkunitRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUPushEventRequest * createWUPushEventRequest()=0;
	virtual IClientWUPushEventResponse * WUPushEvent(IClientWUPushEventRequest *request)=0;
	virtual void async_WUPushEvent(IClientWUPushEventRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQueryRequest * createWUQueryRequest()=0;
	virtual IClientWUQueryResponse * WUQuery(IClientWUQueryRequest *request)=0;
	virtual void async_WUQuery(IClientWUQueryRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQueryConfigRequest * createWUQueryConfigRequest()=0;
	virtual IClientWUQueryConfigResponse * WUQueryConfig(IClientWUQueryConfigRequest *request)=0;
	virtual void async_WUQueryConfig(IClientWUQueryConfigRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQueryDetailsRequest * createWUQueryDetailsRequest()=0;
	virtual IClientWUQueryDetailsResponse * WUQueryDetails(IClientWUQueryDetailsRequest *request)=0;
	virtual void async_WUQueryDetails(IClientWUQueryDetailsRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQueryFilesRequest * createWUQueryFilesRequest()=0;
	virtual IClientWUQueryFilesResponse * WUQueryFiles(IClientWUQueryFilesRequest *request)=0;
	virtual void async_WUQueryFiles(IClientWUQueryFilesRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQueryGetGraphRequest * createWUQueryGetGraphRequest()=0;
	virtual IClientWUQueryGetGraphResponse * WUQueryGetGraph(IClientWUQueryGetGraphRequest *request)=0;
	virtual void async_WUQueryGetGraph(IClientWUQueryGetGraphRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQueryGetSummaryStatsRequest * createWUQueryGetSummaryStatsRequest()=0;
	virtual IClientWUQueryGetSummaryStatsResponse * WUQueryGetSummaryStats(IClientWUQueryGetSummaryStatsRequest *request)=0;
	virtual void async_WUQueryGetSummaryStats(IClientWUQueryGetSummaryStatsRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQuerySetAliasActionRequest * createWUQuerysetAliasActionRequest()=0;
	virtual IClientWUQuerySetAliasActionResponse * WUQuerysetAliasAction(IClientWUQuerySetAliasActionRequest *request)=0;
	virtual void async_WUQuerysetAliasAction(IClientWUQuerySetAliasActionRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQuerySetCopyQueryRequest * createWUQuerysetCopyQueryRequest()=0;
	virtual IClientWUQuerySetCopyQueryResponse * WUQuerysetCopyQuery(IClientWUQuerySetCopyQueryRequest *request)=0;
	virtual void async_WUQuerysetCopyQuery(IClientWUQuerySetCopyQueryRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQuerySetDetailsRequest * createWUQuerysetDetailsRequest()=0;
	virtual IClientWUQuerySetDetailsResponse * WUQuerysetDetails(IClientWUQuerySetDetailsRequest *request)=0;
	virtual void async_WUQuerysetDetails(IClientWUQuerySetDetailsRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQuerysetExportRequest * createWUQuerysetExportRequest()=0;
	virtual IClientWUQuerysetExportResponse * WUQuerysetExport(IClientWUQuerysetExportRequest *request)=0;
	virtual void async_WUQuerysetExport(IClientWUQuerysetExportRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQuerysetImportRequest * createWUQuerysetImportRequest()=0;
	virtual IClientWUQuerysetImportResponse * WUQuerysetImport(IClientWUQuerysetImportRequest *request)=0;
	virtual void async_WUQuerysetImport(IClientWUQuerysetImportRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQuerySetQueryActionRequest * createWUQuerysetQueryActionRequest()=0;
	virtual IClientWUQuerySetQueryActionResponse * WUQuerysetQueryAction(IClientWUQuerySetQueryActionRequest *request)=0;
	virtual void async_WUQuerysetQueryAction(IClientWUQuerySetQueryActionRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUQuerysetsRequest * createWUQuerysetsRequest()=0;
	virtual IClientWUQuerysetsResponse * WUQuerysets(IClientWUQuerysetsRequest *request)=0;
	virtual void async_WUQuerysets(IClientWUQuerysetsRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWURecreateQueryRequest * createWURecreateQueryRequest()=0;
	virtual IClientWURecreateQueryResponse * WURecreateQuery(IClientWURecreateQueryRequest *request)=0;
	virtual void async_WURecreateQuery(IClientWURecreateQueryRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUResubmitRequest * createWUResubmitRequest()=0;
	virtual IClientWUResubmitResponse * WUResubmit(IClientWUResubmitRequest *request)=0;
	virtual void async_WUResubmit(IClientWUResubmitRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUResultRequest * createWUResultRequest()=0;
	virtual IClientWUResultResponse * WUResult(IClientWUResultRequest *request)=0;
	virtual void async_WUResult(IClientWUResultRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUResultBinRequest * createWUResultBinRequest()=0;
	virtual IClientWUResultBinResponse * WUResultBin(IClientWUResultBinRequest *request)=0;
	virtual void async_WUResultBin(IClientWUResultBinRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUResultSummaryRequest * createWUResultSummaryRequest()=0;
	virtual IClientWUResultSummaryResponse * WUResultSummary(IClientWUResultSummaryRequest *request)=0;
	virtual void async_WUResultSummary(IClientWUResultSummaryRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUResultViewRequest * createWUResultViewRequest()=0;
	virtual IClientWUResultViewResponse * WUResultView(IClientWUResultViewRequest *request)=0;
	virtual void async_WUResultView(IClientWUResultViewRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWURunRequest * createWURunRequest()=0;
	virtual IClientWURunResponse * WURun(IClientWURunRequest *request)=0;
	virtual void async_WURun(IClientWURunRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUScheduleRequest * createWUScheduleRequest()=0;
	virtual IClientWUScheduleResponse * WUSchedule(IClientWUScheduleRequest *request)=0;
	virtual void async_WUSchedule(IClientWUScheduleRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUShowScheduledRequest * createWUShowScheduledRequest()=0;
	virtual IClientWUShowScheduledResponse * WUShowScheduled(IClientWUShowScheduledRequest *request)=0;
	virtual void async_WUShowScheduled(IClientWUShowScheduledRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUSubmitRequest * createWUSubmitRequest()=0;
	virtual IClientWUSubmitResponse * WUSubmit(IClientWUSubmitRequest *request)=0;
	virtual void async_WUSubmit(IClientWUSubmitRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUSyntaxCheckRequest * createWUSyntaxCheckECLRequest()=0;
	virtual IClientWUSyntaxCheckResponse * WUSyntaxCheckECL(IClientWUSyntaxCheckRequest *request)=0;
	virtual void async_WUSyntaxCheckECL(IClientWUSyntaxCheckRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUUpdateRequest * createWUUpdateRequest()=0;
	virtual IClientWUUpdateResponse * WUUpdate(IClientWUUpdateRequest *request)=0;
	virtual void async_WUUpdate(IClientWUUpdateRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUUpdateQueryEntryRequest * createWUUpdateQueryEntryRequest()=0;
	virtual IClientWUUpdateQueryEntryResponse * WUUpdateQueryEntry(IClientWUUpdateQueryEntryRequest *request)=0;
	virtual void async_WUUpdateQueryEntry(IClientWUUpdateQueryEntryRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUWaitRequest * createWUWaitCompiledRequest()=0;
	virtual IClientWUWaitResponse * WUWaitCompiled(IClientWUWaitRequest *request)=0;
	virtual void async_WUWaitCompiled(IClientWUWaitRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;

	virtual IClientWUWaitRequest * createWUWaitCompleteRequest()=0;
	virtual IClientWUWaitResponse * WUWaitComplete(IClientWUWaitRequest *request)=0;
	virtual void async_WUWaitComplete(IClientWUWaitRequest *request, IClientWsWorkunitsEvents *events,IInterface* state=0)=0;


	virtual IClientGVCAjaxGraphResponse *GVCAjaxGraphFn(const char * Name_, const char * GraphName_, int SubGraphId_, bool SubGraphOnly_)=0;

	virtual IClientWsWorkunitsPingResponse *PingFn()=0;

	virtual IClientWUAbortResponse *WUAbortFn(StringArray &Wuids_, int BlockTillFinishTimer_)=0;

	virtual IClientWUActionResponse *WUActionFn(StringArray &Wuids_, const char * ActionType_, CECLWUActions WUActionType_, const char * Cluster_, const char * Owner_, const char * State_, const char * StartDate_, const char * EndDate_, const char * ECL_, const char * Jobname_, const char * Test_, const char * CurrentPage_, const char * PageSize_, const char * Sortby_, bool Descending_, const char * EventServer_, const char * EventName_, const char * PageFrom_, int BlockTillFinishTimer_)=0;

	virtual IClientWUAddLocalFileToWorkunitResponse *WUAddLocalFileToWorkunitFn(const char * Wuid_, const char * Name_, const char * Val_, const char * DefVal_, int Type_, int Length_)=0;

	virtual IClientWUDebugResponse *WUCDebugFn(const char * Wuid_, const char * Command_)=0;

	virtual IClientWUCheckFeaturesResponse *WUCheckFeaturesFn()=0;

	virtual IClientWUClusterJobQueueLOGResponse *WUClusterJobQueueLOGFn(const char * Cluster_, const char * StartDate_, const char * EndDate_)=0;

	virtual IClientWUClusterJobQueueXLSResponse *WUClusterJobQueueXLSFn(const char * Cluster_, const char * StartDate_, const char * EndDate_, const char * ShowType_)=0;

	virtual IClientWUClusterJobSummaryXLSResponse *WUClusterJobSummaryXLSFn(const char * Cluster_, const char * StartDate_, const char * EndDate_, bool ShowAll_, const char * BusinessStartTime_, const char * BusinessEndTime_)=0;

	virtual IClientWUClusterJobXLSResponse *WUClusterJobXLSFn(const char * Cluster_, const char * StartDate_, const char * EndDate_, bool ShowAll_, const char * BusinessStartTime_, const char * BusinessEndTime_)=0;

	virtual IClientWUCompileECLResponse *WUCompileECLFn(const char * ECL_, const char * ModuleName_, const char * AttributeName_, const char * Queue_, const char * Cluster_, const char * Snapshot_, bool IncludeDependencies_, bool IncludeComplexity_, int TimeToWait_)=0;

	virtual IClientWUCopyLogicalFilesResponse *WUCopyLogicalFilesFn(const char * Wuid_, const char * Cluster_, bool CopyLocal_)=0;

	virtual IClientWUCopyQuerySetResponse *WUCopyQuerySetFn(const char * Source_, const char * Target_, bool ActiveOnly_, bool CloneActiveState_, bool AllowForeignFiles_, const char * DfsServer_, bool CopyFiles_, bool OverwriteDfs_, const char * SourceProcess_, bool UpdateSuperFiles_, bool UpdateCloneFrom_, bool AppendCluster_, bool IncludeFileErrors_)=0;

	virtual IClientWUCreateResponse *WUCreateFn()=0;

	virtual IClientWUUpdateResponse *WUCreateAndUpdateFn(const char * Wuid_, int State_, int StateOrig_, const char * Jobname_, const char * JobnameOrig_, const char * QueryText_, int Action_, const char * Description_, const char * DescriptionOrig_, bool AddDrilldownFields_, int ResultLimit_, bool Protected_, bool ProtectedOrig_, int PriorityClass_, int PriorityLevel_, const char * Scope_, const char * ScopeOrig_, const char * ClusterSelection_, const char * ClusterOrig_, const char * XmlParams_, const char * ThorSlaveIP_, const char * QueryMainDefinition_, IArrayOf<IConstDebugValue> &DebugValues_, IArrayOf<IConstApplicationValue> &ApplicationValues_)=0;

	virtual IClientWUCreateZAPInfoResponse *WUCreateZAPInfoFn(const char * Wuid_, const char * ESPIPAddress_, const char * ThorIPAddress_, const char * BuildVersion_, const char * ProblemDescription_, const char * WhatChanged_, const char * WhereSlow_, const char * Password_, const char * ZAPFileName_, const char * IncludeThorSlaveLog_, const char * ZAPPassword_, bool SendEmail_, bool AttachZAPReportToEmail_, const char * EmailFrom_, const char * EmailSubject_, const char * EmailBody_)=0;

	virtual IClientWUDeleteResponse *WUDeleteFn(StringArray &Wuids_, int BlockTillFinishTimer_)=0;

	virtual IClientWUDeployWorkunitResponse *WUDeployWorkunitFn(const char * Cluster_, const char * Name_, int Wait_, const char * ObjType_, const char * FileName_, const MemoryBuffer & Object_, int ResultLimit_, const char * QueryMainDefinition_, const char * Snapshot_, IArrayOf<IConstNamedValue> &DebugValues_)=0;

	virtual IClientWUDetailsResponse *WUDetailsFn(const char * WUID_, IConstWUScopeFilter &ScopeFilter_, IConstWUNestedFilter &NestedFilter_, IConstWUPropertiesToReturn &PropertiesToReturn_, const char * Filter_, IConstWUScopeOptions &ScopeOptions_, IConstWUPropertyOptions &PropertyOptions_)=0;

	virtual IClientWUDetailsMetaResponse *WUDetailsMetaFn()=0;

	virtual IClientWUEclDefinitionActionResponse *WUEclDefinitionActionFn(StringArray &EclDefinitions_, CEclDefinitionActions ActionType_, const char * Target_, const char * RemoteDali_, const char * SourceProcess_, const char * Priority_, const char * Comment_, const char * MemoryLimit_, bool DeletePrevious_, bool SuspendPrevious_, bool NoActivate_, bool NoReload_, bool DontCopyFiles_, bool AllowForeign_, bool UpdateDfs_, bool UpdateSuperfiles_, bool UpdateCloneFrom_, bool DontAppendCluster_, int MsToWait_, int TimeLimit_, int WarnTimeLimit_)=0;

	virtual IClientWUExportResponse *WUExportFn(const char * Cluster_, const char * Owner_, const char * State_, const char * StartDate_, const char * EndDate_, const char * ECL_, const char * Jobname_)=0;

	virtual IClientWULogFileResponse *WUFileFn(const char * Name_, const char * Wuid_, const char * Type_, int Option_, const char * SlaveIP_, const char * IPAddress_, const char * Description_, const char * QuerySet_, const char * Query_, const char * Process_, const char * ClusterGroup_, const char * LogDate_, int SlaveNumber_, __int64 SizeLimit_, const char * PlainText_)=0;

	virtual IClientWUFullResultResponse *WUFullResultFn(const char * Wuid_, bool NoRootTag_, CWUExceptionSeverity ExceptionSeverity_)=0;

	virtual IClientWUGVCGraphInfoResponse *WUGVCGraphInfoFn(const char * Wuid_, const char * Name_, const char * GID_, int BatchWU_, int SubgraphId_)=0;

	virtual IClientWUGetArchiveFileResponse *WUGetArchiveFileFn(const char * WUID_, const char * ModuleName_, const char * FileName_, const char * Path_)=0;

	virtual IClientWUGetDependancyTreesResponse *WUGetDependancyTreesFn(const char * Cluster_, const char * Queue_, const char * Snapshot_, const char * Items_, const char * TimeoutMilliSec_)=0;

	virtual IClientWUGetGraphResponse *WUGetGraphFn(const char * Wuid_, const char * GraphName_, const char * SubGraphId_)=0;

	virtual IClientWUGetGraphNameAndTypesResponse *WUGetGraphNameAndTypesFn(const char * Wuid_, const char * Type_)=0;

	virtual IClientWUGetNumFileToCopyResponse *WUGetNumFileToCopyFn(const char * ClusterName_, __int64 PageSize_, __int64 PageStartFrom_, const char * Sortby_, bool Descending_, __int64 CacheHint_)=0;

	virtual IClientWUGetStatsResponse *WUGetStatsFn(const char * WUID_, const char * CreatorType_, const char * Creator_, const char * ScopeType_, const char * Scope_, const char * Kind_, const char * Measure_, unsigned int MinScopeDepth_, unsigned int MaxScopeDepth_, bool IncludeGraphs_, bool CreateDescriptions_, __int64 MinValue_, __int64 MaxValue_, const char * Filter_)=0;

	virtual IClientWUGetThorJobListResponse *WUGetThorJobListFn(const char * Cluster_, const char * StartDate_, const char * EndDate_, unsigned int MaxJobsToReturn_)=0;

	virtual IClientWUGetThorJobQueueResponse *WUGetThorJobQueueFn(const char * Cluster_, const char * StartDate_, const char * EndDate_, unsigned int MaxJobQueueItemsToReturn_)=0;

	virtual IClientWUGetZAPInfoResponse *WUGetZAPInfoFn(const char * WUID_)=0;

	virtual IClientWUGraphInfoResponse *WUGraphInfoFn(const char * Wuid_, const char * Name_, const char * GID_, int BatchWU_)=0;

	virtual IClientWUGraphTimingResponse *WUGraphTimingFn(const char * Wuid_)=0;

	virtual IClientWUInfoResponse *WUInfoFn(const char * Wuid_, bool TruncateEclTo64k_, const char * Type_, bool IncludeExceptions_, bool IncludeGraphs_, bool IncludeSourceFiles_, bool IncludeResults_, bool IncludeResultsViewNames_, bool IncludeVariables_, bool IncludeTimers_, bool IncludeDebugValues_, bool IncludeApplicationValues_, bool IncludeWorkflows_, bool IncludeXmlSchemas_, bool IncludeResourceURLs_, bool IncludeECL_, bool IncludeHelpers_, bool IncludeAllowedClusters_, bool IncludeTotalClusterTime_, bool SuppressResultSchemas_, const char * ThorSlaveIP_)=0;

	virtual IClientWUInfoResponse *WUInfoDetailsFn(const char * Wuid_, bool TruncateEclTo64k_, const char * Type_, bool IncludeExceptions_, bool IncludeGraphs_, bool IncludeSourceFiles_, bool IncludeResults_, bool IncludeResultsViewNames_, bool IncludeVariables_, bool IncludeTimers_, bool IncludeDebugValues_, bool IncludeApplicationValues_, bool IncludeWorkflows_, bool IncludeXmlSchemas_, bool IncludeResourceURLs_, bool IncludeECL_, bool IncludeHelpers_, bool IncludeAllowedClusters_, bool IncludeTotalClusterTime_, bool SuppressResultSchemas_, const char * ThorSlaveIP_)=0;

	virtual IClientWUJobListResponse *WUJobListFn(const char * Cluster_, const char * Process_, const char * StartDate_, const char * EndDate_, bool ShowAll_, int BusinessStartHour_, int BusinessEndHour_)=0;

	virtual IClientWULightWeightQueryResponse *WULightWeightQueryFn(const char * Wuid_, const char * Type_, const char * Cluster_, const char * Owner_, const char * JobName_, const char * StartDate_, const char * EndDate_, const char * BeforeWU_, const char * AfterWU_, const char * State_, IArrayOf<IConstApplicationValue> &ApplicationValues_, __int64 PageStartFrom_, unsigned int PageSize_, const char * SortBy_, bool Descending_, __int64 CacheHint_)=0;

	virtual IClientWUListArchiveFilesResponse *WUListArchiveFilesFn(const char * WUID_)=0;

	virtual IClientWUListLocalFileRequiredResponse *WUListLocalFileRequiredFn(const char * Wuid_)=0;

	virtual IClientWUListQueriesResponse *WUListQueriesFn(const char * QuerySetName_, const char * ClusterName_, const char * LibraryName_, __int64 MemoryLimitLow_, __int64 MemoryLimitHigh_, unsigned int TimeLimitLow_, unsigned int TimeLimitHigh_, unsigned int WarnTimeLimitLow_, unsigned int WarnTimeLimitHigh_, unsigned int PriorityLow_, unsigned int PriorityHigh_, bool Activated_, bool SuspendedByUser_, const char * WUID_, const char * QueryID_, const char * QueryName_, const char * PublishedBy_, unsigned int PageSize_, unsigned int PageStartFrom_, const char * Sortby_, bool Descending_, __int64 CacheHint_, const char * FileName_, bool CheckAllNodes_)=0;

	virtual IClientWUListQueriesUsingFileResponse *WUListQueriesUsingFileFn(const char * Target_, const char * Process_, const char * FileName_)=0;

	virtual IClientWUMultiQuerySetDetailsResponse *WUMultiQuerysetDetailsFn(const char * ClusterName_, const char * QuerySetName_, const char * Filter_, CWUQuerySetFilterType FilterType_, bool CheckAllNodes_)=0;

	virtual IClientWUProcessGraphResponse *WUProcessGraphFn(const char * Wuid_, const char * Name_)=0;

	virtual IClientWUProtectResponse *WUProtectFn(StringArray &Wuids_, bool Protect_)=0;

	virtual IClientWUPublishWorkunitResponse *WUPublishWorkunitFn(const char * Wuid_, const char * Cluster_, const char * JobName_, int Activate_, bool NotifyCluster_, int Wait_, bool NoReload_, bool UpdateWorkUnitName_, const char * memoryLimit_, unsigned int TimeLimit_, unsigned int WarnTimeLimit_, const char * Priority_, const char * RemoteDali_, const char * Comment_, bool DontCopyFiles_, const char * SourceProcess_, bool AllowForeignFiles_, bool UpdateDfs_, bool UpdateSuperFiles_, bool UpdateCloneFrom_, bool AppendCluster_, bool IncludeFileErrors_)=0;

	virtual IClientWUPushEventResponse *WUPushEventFn(const char * EventName_, const char * EventText_)=0;

	virtual IClientWUQueryResponse *WUQueryFn(const char * Wuid_, const char * Type_, const char * Cluster_, const char * RoxieCluster_, const char * Owner_, const char * State_, const char * StartDate_, const char * EndDate_, const char * ECL_, const char * Jobname_, const char * LogicalFile_, const char * LogicalFileSearchType_, const char * ApplicationName_, const char * ApplicationKey_, const char * ApplicationData_, IArrayOf<IConstApplicationValue> &ApplicationValues_, const char * BeforeWU_, const char * AfterWU_, const char * After_, const char * Before_, int Count_, __int64 PageSize_, __int64 PageStartFrom_, __int64 PageEndAt_, int LastNDays_, const char * Sortby_, bool Descending_, __int64 CacheHint_)=0;

	virtual IClientWUQueryConfigResponse *WUQueryConfigFn(const char * Target_, const char * QueryId_, int Wait_, bool NoReload_, const char * memoryLimit_, unsigned int TimeLimit_, unsigned int WarnTimeLimit_, const char * Priority_, const char * Comment_)=0;

	virtual IClientWUQueryDetailsResponse *WUQueryDetailsFn(const char * QueryId_, const char * QuerySet_, bool IncludeStateOnClusters_, bool IncludeSuperFiles_, bool IncludeWsEclAddresses_, bool CheckAllNodes_)=0;

	virtual IClientWUQueryFilesResponse *WUQueryFilesFn(const char * Target_, const char * QueryId_)=0;

	virtual IClientWUQueryGetGraphResponse *WUQueryGetGraphFn(const char * Target_, const char * QueryId_, const char * GraphName_, const char * SubGraphId_)=0;

	virtual IClientWUQueryGetSummaryStatsResponse *WUQueryGetSummaryStatsFn(const char * Target_, const char * QueryId_, const char * FromTime_, const char * ToTime_)=0;

	virtual IClientWUQuerySetAliasActionResponse *WUQuerysetAliasActionFn(CQuerySetAliasActionTypes Action_, const char * QuerySetName_, IArrayOf<IConstQuerySetAliasActionItem> &Aliases_)=0;

	virtual IClientWUQuerySetCopyQueryResponse *WUQuerysetCopyQueryFn(const char * Source_, const char * Target_, const char * Cluster_, const char * DaliServer_, int Activate_, bool Overwrite_, bool DontCopyFiles_, int Wait_, bool NoReload_, const char * memoryLimit_, unsigned int TimeLimit_, unsigned int WarnTimeLimit_, const char * priority_, const char * Comment_, const char * SourceProcess_, const char * DestName_, bool AllowForeignFiles_, bool UpdateSuperFiles_, bool UpdateCloneFrom_, bool AppendCluster_, bool IncludeFileErrors_)=0;

	virtual IClientWUQuerySetDetailsResponse *WUQuerysetDetailsFn(const char * QuerySetName_, const char * Filter_, const char * ClusterName_, CWUQuerySetFilterType FilterType_, bool CheckAllNodes_)=0;

	virtual IClientWUQuerysetExportResponse *WUQuerysetExportFn(const char * Target_, bool Compress_, bool ActiveOnly_, bool Protect_)=0;

	virtual IClientWUQuerysetImportResponse *WUQuerysetImportFn(const char * Target_, const char * QueryMask_, bool Replace_, bool ActiveOnly_, CQuerysetImportActivation Activation_, bool Compressed_, const MemoryBuffer & Data_, bool AllowForeignFiles_, const char * DfsServer_, bool CopyFiles_, bool OverwriteDfs_, const char * SourceProcess_, bool UpdateSuperFiles_, bool UpdateCloneFrom_, bool AppendCluster_, bool IncludeFileErrors_)=0;

	virtual IClientWUQuerySetQueryActionResponse *WUQuerysetQueryActionFn(CQuerySetQueryActionTypes Action_, const char * QuerySetName_, IArrayOf<IConstQuerySetQueryActionItem> &Queries_)=0;

	virtual IClientWUQuerysetsResponse *WUQuerysetsFn(bool test_)=0;

	virtual IClientWURecreateQueryResponse *WURecreateQueryFn(const char * Target_, const char * QueryId_, IArrayOf<IConstNamedValue> &DebugValues_, const char * DestTarget_, bool Republish_, CWUQueryActivationMode Activate_, bool NoReload_, const char * MemoryLimit_, unsigned int TimeLimit_, unsigned int WarnTimeLimit_, const char * Priority_, const char * Comment_, const char * RemoteDali_, bool DontCopyFiles_, const char * SourceProcess_, bool AllowForeignFiles_, bool UpdateDfs_, bool UpdateSuperFiles_, bool UpdateCloneFrom_, bool AppendCluster_, bool IncludeFileErrors_, int Wait_)=0;

	virtual IClientWUResubmitResponse *WUResubmitFn(StringArray &Wuids_, bool Recompile_, int BlockTillFinishTimer_, bool ResetWorkflow_, bool CloneWorkunit_)=0;

	virtual IClientWUResultResponse *WUResultFn(const char * Wuid_, int Sequence_, const char * ResultName_, const char * LogicalName_, const char * Cluster_, bool SuppressXmlSchema_, bool BypassCachedResult_, IArrayOf<IConstNamedValue> &FilterBy_, __int64 Start_, int Count_)=0;

	virtual IClientWUResultBinResponse *WUResultBinFn(const char * LogicalName_, const char * Wuid_, const char * ResultName_, int Sequence_, const char * Format_, const char * Cluster_, IArrayOf<IConstNamedValue> &FilterBy_, __int64 Start_, int Count_)=0;

	virtual IClientWUResultSummaryResponse *WUResultSummaryFn(const char * Wuid_, int Sequence_)=0;

	virtual IClientWUResultViewResponse *WUResultViewFn(const char * Wuid_, const char * ViewName_, int Sequence_, const char * ResultName_)=0;

	virtual IClientWURunResponse *WURunFn(const char * QuerySet_, const char * Query_, const char * Wuid_, bool CloneWorkunit_, const char * Cluster_, int Wait_, const char * Input_, bool NoRootTag_, IArrayOf<IConstNamedValue> &DebugValues_, IArrayOf<IConstNamedValue> &Variables_, IArrayOf<IConstApplicationValue> &ApplicationValues_, CWUExceptionSeverity ExceptionSeverity_)=0;

	virtual IClientWUScheduleResponse *WUScheduleFn(const char * Wuid_, const char * Cluster_, const char * Queue_, const char * Snapshot_, const char * When_, int MaxRunTime_)=0;

	virtual IClientWUShowScheduledResponse *WUShowScheduledFn(const char * Cluster_, const char * EventName_, const char * PushEventName_, const char * PushEventText_, const char * State_, const char * JobName_)=0;

	virtual IClientWUSubmitResponse *WUSubmitFn(const char * Wuid_, const char * Cluster_, const char * Queue_, const char * Snapshot_, int MaxRunTime_, int BlockTillFinishTimer_, bool SyntaxCheck_, bool NotifyCluster_)=0;

	virtual IClientWUSyntaxCheckResponse *WUSyntaxCheckECLFn(const char * ECL_, const char * ModuleName_, const char * AttributeName_, const char * Queue_, const char * Cluster_, const char * Snapshot_, int TimeToWait_, IArrayOf<IConstDebugValue> &DebugValues_)=0;

	virtual IClientWUUpdateResponse *WUUpdateFn(const char * Wuid_, int State_, int StateOrig_, const char * Jobname_, const char * JobnameOrig_, const char * QueryText_, int Action_, const char * Description_, const char * DescriptionOrig_, bool AddDrilldownFields_, int ResultLimit_, bool Protected_, bool ProtectedOrig_, int PriorityClass_, int PriorityLevel_, const char * Scope_, const char * ScopeOrig_, const char * ClusterSelection_, const char * ClusterOrig_, const char * XmlParams_, const char * ThorSlaveIP_, const char * QueryMainDefinition_, IArrayOf<IConstDebugValue> &DebugValues_, IArrayOf<IConstApplicationValue> &ApplicationValues_)=0;

	virtual IClientWUUpdateQueryEntryResponse *WUUpdateQueryEntryFn(const char * QuerySet_, const char * QueryId_, const char * Comment_)=0;

	virtual IClientWUWaitResponse *WUWaitCompiledFn(const char * Wuid_, int Wait_, bool ReturnOnWait_)=0;

	virtual IClientWUWaitResponse *WUWaitCompleteFn(const char * Wuid_, int Wait_, bool ReturnOnWait_)=0;
};




#ifndef WSWU_API
#define WSWU_API
#endif //WSWU_API



extern "C" WSWU_API IClientWsWorkunits * createWsWorkunitsClient();


extern "C"  IEspECLException *createECLException(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLException *createClientECLException(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLSchemaItem *createECLSchemaItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLSchemaItem *createClientECLSchemaItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLResult *createECLResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLResult *createClientECLResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLTimingData *createECLTimingData(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLTimingData *createClientECLTimingData(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLGraph *createECLGraph(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLGraph *createClientECLGraph(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLGraphEx *createECLGraphEx(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLGraphEx *createClientECLGraphEx(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLSourceFile *createECLSourceFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLSourceFile *createClientECLSourceFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLTimer *createECLTimer(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLTimer *createClientECLTimer(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLHelpFile *createECLHelpFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLHelpFile *createClientECLHelpFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLQuery *createECLQuery(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLQuery *createClientECLQuery(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspQuerySummaryStats *createQuerySummaryStats(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySummaryStats *createClientQuerySummaryStats(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspDebugValue *createDebugValue(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientDebugValue *createClientDebugValue(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUActionResult *createWUActionResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUActionResult *createClientWUActionResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspApplicationValue *createApplicationValue(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientApplicationValue *createClientApplicationValue(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLWorkflow *createECLWorkflow(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLWorkflow *createClientECLWorkflow(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspThorLogInfo *createThorLogInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientThorLogInfo *createClientThorLogInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLWorkunitLW *createECLWorkunitLW(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLWorkunitLW *createClientECLWorkunitLW(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLWorkunit *createECLWorkunit(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLWorkunit *createClientECLWorkunit(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUECLAttribute *createWUECLAttribute(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUECLAttribute *createClientWUECLAttribute(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspNetworkNode *createNetworkNode(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientNetworkNode *createClientNetworkNode(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspClusterEndpoint *createClusterEndpoint(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientClusterEndpoint *createClientClusterEndpoint(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspLogicalFileUpload *createLogicalFileUpload(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientLogicalFileUpload *createClientLogicalFileUpload(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspECLJob *createECLJob(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientECLJob *createClientECLJob(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspThorQueue *createThorQueue(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientThorQueue *createClientThorQueue(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspResubmittedWU *createResubmittedWU(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientResubmittedWU *createClientResubmittedWU(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUFileOption *createWUFileOption(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUFileOption *createClientWUFileOption(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUCreateRequest *createWUCreateRequest(const char *serv=NULL);
extern "C"  IClientWUCreateRequest *createClientWUCreateRequest(const char *serv=NULL);
extern "C"  IEspWUCreateResponse *createWUCreateResponse(const char *serv=NULL);
extern "C"  IClientWUCreateResponse *createClientWUCreateResponse(const char *serv=NULL);
extern "C"  IEspWUDeployWorkunitRequest *createWUDeployWorkunitRequest(const char *serv=NULL);
extern "C"  IClientWUDeployWorkunitRequest *createClientWUDeployWorkunitRequest(const char *serv=NULL);
extern "C"  IEspWUDeployWorkunitResponse *createWUDeployWorkunitResponse(const char *serv=NULL);
extern "C"  IClientWUDeployWorkunitResponse *createClientWUDeployWorkunitResponse(const char *serv=NULL);
extern "C"  IEspWUQueryRequest *createWUQueryRequest(const char *serv=NULL);
extern "C"  IClientWUQueryRequest *createClientWUQueryRequest(const char *serv=NULL);
extern "C"  IEspWUQueryResponse *createWUQueryResponse(const char *serv=NULL);
extern "C"  IClientWUQueryResponse *createClientWUQueryResponse(const char *serv=NULL);
extern "C"  IEspWULightWeightQueryRequest *createWULightWeightQueryRequest(const char *serv=NULL);
extern "C"  IClientWULightWeightQueryRequest *createClientWULightWeightQueryRequest(const char *serv=NULL);
extern "C"  IEspWULightWeightQueryResponse *createWULightWeightQueryResponse(const char *serv=NULL);
extern "C"  IClientWULightWeightQueryResponse *createClientWULightWeightQueryResponse(const char *serv=NULL);
extern "C"  IEspWUUpdateRequest *createWUUpdateRequest(const char *serv=NULL);
extern "C"  IClientWUUpdateRequest *createClientWUUpdateRequest(const char *serv=NULL);
extern "C"  IEspWUUpdateResponse *createWUUpdateResponse(const char *serv=NULL);
extern "C"  IClientWUUpdateResponse *createClientWUUpdateResponse(const char *serv=NULL);
extern "C"  IEspWUDeleteRequest *createWUDeleteRequest(const char *serv=NULL);
extern "C"  IClientWUDeleteRequest *createClientWUDeleteRequest(const char *serv=NULL);
extern "C"  IEspWUDeleteResponse *createWUDeleteResponse(const char *serv=NULL);
extern "C"  IClientWUDeleteResponse *createClientWUDeleteResponse(const char *serv=NULL);
extern "C"  IEspWUActionRequest *createWUActionRequest(const char *serv=NULL);
extern "C"  IClientWUActionRequest *createClientWUActionRequest(const char *serv=NULL);
extern "C"  IEspWUActionResponse *createWUActionResponse(const char *serv=NULL);
extern "C"  IClientWUActionResponse *createClientWUActionResponse(const char *serv=NULL);
extern "C"  IEspWUAbortRequest *createWUAbortRequest(const char *serv=NULL);
extern "C"  IClientWUAbortRequest *createClientWUAbortRequest(const char *serv=NULL);
extern "C"  IEspWUAbortResponse *createWUAbortResponse(const char *serv=NULL);
extern "C"  IClientWUAbortResponse *createClientWUAbortResponse(const char *serv=NULL);
extern "C"  IEspWUProtectRequest *createWUProtectRequest(const char *serv=NULL);
extern "C"  IClientWUProtectRequest *createClientWUProtectRequest(const char *serv=NULL);
extern "C"  IEspWUProtectResponse *createWUProtectResponse(const char *serv=NULL);
extern "C"  IClientWUProtectResponse *createClientWUProtectResponse(const char *serv=NULL);
extern "C"  IEspWUResubmitRequest *createWUResubmitRequest(const char *serv=NULL);
extern "C"  IClientWUResubmitRequest *createClientWUResubmitRequest(const char *serv=NULL);
extern "C"  IEspWUResubmitResponse *createWUResubmitResponse(const char *serv=NULL);
extern "C"  IClientWUResubmitResponse *createClientWUResubmitResponse(const char *serv=NULL);
extern "C"  IEspWURecreateQueryRequest *createWURecreateQueryRequest(const char *serv=NULL);
extern "C"  IClientWURecreateQueryRequest *createClientWURecreateQueryRequest(const char *serv=NULL);
extern "C"  IEspWURecreateQueryResponse *createWURecreateQueryResponse(const char *serv=NULL);
extern "C"  IClientWURecreateQueryResponse *createClientWURecreateQueryResponse(const char *serv=NULL);
extern "C"  IEspWURunRequest *createWURunRequest(const char *serv=NULL);
extern "C"  IClientWURunRequest *createClientWURunRequest(const char *serv=NULL);
extern "C"  IEspWURunResponse *createWURunResponse(const char *serv=NULL);
extern "C"  IClientWURunResponse *createClientWURunResponse(const char *serv=NULL);
extern "C"  IEspWUSubmitRequest *createWUSubmitRequest(const char *serv=NULL);
extern "C"  IClientWUSubmitRequest *createClientWUSubmitRequest(const char *serv=NULL);
extern "C"  IEspWUSubmitResponse *createWUSubmitResponse(const char *serv=NULL);
extern "C"  IClientWUSubmitResponse *createClientWUSubmitResponse(const char *serv=NULL);
extern "C"  IEspWUScheduleRequest *createWUScheduleRequest(const char *serv=NULL);
extern "C"  IClientWUScheduleRequest *createClientWUScheduleRequest(const char *serv=NULL);
extern "C"  IEspWUScheduleResponse *createWUScheduleResponse(const char *serv=NULL);
extern "C"  IClientWUScheduleResponse *createClientWUScheduleResponse(const char *serv=NULL);
extern "C"  IEspWUPushEventRequest *createWUPushEventRequest(const char *serv=NULL);
extern "C"  IClientWUPushEventRequest *createClientWUPushEventRequest(const char *serv=NULL);
extern "C"  IEspWUPushEventResponse *createWUPushEventResponse(const char *serv=NULL);
extern "C"  IClientWUPushEventResponse *createClientWUPushEventResponse(const char *serv=NULL);
extern "C"  IEspWUInfoRequest *createWUInfoRequest(const char *serv=NULL);
extern "C"  IClientWUInfoRequest *createClientWUInfoRequest(const char *serv=NULL);
extern "C"  IEspWUInfoResponse *createWUInfoResponse(const char *serv=NULL);
extern "C"  IClientWUInfoResponse *createClientWUInfoResponse(const char *serv=NULL);
extern "C"  IEspWUResultSummaryRequest *createWUResultSummaryRequest(const char *serv=NULL);
extern "C"  IClientWUResultSummaryRequest *createClientWUResultSummaryRequest(const char *serv=NULL);
extern "C"  IEspWUResultSummaryResponse *createWUResultSummaryResponse(const char *serv=NULL);
extern "C"  IClientWUResultSummaryResponse *createClientWUResultSummaryResponse(const char *serv=NULL);
extern "C"  IEspWULogFileRequest *createWULogFileRequest(const char *serv=NULL);
extern "C"  IClientWULogFileRequest *createClientWULogFileRequest(const char *serv=NULL);
extern "C"  IEspWULogFileResponse *createWULogFileResponse(const char *serv=NULL);
extern "C"  IClientWULogFileResponse *createClientWULogFileResponse(const char *serv=NULL);
extern "C"  IEspWUDownloadFilesRequest *createWUDownloadFilesRequest(const char *serv=NULL);
extern "C"  IClientWUDownloadFilesRequest *createClientWUDownloadFilesRequest(const char *serv=NULL);
extern "C"  IEspWUDownloadFilesResponse *createWUDownloadFilesResponse(const char *serv=NULL);
extern "C"  IClientWUDownloadFilesResponse *createClientWUDownloadFilesResponse(const char *serv=NULL);
extern "C"  IEspWUResultBinRequest *createWUResultBinRequest(const char *serv=NULL);
extern "C"  IClientWUResultBinRequest *createClientWUResultBinRequest(const char *serv=NULL);
extern "C"  IEspWUResultBinResponse *createWUResultBinResponse(const char *serv=NULL);
extern "C"  IClientWUResultBinResponse *createClientWUResultBinResponse(const char *serv=NULL);
extern "C"  IEspWUResultRequest *createWUResultRequest(const char *serv=NULL);
extern "C"  IClientWUResultRequest *createClientWUResultRequest(const char *serv=NULL);
extern "C"  IEspWUResultResponse *createWUResultResponse(const char *serv=NULL);
extern "C"  IClientWUResultResponse *createClientWUResultResponse(const char *serv=NULL);
extern "C"  IEspWUFullResultRequest *createWUFullResultRequest(const char *serv=NULL);
extern "C"  IClientWUFullResultRequest *createClientWUFullResultRequest(const char *serv=NULL);
extern "C"  IEspWUFullResultResponse *createWUFullResultResponse(const char *serv=NULL);
extern "C"  IClientWUFullResultResponse *createClientWUFullResultResponse(const char *serv=NULL);
extern "C"  IEspWUResultViewRequest *createWUResultViewRequest(const char *serv=NULL);
extern "C"  IClientWUResultViewRequest *createClientWUResultViewRequest(const char *serv=NULL);
extern "C"  IEspWUResultViewResponse *createWUResultViewResponse(const char *serv=NULL);
extern "C"  IClientWUResultViewResponse *createClientWUResultViewResponse(const char *serv=NULL);
extern "C"  IEspWUClusterJobQueueXLSRequest *createWUClusterJobQueueXLSRequest(const char *serv=NULL);
extern "C"  IClientWUClusterJobQueueXLSRequest *createClientWUClusterJobQueueXLSRequest(const char *serv=NULL);
extern "C"  IEspWUClusterJobQueueXLSResponse *createWUClusterJobQueueXLSResponse(const char *serv=NULL);
extern "C"  IClientWUClusterJobQueueXLSResponse *createClientWUClusterJobQueueXLSResponse(const char *serv=NULL);
extern "C"  IEspWUClusterJobQueueLOGRequest *createWUClusterJobQueueLOGRequest(const char *serv=NULL);
extern "C"  IClientWUClusterJobQueueLOGRequest *createClientWUClusterJobQueueLOGRequest(const char *serv=NULL);
extern "C"  IEspWUClusterJobQueueLOGResponse *createWUClusterJobQueueLOGResponse(const char *serv=NULL);
extern "C"  IClientWUClusterJobQueueLOGResponse *createClientWUClusterJobQueueLOGResponse(const char *serv=NULL);
extern "C"  IEspWUClusterJobXLSRequest *createWUClusterJobXLSRequest(const char *serv=NULL);
extern "C"  IClientWUClusterJobXLSRequest *createClientWUClusterJobXLSRequest(const char *serv=NULL);
extern "C"  IEspWUClusterJobXLSResponse *createWUClusterJobXLSResponse(const char *serv=NULL);
extern "C"  IClientWUClusterJobXLSResponse *createClientWUClusterJobXLSResponse(const char *serv=NULL);
extern "C"  IEspWUClusterJobSummaryXLSRequest *createWUClusterJobSummaryXLSRequest(const char *serv=NULL);
extern "C"  IClientWUClusterJobSummaryXLSRequest *createClientWUClusterJobSummaryXLSRequest(const char *serv=NULL);
extern "C"  IEspWUClusterJobSummaryXLSResponse *createWUClusterJobSummaryXLSResponse(const char *serv=NULL);
extern "C"  IClientWUClusterJobSummaryXLSResponse *createClientWUClusterJobSummaryXLSResponse(const char *serv=NULL);
extern "C"  IEspWUGetThorJobQueueRequest *createWUGetThorJobQueueRequest(const char *serv=NULL);
extern "C"  IClientWUGetThorJobQueueRequest *createClientWUGetThorJobQueueRequest(const char *serv=NULL);
extern "C"  IEspWUGetThorJobQueueResponse *createWUGetThorJobQueueResponse(const char *serv=NULL);
extern "C"  IClientWUGetThorJobQueueResponse *createClientWUGetThorJobQueueResponse(const char *serv=NULL);
extern "C"  IEspWUGetThorJobListRequest *createWUGetThorJobListRequest(const char *serv=NULL);
extern "C"  IClientWUGetThorJobListRequest *createClientWUGetThorJobListRequest(const char *serv=NULL);
extern "C"  IEspWUGetThorJobListResponse *createWUGetThorJobListResponse(const char *serv=NULL);
extern "C"  IClientWUGetThorJobListResponse *createClientWUGetThorJobListResponse(const char *serv=NULL);
extern "C"  IEspGVCAjaxGraphRequest *createGVCAjaxGraphRequest(const char *serv=NULL);
extern "C"  IClientGVCAjaxGraphRequest *createClientGVCAjaxGraphRequest(const char *serv=NULL);
extern "C"  IEspGVCAjaxGraphResponse *createGVCAjaxGraphResponse(const char *serv=NULL);
extern "C"  IClientGVCAjaxGraphResponse *createClientGVCAjaxGraphResponse(const char *serv=NULL);
extern "C"  IEspWUGraphInfoRequest *createWUGraphInfoRequest(const char *serv=NULL);
extern "C"  IClientWUGraphInfoRequest *createClientWUGraphInfoRequest(const char *serv=NULL);
extern "C"  IEspWUGraphInfoResponse *createWUGraphInfoResponse(const char *serv=NULL);
extern "C"  IClientWUGraphInfoResponse *createClientWUGraphInfoResponse(const char *serv=NULL);
extern "C"  IEspWUGVCGraphInfoRequest *createWUGVCGraphInfoRequest(const char *serv=NULL);
extern "C"  IClientWUGVCGraphInfoRequest *createClientWUGVCGraphInfoRequest(const char *serv=NULL);
extern "C"  IEspWUGVCGraphInfoResponse *createWUGVCGraphInfoResponse(const char *serv=NULL);
extern "C"  IClientWUGVCGraphInfoResponse *createClientWUGVCGraphInfoResponse(const char *serv=NULL);
extern "C"  IEspWUGraphTimingRequest *createWUGraphTimingRequest(const char *serv=NULL);
extern "C"  IClientWUGraphTimingRequest *createClientWUGraphTimingRequest(const char *serv=NULL);
extern "C"  IEspWUGraphTimingResponse *createWUGraphTimingResponse(const char *serv=NULL);
extern "C"  IClientWUGraphTimingResponse *createClientWUGraphTimingResponse(const char *serv=NULL);
extern "C"  IEspWUGetGraphNameAndTypesRequest *createWUGetGraphNameAndTypesRequest(const char *serv=NULL);
extern "C"  IClientWUGetGraphNameAndTypesRequest *createClientWUGetGraphNameAndTypesRequest(const char *serv=NULL);
extern "C"  IEspWUGetGraphNameAndTypesResponse *createWUGetGraphNameAndTypesResponse(const char *serv=NULL);
extern "C"  IClientWUGetGraphNameAndTypesResponse *createClientWUGetGraphNameAndTypesResponse(const char *serv=NULL);
extern "C"  IEspWUProcessGraphRequest *createWUProcessGraphRequest(const char *serv=NULL);
extern "C"  IClientWUProcessGraphRequest *createClientWUProcessGraphRequest(const char *serv=NULL);
extern "C"  IEspWUProcessGraphResponse *createWUProcessGraphResponse(const char *serv=NULL);
extern "C"  IClientWUProcessGraphResponse *createClientWUProcessGraphResponse(const char *serv=NULL);
extern "C"  IEspWUGetGraphRequest *createWUGetGraphRequest(const char *serv=NULL);
extern "C"  IClientWUGetGraphRequest *createClientWUGetGraphRequest(const char *serv=NULL);
extern "C"  IEspWUGetGraphResponse *createWUGetGraphResponse(const char *serv=NULL);
extern "C"  IClientWUGetGraphResponse *createClientWUGetGraphResponse(const char *serv=NULL);
extern "C"  IEspWUQueryGetGraphRequest *createWUQueryGetGraphRequest(const char *serv=NULL);
extern "C"  IClientWUQueryGetGraphRequest *createClientWUQueryGetGraphRequest(const char *serv=NULL);
extern "C"  IEspWUQueryGetGraphResponse *createWUQueryGetGraphResponse(const char *serv=NULL);
extern "C"  IClientWUQueryGetGraphResponse *createClientWUQueryGetGraphResponse(const char *serv=NULL);
extern "C"  IEspWUQueryGetSummaryStatsRequest *createWUQueryGetSummaryStatsRequest(const char *serv=NULL);
extern "C"  IClientWUQueryGetSummaryStatsRequest *createClientWUQueryGetSummaryStatsRequest(const char *serv=NULL);
extern "C"  IEspWUQueryGetSummaryStatsResponse *createWUQueryGetSummaryStatsResponse(const char *serv=NULL);
extern "C"  IClientWUQueryGetSummaryStatsResponse *createClientWUQueryGetSummaryStatsResponse(const char *serv=NULL);
extern "C"  IEspWUExportRequest *createWUExportRequest(const char *serv=NULL);
extern "C"  IClientWUExportRequest *createClientWUExportRequest(const char *serv=NULL);
extern "C"  IEspWUExportResponse *createWUExportResponse(const char *serv=NULL);
extern "C"  IClientWUExportResponse *createClientWUExportResponse(const char *serv=NULL);
extern "C"  IEspWUWaitRequest *createWUWaitRequest(const char *serv=NULL);
extern "C"  IClientWUWaitRequest *createClientWUWaitRequest(const char *serv=NULL);
extern "C"  IEspWUWaitResponse *createWUWaitResponse(const char *serv=NULL);
extern "C"  IClientWUWaitResponse *createClientWUWaitResponse(const char *serv=NULL);
extern "C"  IEspWUSyntaxCheckRequest *createWUSyntaxCheckRequest(const char *serv=NULL);
extern "C"  IClientWUSyntaxCheckRequest *createClientWUSyntaxCheckRequest(const char *serv=NULL);
extern "C"  IEspWUSyntaxCheckResponse *createWUSyntaxCheckResponse(const char *serv=NULL);
extern "C"  IClientWUSyntaxCheckResponse *createClientWUSyntaxCheckResponse(const char *serv=NULL);
extern "C"  IEspWUCompileECLRequest *createWUCompileECLRequest(const char *serv=NULL);
extern "C"  IClientWUCompileECLRequest *createClientWUCompileECLRequest(const char *serv=NULL);
extern "C"  IEspWUCompileECLResponse *createWUCompileECLResponse(const char *serv=NULL);
extern "C"  IClientWUCompileECLResponse *createClientWUCompileECLResponse(const char *serv=NULL);
extern "C"  IEspWUJobListRequest *createWUJobListRequest(const char *serv=NULL);
extern "C"  IClientWUJobListRequest *createClientWUJobListRequest(const char *serv=NULL);
extern "C"  IEspWUJobListResponse *createWUJobListResponse(const char *serv=NULL);
extern "C"  IClientWUJobListResponse *createClientWUJobListResponse(const char *serv=NULL);
extern "C"  IEspWUShowScheduledRequest *createWUShowScheduledRequest(const char *serv=NULL);
extern "C"  IClientWUShowScheduledRequest *createClientWUShowScheduledRequest(const char *serv=NULL);
extern "C"  IEspScheduledWU *createScheduledWU(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientScheduledWU *createClientScheduledWU(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspServerInfo *createServerInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientServerInfo *createClientServerInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUShowScheduledResponse *createWUShowScheduledResponse(const char *serv=NULL);
extern "C"  IClientWUShowScheduledResponse *createClientWUShowScheduledResponse(const char *serv=NULL);
extern "C"  IEspWUGetDependancyTreesRequest *createWUGetDependancyTreesRequest(const char *serv=NULL);
extern "C"  IClientWUGetDependancyTreesRequest *createClientWUGetDependancyTreesRequest(const char *serv=NULL);
extern "C"  IEspWUGetDependancyTreesResponse *createWUGetDependancyTreesResponse(const char *serv=NULL);
extern "C"  IClientWUGetDependancyTreesResponse *createClientWUGetDependancyTreesResponse(const char *serv=NULL);
extern "C"  IEspWUListLocalFileRequiredRequest *createWUListLocalFileRequiredRequest(const char *serv=NULL);
extern "C"  IClientWUListLocalFileRequiredRequest *createClientWUListLocalFileRequiredRequest(const char *serv=NULL);
extern "C"  IEspWUListLocalFileRequiredResponse *createWUListLocalFileRequiredResponse(const char *serv=NULL);
extern "C"  IClientWUListLocalFileRequiredResponse *createClientWUListLocalFileRequiredResponse(const char *serv=NULL);
extern "C"  IEspWUAddLocalFileToWorkunitRequest *createWUAddLocalFileToWorkunitRequest(const char *serv=NULL);
extern "C"  IClientWUAddLocalFileToWorkunitRequest *createClientWUAddLocalFileToWorkunitRequest(const char *serv=NULL);
extern "C"  IEspWUAddLocalFileToWorkunitResponse *createWUAddLocalFileToWorkunitResponse(const char *serv=NULL);
extern "C"  IClientWUAddLocalFileToWorkunitResponse *createClientWUAddLocalFileToWorkunitResponse(const char *serv=NULL);
extern "C"  IEspWUDebugRequest *createWUDebugRequest(const char *serv=NULL);
extern "C"  IClientWUDebugRequest *createClientWUDebugRequest(const char *serv=NULL);
extern "C"  IEspWUDebugResponse *createWUDebugResponse(const char *serv=NULL);
extern "C"  IClientWUDebugResponse *createClientWUDebugResponse(const char *serv=NULL);
extern "C"  IEspWUCopyLogicalFilesRequest *createWUCopyLogicalFilesRequest(const char *serv=NULL);
extern "C"  IClientWUCopyLogicalFilesRequest *createClientWUCopyLogicalFilesRequest(const char *serv=NULL);
extern "C"  IEspWULogicalFileCopyInfo *createWULogicalFileCopyInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWULogicalFileCopyInfo *createClientWULogicalFileCopyInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUCopyLogicalClusterFileSections *createWUCopyLogicalClusterFileSections(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUCopyLogicalClusterFileSections *createClientWUCopyLogicalClusterFileSections(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUCopyLogicalFilesResponse *createWUCopyLogicalFilesResponse(const char *serv=NULL);
extern "C"  IClientWUCopyLogicalFilesResponse *createClientWUCopyLogicalFilesResponse(const char *serv=NULL);
extern "C"  IEspWUPublishWorkunitRequest *createWUPublishWorkunitRequest(const char *serv=NULL);
extern "C"  IClientWUPublishWorkunitRequest *createClientWUPublishWorkunitRequest(const char *serv=NULL);
extern "C"  IEspWUPublishWorkunitResponse *createWUPublishWorkunitResponse(const char *serv=NULL);
extern "C"  IClientWUPublishWorkunitResponse *createClientWUPublishWorkunitResponse(const char *serv=NULL);
extern "C"  IEspWUQueryConfigRequest *createWUQueryConfigRequest(const char *serv=NULL);
extern "C"  IClientWUQueryConfigRequest *createClientWUQueryConfigRequest(const char *serv=NULL);
extern "C"  IEspWUQueryConfigResult *createWUQueryConfigResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUQueryConfigResult *createClientWUQueryConfigResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQueryConfigResponse *createWUQueryConfigResponse(const char *serv=NULL);
extern "C"  IClientWUQueryConfigResponse *createClientWUQueryConfigResponse(const char *serv=NULL);
extern "C"  IEspQuerySet *createQuerySet(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySet *createClientQuerySet(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQuerysetsRequest *createWUQuerysetsRequest(const char *serv=NULL);
extern "C"  IClientWUQuerysetsRequest *createClientWUQuerysetsRequest(const char *serv=NULL);
extern "C"  IEspWUQuerysetsResponse *createWUQuerysetsResponse(const char *serv=NULL);
extern "C"  IClientWUQuerysetsResponse *createClientWUQuerysetsResponse(const char *serv=NULL);
extern "C"  IEspClusterQueryState *createClusterQueryState(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientClusterQueryState *createClientClusterQueryState(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspQuerySetQuery *createQuerySetQuery(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySetQuery *createClientQuerySetQuery(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspQuerySetAlias *createQuerySetAlias(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySetAlias *createClientQuerySetAlias(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQuerySetDetailsRequest *createWUQuerySetDetailsRequest(const char *serv=NULL);
extern "C"  IClientWUQuerySetDetailsRequest *createClientWUQuerySetDetailsRequest(const char *serv=NULL);
extern "C"  IEspWUQuerySetDetailsResponse *createWUQuerySetDetailsResponse(const char *serv=NULL);
extern "C"  IClientWUQuerySetDetailsResponse *createClientWUQuerySetDetailsResponse(const char *serv=NULL);
extern "C"  IEspWUListQueriesRequest *createWUListQueriesRequest(const char *serv=NULL);
extern "C"  IClientWUListQueriesRequest *createClientWUListQueriesRequest(const char *serv=NULL);
extern "C"  IEspWUListQueriesResponse *createWUListQueriesResponse(const char *serv=NULL);
extern "C"  IClientWUListQueriesResponse *createClientWUListQueriesResponse(const char *serv=NULL);
extern "C"  IEspWUListQueriesUsingFileRequest *createWUListQueriesUsingFileRequest(const char *serv=NULL);
extern "C"  IClientWUListQueriesUsingFileRequest *createClientWUListQueriesUsingFileRequest(const char *serv=NULL);
extern "C"  IEspQueryUsingFile *createQueryUsingFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQueryUsingFile *createClientQueryUsingFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspTargetQueriesUsingFile *createTargetQueriesUsingFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientTargetQueriesUsingFile *createClientTargetQueriesUsingFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUListQueriesUsingFileResponse *createWUListQueriesUsingFileResponse(const char *serv=NULL);
extern "C"  IClientWUListQueriesUsingFileResponse *createClientWUListQueriesUsingFileResponse(const char *serv=NULL);
extern "C"  IEspWUQueryFilesRequest *createWUQueryFilesRequest(const char *serv=NULL);
extern "C"  IClientWUQueryFilesRequest *createClientWUQueryFilesRequest(const char *serv=NULL);
extern "C"  IEspFileUsedByQuery *createFileUsedByQuery(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientFileUsedByQuery *createClientFileUsedByQuery(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQueryFilesResponse *createWUQueryFilesResponse(const char *serv=NULL);
extern "C"  IClientWUQueryFilesResponse *createClientWUQueryFilesResponse(const char *serv=NULL);
extern "C"  IEspWUQueryDetailsRequest *createWUQueryDetailsRequest(const char *serv=NULL);
extern "C"  IClientWUQueryDetailsRequest *createClientWUQueryDetailsRequest(const char *serv=NULL);
extern "C"  IEspQuerySuperFile *createQuerySuperFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySuperFile *createClientQuerySuperFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQueryDetailsResponse *createWUQueryDetailsResponse(const char *serv=NULL);
extern "C"  IClientWUQueryDetailsResponse *createClientWUQueryDetailsResponse(const char *serv=NULL);
extern "C"  IEspWUMultiQuerySetDetailsRequest *createWUMultiQuerySetDetailsRequest(const char *serv=NULL);
extern "C"  IClientWUMultiQuerySetDetailsRequest *createClientWUMultiQuerySetDetailsRequest(const char *serv=NULL);
extern "C"  IEspWUQuerySetDetail *createWUQuerySetDetail(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUQuerySetDetail *createClientWUQuerySetDetail(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUMultiQuerySetDetailsResponse *createWUMultiQuerySetDetailsResponse(const char *serv=NULL);
extern "C"  IClientWUMultiQuerySetDetailsResponse *createClientWUMultiQuerySetDetailsResponse(const char *serv=NULL);
extern "C"  IEspWUQuerysetExportRequest *createWUQuerysetExportRequest(const char *serv=NULL);
extern "C"  IClientWUQuerysetExportRequest *createClientWUQuerysetExportRequest(const char *serv=NULL);
extern "C"  IEspWUQuerysetExportResponse *createWUQuerysetExportResponse(const char *serv=NULL);
extern "C"  IClientWUQuerysetExportResponse *createClientWUQuerysetExportResponse(const char *serv=NULL);
extern "C"  IEspWUQuerysetImportRequest *createWUQuerysetImportRequest(const char *serv=NULL);
extern "C"  IClientWUQuerysetImportRequest *createClientWUQuerysetImportRequest(const char *serv=NULL);
extern "C"  IEspWUQuerysetImportResponse *createWUQuerysetImportResponse(const char *serv=NULL);
extern "C"  IClientWUQuerysetImportResponse *createClientWUQuerysetImportResponse(const char *serv=NULL);
extern "C"  IEspWUUpdateQueryEntryRequest *createWUUpdateQueryEntryRequest(const char *serv=NULL);
extern "C"  IClientWUUpdateQueryEntryRequest *createClientWUUpdateQueryEntryRequest(const char *serv=NULL);
extern "C"  IEspWUUpdateQueryEntryResponse *createWUUpdateQueryEntryResponse(const char *serv=NULL);
extern "C"  IClientWUUpdateQueryEntryResponse *createClientWUUpdateQueryEntryResponse(const char *serv=NULL);
extern "C"  IEspQuerySetQueryClientState *createQuerySetQueryClientState(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySetQueryClientState *createClientQuerySetQueryClientState(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspQuerySetQueryActionItem *createQuerySetQueryActionItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySetQueryActionItem *createClientQuerySetQueryActionItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQuerySetQueryActionRequest *createWUQuerySetQueryActionRequest(const char *serv=NULL);
extern "C"  IClientWUQuerySetQueryActionRequest *createClientWUQuerySetQueryActionRequest(const char *serv=NULL);
extern "C"  IEspQuerySetQueryActionResult *createQuerySetQueryActionResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySetQueryActionResult *createClientQuerySetQueryActionResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQuerySetQueryActionResponse *createWUQuerySetQueryActionResponse(const char *serv=NULL);
extern "C"  IClientWUQuerySetQueryActionResponse *createClientWUQuerySetQueryActionResponse(const char *serv=NULL);
extern "C"  IEspQuerySetAliasActionItem *createQuerySetAliasActionItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySetAliasActionItem *createClientQuerySetAliasActionItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQuerySetAliasActionRequest *createWUQuerySetAliasActionRequest(const char *serv=NULL);
extern "C"  IClientWUQuerySetAliasActionRequest *createClientWUQuerySetAliasActionRequest(const char *serv=NULL);
extern "C"  IEspQuerySetAliasActionResult *createQuerySetAliasActionResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientQuerySetAliasActionResult *createClientQuerySetAliasActionResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUQuerySetAliasActionResponse *createWUQuerySetAliasActionResponse(const char *serv=NULL);
extern "C"  IClientWUQuerySetAliasActionResponse *createClientWUQuerySetAliasActionResponse(const char *serv=NULL);
extern "C"  IEspWUQuerySetCopyQueryRequest *createWUQuerySetCopyQueryRequest(const char *serv=NULL);
extern "C"  IClientWUQuerySetCopyQueryRequest *createClientWUQuerySetCopyQueryRequest(const char *serv=NULL);
extern "C"  IEspWUQuerySetCopyQueryResponse *createWUQuerySetCopyQueryResponse(const char *serv=NULL);
extern "C"  IClientWUQuerySetCopyQueryResponse *createClientWUQuerySetCopyQueryResponse(const char *serv=NULL);
extern "C"  IEspWUCopyQuerySetRequest *createWUCopyQuerySetRequest(const char *serv=NULL);
extern "C"  IClientWUCopyQuerySetRequest *createClientWUCopyQuerySetRequest(const char *serv=NULL);
extern "C"  IEspWUCopyQuerySetResponse *createWUCopyQuerySetResponse(const char *serv=NULL);
extern "C"  IClientWUCopyQuerySetResponse *createClientWUCopyQuerySetResponse(const char *serv=NULL);
extern "C"  IEspWUGetZAPInfoRequest *createWUGetZAPInfoRequest(const char *serv=NULL);
extern "C"  IClientWUGetZAPInfoRequest *createClientWUGetZAPInfoRequest(const char *serv=NULL);
extern "C"  IEspWUGetZAPInfoResponse *createWUGetZAPInfoResponse(const char *serv=NULL);
extern "C"  IClientWUGetZAPInfoResponse *createClientWUGetZAPInfoResponse(const char *serv=NULL);
extern "C"  IEspWUCreateZAPInfoRequest *createWUCreateZAPInfoRequest(const char *serv=NULL);
extern "C"  IClientWUCreateZAPInfoRequest *createClientWUCreateZAPInfoRequest(const char *serv=NULL);
extern "C"  IEspWUCreateZAPInfoResponse *createWUCreateZAPInfoResponse(const char *serv=NULL);
extern "C"  IClientWUCreateZAPInfoResponse *createClientWUCreateZAPInfoResponse(const char *serv=NULL);
extern "C"  IEspWUCheckFeaturesRequest *createWUCheckFeaturesRequest(const char *serv=NULL);
extern "C"  IClientWUCheckFeaturesRequest *createClientWUCheckFeaturesRequest(const char *serv=NULL);
extern "C"  IEspDeploymentFeatures *createDeploymentFeatures(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientDeploymentFeatures *createClientDeploymentFeatures(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUCheckFeaturesResponse *createWUCheckFeaturesResponse(const char *serv=NULL);
extern "C"  IClientWUCheckFeaturesResponse *createClientWUCheckFeaturesResponse(const char *serv=NULL);
extern "C"  IEspWUStatisticItem *createWUStatisticItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUStatisticItem *createClientWUStatisticItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUGetStatsRequest *createWUGetStatsRequest(const char *serv=NULL);
extern "C"  IClientWUGetStatsRequest *createClientWUGetStatsRequest(const char *serv=NULL);
extern "C"  IEspWUGetStatsResponse *createWUGetStatsResponse(const char *serv=NULL);
extern "C"  IClientWUGetStatsResponse *createClientWUGetStatsResponse(const char *serv=NULL);
extern "C"  IEspWUArchiveFile *createWUArchiveFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUArchiveFile *createClientWUArchiveFile(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUArchiveModule *createWUArchiveModule(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUArchiveModule *createClientWUArchiveModule(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUListArchiveFilesRequest *createWUListArchiveFilesRequest(const char *serv=NULL);
extern "C"  IClientWUListArchiveFilesRequest *createClientWUListArchiveFilesRequest(const char *serv=NULL);
extern "C"  IEspWUListArchiveFilesResponse *createWUListArchiveFilesResponse(const char *serv=NULL);
extern "C"  IClientWUListArchiveFilesResponse *createClientWUListArchiveFilesResponse(const char *serv=NULL);
extern "C"  IEspWUGetArchiveFileRequest *createWUGetArchiveFileRequest(const char *serv=NULL);
extern "C"  IClientWUGetArchiveFileRequest *createClientWUGetArchiveFileRequest(const char *serv=NULL);
extern "C"  IEspWUGetArchiveFileResponse *createWUGetArchiveFileResponse(const char *serv=NULL);
extern "C"  IClientWUGetArchiveFileResponse *createClientWUGetArchiveFileResponse(const char *serv=NULL);
extern "C"  IEspWUGetNumFileToCopyRequest *createWUGetNumFileToCopyRequest(const char *serv=NULL);
extern "C"  IClientWUGetNumFileToCopyRequest *createClientWUGetNumFileToCopyRequest(const char *serv=NULL);
extern "C"  IEspWUGetNumFileToCopyResponse *createWUGetNumFileToCopyResponse(const char *serv=NULL);
extern "C"  IClientWUGetNumFileToCopyResponse *createClientWUGetNumFileToCopyResponse(const char *serv=NULL);
extern "C"  IEspWUPropertyFilter *createWUPropertyFilter(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUPropertyFilter *createClientWUPropertyFilter(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUScopeFilter *createWUScopeFilter(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUScopeFilter *createClientWUScopeFilter(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUNestedFilter *createWUNestedFilter(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUNestedFilter *createClientWUNestedFilter(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUExtraProperties *createWUExtraProperties(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUExtraProperties *createClientWUExtraProperties(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUPropertiesToReturn *createWUPropertiesToReturn(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUPropertiesToReturn *createClientWUPropertiesToReturn(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUScopeOptions *createWUScopeOptions(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUScopeOptions *createClientWUScopeOptions(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUPropertyOptions *createWUPropertyOptions(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUPropertyOptions *createClientWUPropertyOptions(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUDetailsRequest *createWUDetailsRequest(const char *serv=NULL);
extern "C"  IClientWUDetailsRequest *createClientWUDetailsRequest(const char *serv=NULL);
extern "C"  IEspWUResponseProperty *createWUResponseProperty(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUResponseProperty *createClientWUResponseProperty(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUResponseScope *createWUResponseScope(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUResponseScope *createClientWUResponseScope(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUDetailsResponse *createWUDetailsResponse(const char *serv=NULL);
extern "C"  IClientWUDetailsResponse *createClientWUDetailsResponse(const char *serv=NULL);
extern "C"  IEspWUDetailsMetaProperty *createWUDetailsMetaProperty(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUDetailsMetaProperty *createClientWUDetailsMetaProperty(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUDetailsActivityInfo *createWUDetailsActivityInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUDetailsActivityInfo *createClientWUDetailsActivityInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUDetailsMetaRequest *createWUDetailsMetaRequest(const char *serv=NULL);
extern "C"  IClientWUDetailsMetaRequest *createClientWUDetailsMetaRequest(const char *serv=NULL);
extern "C"  IEspWUDetailsMetaResponse *createWUDetailsMetaResponse(const char *serv=NULL);
extern "C"  IClientWUDetailsMetaResponse *createClientWUDetailsMetaResponse(const char *serv=NULL);
extern "C"  IEspWUEclDefinitionActionResult *createWUEclDefinitionActionResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientWUEclDefinitionActionResult *createClientWUEclDefinitionActionResult(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspWUEclDefinitionActionRequest *createWUEclDefinitionActionRequest(const char *serv=NULL);
extern "C"  IClientWUEclDefinitionActionRequest *createClientWUEclDefinitionActionRequest(const char *serv=NULL);
extern "C"  IEspWUEclDefinitionActionResponse *createWUEclDefinitionActionResponse(const char *serv=NULL);
extern "C"  IClientWUEclDefinitionActionResponse *createClientWUEclDefinitionActionResponse(const char *serv=NULL);
extern "C"  IEspWsWorkunitsPingRequest *createWsWorkunitsPingRequest(const char *serv=NULL);
extern "C"  IClientWsWorkunitsPingRequest *createClientWsWorkunitsPingRequest(const char *serv=NULL);
extern "C"  IEspWsWorkunitsPingResponse *createWsWorkunitsPingResponse(const char *serv=NULL);
extern "C"  IClientWsWorkunitsPingResponse *createClientWsWorkunitsPingResponse(const char *serv=NULL);

#endif // _ws_workunits_SCM_INCL
//end
