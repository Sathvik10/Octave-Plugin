! Clarion SCM Interfaces
! Include file generated by HIDL Version 1.3 from ws_topology.ecm
! *** Not to be hand edited (changes will be lost on re-generation) ***

  OMIT('EndOfInclude',_ws_topology_I_)
_ws_topology_I_ EQUATE(1)

  INCLUDE('SCM.INT'),ONCE

TpMachineType EQUATE(UNSIGNED)
  ITEMIZE,PRE(TpMachineType)
TPMACHINECLUSTER	EQUATE(0)
	END

OS_TYPE EQUATE(UNSIGNED)
  ITEMIZE,PRE(OS_TYPE)
OS_WINDOWS	EQUATE(0)
OS_SOLARIS	EQUATE(1)
OS_LINUX	EQUATE(2)
	END

cppClientTpMachine  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setNetaddress    PROCEDURE(CONST *CSTRING Netaddress),PROC
setConfigNetaddress  PROCEDURE(CONST *CSTRING ConfigNetaddress),PROC
setDomain        PROCEDURE(CONST *CSTRING Domain),PROC
setDirectory     PROCEDURE(CONST *CSTRING Directory),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setAvailable     PROCEDURE(CONST *CSTRING Available),PROC
setOS            PROCEDURE(LONG OS),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setPort          PROCEDURE(LONG Port),PROC
setProcessNumber  PROCEDURE(LONG ProcessNumber),PROC
getName          PROCEDURE(),*CSTRING,PROC
getNetaddress    PROCEDURE(),*CSTRING,PROC
getConfigNetaddress  PROCEDURE(),*CSTRING,PROC
getDomain        PROCEDURE(),*CSTRING,PROC
getDirectory     PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getAvailable     PROCEDURE(),*CSTRING,PROC
getOS            PROCEDURE(),LONG,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getPort          PROCEDURE(),LONG,PROC
getProcessNumber  PROCEDURE(),LONG,PROC
    END



cppClientTpCluster  INTERFACE(cppInterface),COM
setType          PROCEDURE(CONST *CSTRING Type),PROC
setName          PROCEDURE(CONST *CSTRING Name),PROC
setQueueName     PROCEDURE(CONST *CSTRING QueueName),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setDirectory     PROCEDURE(CONST *CSTRING Directory),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
setDesc          PROCEDURE(CONST *CSTRING Desc),PROC
setPrefix        PROCEDURE(CONST *CSTRING Prefix),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setDataModel     PROCEDURE(CONST *CSTRING DataModel),PROC
setOS            PROCEDURE(LONG OS),PROC
setHasThorSpareProcess  PROCEDURE(CBOOL HasThorSpareProcess),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getType          PROCEDURE(),*CSTRING,PROC
getName          PROCEDURE(),*CSTRING,PROC
getQueueName     PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getDirectory     PROCEDURE(),*CSTRING,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getDesc          PROCEDURE(),*CSTRING,PROC
getPrefix        PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getDataModel     PROCEDURE(),*CSTRING,PROC
getOS            PROCEDURE(),LONG,PROC
getHasThorSpareProcess  PROCEDURE(),CBOOL,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpLogicalCluster  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setQueue         PROCEDURE(CONST *CSTRING Queue),PROC
setLanguageVersion  PROCEDURE(CONST *CSTRING LanguageVersion),PROC
setProcess       PROCEDURE(CONST *CSTRING Process),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
getName          PROCEDURE(),*CSTRING,PROC
getQueue         PROCEDURE(),*CSTRING,PROC
getLanguageVersion  PROCEDURE(),*CSTRING,PROC
getProcess       PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
    END



cppClientTpGroup  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setKind          PROCEDURE(CONST *CSTRING Kind),PROC
setReplicateOutputs  PROCEDURE(CBOOL ReplicateOutputs),PROC
getName          PROCEDURE(),*CSTRING,PROC
getKind          PROCEDURE(),*CSTRING,PROC
getReplicateOutputs  PROCEDURE(),CBOOL,PROC
    END



cppClientTpDali  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setBackupComputer  PROCEDURE(CONST *CSTRING BackupComputer),PROC
setBackupDirectory  PROCEDURE(CONST *CSTRING BackupDirectory),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
setAuditLogDirectory  PROCEDURE(CONST *CSTRING AuditLogDirectory),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getBackupComputer  PROCEDURE(),*CSTRING,PROC
getBackupDirectory  PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getAuditLogDirectory  PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpEclServer  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpEclAgent  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setDaliServer    PROCEDURE(CONST *CSTRING DaliServer),PROC
setLogDir        PROCEDURE(CONST *CSTRING LogDir),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getDaliServer    PROCEDURE(),*CSTRING,PROC
getLogDir        PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpAgentExec  INTERFACE(cppInterface),COM
setDaliServer    PROCEDURE(CONST *CSTRING DaliServer),PROC
setLogDir        PROCEDURE(CONST *CSTRING LogDir),PROC
getDaliServer    PROCEDURE(),*CSTRING,PROC
getLogDir        PROCEDURE(),*CSTRING,PROC
    END



cppClientTpEclScheduler  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpBinding  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setService       PROCEDURE(CONST *CSTRING Service),PROC
setServiceType   PROCEDURE(CONST *CSTRING ServiceType),PROC
setBindingType   PROCEDURE(CONST *CSTRING BindingType),PROC
setServiceBuildSet  PROCEDURE(CONST *CSTRING ServiceBuildSet),PROC
setPort          PROCEDURE(CONST *CSTRING Port),PROC
setProtocol      PROCEDURE(CONST *CSTRING Protocol),PROC
getName          PROCEDURE(),*CSTRING,PROC
getService       PROCEDURE(),*CSTRING,PROC
getServiceType   PROCEDURE(),*CSTRING,PROC
getBindingType   PROCEDURE(),*CSTRING,PROC
getServiceBuildSet  PROCEDURE(),*CSTRING,PROC
getPort          PROCEDURE(),*CSTRING,PROC
getProtocol      PROCEDURE(),*CSTRING,PROC
    END



cppClientTpEspServicePlugin  INTERFACE(cppInterface),COM
setShortName     PROCEDURE(CONST *CSTRING ShortName),PROC
setLongName      PROCEDURE(CONST *CSTRING LongName),PROC
setFolderName    PROCEDURE(CONST *CSTRING FolderName),PROC
setWidgetName    PROCEDURE(CONST *CSTRING WidgetName),PROC
getShortName     PROCEDURE(),*CSTRING,PROC
getLongName      PROCEDURE(),*CSTRING,PROC
getFolderName    PROCEDURE(),*CSTRING,PROC
getWidgetName    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpEspServer  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
setTpBindings    PROCEDURE(CONST *CSTRING TpBindings),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
getTpBindings    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpDfuServer  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setQueue         PROCEDURE(CONST *CSTRING Queue),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getQueue         PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpSashaServer  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpLdapServer  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpDropZone  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setECLWatchVisible  PROCEDURE(CBOOL ECLWatchVisible),PROC
setUMask         PROCEDURE(CONST *CSTRING UMask),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getECLWatchVisible  PROCEDURE(),CBOOL,PROC
getUMask         PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpMySqlServer  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpFTSlave  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpDkcSlave  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpGenesisServer  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpSparkThor  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setBuild         PROCEDURE(CONST *CSTRING Build),PROC
setThorClusterName  PROCEDURE(CONST *CSTRING ThorClusterName),PROC
setThorPath      PROCEDURE(CONST *CSTRING ThorPath),PROC
setSparkExecutorCores  PROCEDURE(ULONG SparkExecutorCores),PROC
setSparkExecutorMemory  PROCEDURE(int64 SparkExecutorMemory),PROC
setSparkMasterPort  PROCEDURE(ULONG SparkMasterPort),PROC
setSparkMasterWebUIPort  PROCEDURE(ULONG SparkMasterWebUIPort),PROC
setSparkWorkerCores  PROCEDURE(ULONG SparkWorkerCores),PROC
setSparkWorkerMemory  PROCEDURE(int64 SparkWorkerMemory),PROC
setSparkWorkerPort  PROCEDURE(ULONG SparkWorkerPort),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setTpMachines    PROCEDURE(CONST *CSTRING TpMachines),PROC
getName          PROCEDURE(),*CSTRING,PROC
getBuild         PROCEDURE(),*CSTRING,PROC
getThorClusterName  PROCEDURE(),*CSTRING,PROC
getThorPath      PROCEDURE(),*CSTRING,PROC
getSparkExecutorCores  PROCEDURE(),ULONG,PROC
getSparkExecutorMemory  PROCEDURE(),int64,PROC
getSparkMasterPort  PROCEDURE(),ULONG,PROC
getSparkMasterWebUIPort  PROCEDURE(),ULONG,PROC
getSparkWorkerCores  PROCEDURE(),ULONG,PROC
getSparkWorkerMemory  PROCEDURE(),int64,PROC
getSparkWorkerPort  PROCEDURE(),ULONG,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpQueue  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setWorkUnit      PROCEDURE(CONST *CSTRING WorkUnit),PROC
getName          PROCEDURE(),*CSTRING,PROC
getWorkUnit      PROCEDURE(),*CSTRING,PROC
    END



cppClientTpServices  INTERFACE(cppInterface),COM
setTpDalis       PROCEDURE(CONST *CSTRING TpDalis),PROC
setTpDfuServers  PROCEDURE(CONST *CSTRING TpDfuServers),PROC
setTpDkcSlaves   PROCEDURE(CONST *CSTRING TpDkcSlaves),PROC
setTpDropZones   PROCEDURE(CONST *CSTRING TpDropZones),PROC
setTpEclAgents   PROCEDURE(CONST *CSTRING TpEclAgents),PROC
setTpEclServers  PROCEDURE(CONST *CSTRING TpEclServers),PROC
setTpEclCCServers  PROCEDURE(CONST *CSTRING TpEclCCServers),PROC
setTpEclSchedulers  PROCEDURE(CONST *CSTRING TpEclSchedulers),PROC
setTpEspServers  PROCEDURE(CONST *CSTRING TpEspServers),PROC
setTpFTSlaves    PROCEDURE(CONST *CSTRING TpFTSlaves),PROC
setTpGenesisServers  PROCEDURE(CONST *CSTRING TpGenesisServers),PROC
setTpLdapServers  PROCEDURE(CONST *CSTRING TpLdapServers),PROC
setTpMySqlServers  PROCEDURE(CONST *CSTRING TpMySqlServers),PROC
setTpSashaServers  PROCEDURE(CONST *CSTRING TpSashaServers),PROC
setTpSparkThors  PROCEDURE(CONST *CSTRING TpSparkThors),PROC
getTpDalis       PROCEDURE(),*CSTRING,PROC
getTpDfuServers  PROCEDURE(),*CSTRING,PROC
getTpDkcSlaves   PROCEDURE(),*CSTRING,PROC
getTpDropZones   PROCEDURE(),*CSTRING,PROC
getTpEclAgents   PROCEDURE(),*CSTRING,PROC
getTpEclServers  PROCEDURE(),*CSTRING,PROC
getTpEclCCServers  PROCEDURE(),*CSTRING,PROC
getTpEclSchedulers  PROCEDURE(),*CSTRING,PROC
getTpEspServers  PROCEDURE(),*CSTRING,PROC
getTpFTSlaves    PROCEDURE(),*CSTRING,PROC
getTpGenesisServers  PROCEDURE(),*CSTRING,PROC
getTpLdapServers  PROCEDURE(),*CSTRING,PROC
getTpMySqlServers  PROCEDURE(),*CSTRING,PROC
getTpSashaServers  PROCEDURE(),*CSTRING,PROC
getTpSparkThors  PROCEDURE(),*CSTRING,PROC
    END



cppClientTpClusterNameType  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setIsDefault     PROCEDURE(CBOOL IsDefault),PROC
getName          PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getIsDefault     PROCEDURE(),CBOOL,PROC
    END



cppClientTpListTargetClustersRequest  INTERFACE(cppInterface),COM
    END



cppClientTpListTargetClustersResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getTargetClusters  PROCEDURE(),*CSTRING,PROC
    END



cppClientTpTargetCluster  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setPrefix        PROCEDURE(CONST *CSTRING Prefix),PROC
setType          PROCEDURE(TpQueryType Type),PROC
setTpClusters    PROCEDURE(CONST *CSTRING TpClusters),PROC
setTpEclCCServers  PROCEDURE(CONST *CSTRING TpEclCCServers),PROC
setTpEclServers  PROCEDURE(CONST *CSTRING TpEclServers),PROC
setTpEclAgents   PROCEDURE(CONST *CSTRING TpEclAgents),PROC
setTpEclSchedulers  PROCEDURE(CONST *CSTRING TpEclSchedulers),PROC
getName          PROCEDURE(),*CSTRING,PROC
getPrefix        PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),TpQueryType,PROC
getTpClusters    PROCEDURE(),*CSTRING,PROC
getTpEclCCServers  PROCEDURE(),*CSTRING,PROC
getTpEclServers  PROCEDURE(),*CSTRING,PROC
getTpEclAgents   PROCEDURE(),*CSTRING,PROC
getTpEclSchedulers  PROCEDURE(),*CSTRING,PROC
    END



cppClientTpQueryType  INTERFACE(cppInterface),COM
setTPCLUSTER     PROCEDURE(CONST *CSTRING TPCLUSTER),PROC
setTPNODE        PROCEDURE(CONST *CSTRING TPNODE),PROC
getTPCLUSTER     PROCEDURE(),*CSTRING,PROC
getTPNODE        PROCEDURE(),*CSTRING,PROC
    END



cppClientTpTargetClusterQueryRequest  INTERFACE(cppInterface),COM
setType          PROCEDURE(TpQueryType Type),PROC
setName          PROCEDURE(CONST *CSTRING Name),PROC
setShowDetails   PROCEDURE(CBOOL ShowDetails),PROC
    END



cppClientTpTargetClusterQueryResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getShowDetails   PROCEDURE(),CBOOL,PROC
getMemThreshold  PROCEDURE(),LONG,PROC
getDiskThreshold  PROCEDURE(),LONG,PROC
getCpuThreshold  PROCEDURE(),LONG,PROC
getMemThresholdType  PROCEDURE(),*CSTRING,PROC
getDiskThresholdType  PROCEDURE(),*CSTRING,PROC
getPreflightProcessFilter  PROCEDURE(),*CSTRING,PROC
getAcceptLanguage  PROCEDURE(),*CSTRING,PROC
getTpTargetClusters  PROCEDURE(),*CSTRING,PROC
    END



cppClientTpClusterQueryRequest  INTERFACE(cppInterface),COM
setType          PROCEDURE(TpQueryType Type),PROC
    END



cppClientTpClusterQueryResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getEnableSNMP    PROCEDURE(),CBOOL,PROC
getAcceptLanguage  PROCEDURE(),*CSTRING,PROC
getTpClusters    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpLogicalClusterQueryRequest  INTERFACE(cppInterface),COM
setEclServerQueue  PROCEDURE(CONST *CSTRING EclServerQueue),PROC
    END



cppClientTpLogicalClusterQueryResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getTpLogicalClusters  PROCEDURE(),*CSTRING,PROC
    END



cppClientTpGroupQueryRequest  INTERFACE(cppInterface),COM
setKind          PROCEDURE(CONST *CSTRING Kind),PROC
    END



cppClientTpGroupQueryResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getTpGroups      PROCEDURE(),*CSTRING,PROC
    END



cppClientTpClusterInfoRequest  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
    END



cppClientTpClusterInfoResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getName          PROCEDURE(),*CSTRING,PROC
getWorkUnit      PROCEDURE(),*CSTRING,PROC
getTpQueues      PROCEDURE(),*CSTRING,PROC
    END



cppClientTpMachineQueryRequest  INTERFACE(cppInterface),COM
setType          PROCEDURE(TpMachineType Type),PROC
setCluster       PROCEDURE(CONST *CSTRING Cluster),PROC
setOldIP         PROCEDURE(CONST *CSTRING OldIP),PROC
setPath          PROCEDURE(CONST *CSTRING Path),PROC
setDirectory     PROCEDURE(CONST *CSTRING Directory),PROC
setLogDirectory  PROCEDURE(CONST *CSTRING LogDirectory),PROC
    END



cppClientTpMachineQueryResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getEnablePreflightInfo  PROCEDURE(),CBOOL,PROC
getHasThorSpareProcess  PROCEDURE(),CBOOL,PROC
getType          PROCEDURE(),TpMachineType,PROC
getCluster       PROCEDURE(),*CSTRING,PROC
getOldIP         PROCEDURE(),*CSTRING,PROC
getLogDirectory  PROCEDURE(),*CSTRING,PROC
getPath          PROCEDURE(),*CSTRING,PROC
getMemThreshold  PROCEDURE(),LONG,PROC
getDiskThreshold  PROCEDURE(),LONG,PROC
getCpuThreshold  PROCEDURE(),LONG,PROC
getMemThresholdType  PROCEDURE(),*CSTRING,PROC
getDiskThresholdType  PROCEDURE(),*CSTRING,PROC
getPreflightProcessFilter  PROCEDURE(),*CSTRING,PROC
getEnableSNMP    PROCEDURE(),CBOOL,PROC
getAcceptLanguage  PROCEDURE(),*CSTRING,PROC
getTpMachines    PROCEDURE(),*CSTRING,PROC
    END



cppClientTpMachineInfoRequest  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setNetAddress    PROCEDURE(CONST *CSTRING NetAddress),PROC
    END



cppClientTpMachineInfoResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getMachineInfo   PROCEDURE(),TpMachine,PROC
    END



cppClientTpServiceQueryRequest  INTERFACE(cppInterface),COM
setType          PROCEDURE(CONST *CSTRING Type),PROC
    END



cppClientTpServiceQueryResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getMemThreshold  PROCEDURE(),LONG,PROC
getDiskThreshold  PROCEDURE(),LONG,PROC
getCpuThreshold  PROCEDURE(),LONG,PROC
getEncapsulatedSystem  PROCEDURE(),CBOOL,PROC
getEnableSNMP    PROCEDURE(),CBOOL,PROC
getPreflightProcessFilter  PROCEDURE(),*CSTRING,PROC
getAcceptLanguage  PROCEDURE(),*CSTRING,PROC
getMemThresholdType  PROCEDURE(),*CSTRING,PROC
getDiskThresholdType  PROCEDURE(),*CSTRING,PROC
getServiceList   PROCEDURE(),TpServices,PROC
    END



cppClientTpSetMachineStatusRequest  INTERFACE(cppInterface),COM
setMachinePath   PROCEDURE(CONST *CSTRING MachinePath),PROC
setStatusValue   PROCEDURE(CONST *CSTRING StatusValue),PROC
    END



cppClientTpSetMachineStatusResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getTpSetMachineStatusResult  PROCEDURE(),CBOOL,PROC
    END



cppClientTpSwapNodeRequest  INTERFACE(cppInterface),COM
setCluster       PROCEDURE(CONST *CSTRING Cluster),PROC
setOldIP         PROCEDURE(CONST *CSTRING OldIP),PROC
setNewIP         PROCEDURE(CONST *CSTRING NewIP),PROC
    END



cppClientTpSwapNodeResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getTpSwapNodeResult  PROCEDURE(),CBOOL,PROC
    END



cppClientTpXMLFileRequest  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
    END



cppClientTpXMLFileResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getThefile_mimetype  PROCEDURE(),const char *,PROC
getThefile       PROCEDURE(),binary,PROC
    END



cppClientTpLogFileRequest  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setLastHours     PROCEDURE(LONG LastHours),PROC
setStartDate     PROCEDURE(CONST *CSTRING StartDate),PROC
setEndDate       PROCEDURE(CONST *CSTRING EndDate),PROC
setFirstRows     PROCEDURE(LONG FirstRows),PROC
setLastRows      PROCEDURE(LONG LastRows),PROC
setFilterType    PROCEDURE(LONG FilterType),PROC
setReversely     PROCEDURE(CBOOL Reversely),PROC
setZip           PROCEDURE(CBOOL Zip),PROC
setPageNumber    PROCEDURE(LONG PageNumber),PROC
setLoadData      PROCEDURE(CBOOL LoadData),PROC
    END



cppClientTpLogFileResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getName          PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
getStartDate     PROCEDURE(),*CSTRING,PROC
getEndDate       PROCEDURE(),*CSTRING,PROC
getLastHours     PROCEDURE(),LONG,PROC
getFirstRows     PROCEDURE(),LONG,PROC
getLastRows      PROCEDURE(),LONG,PROC
getReversely     PROCEDURE(),CBOOL,PROC
getZip           PROCEDURE(),CBOOL,PROC
getFilterType    PROCEDURE(),LONG,PROC
getLogData       PROCEDURE(),*CSTRING,PROC
getHasDate       PROCEDURE(),CBOOL,PROC
getFileSize      PROCEDURE(),int64,PROC
getPageFrom      PROCEDURE(),int64,PROC
getPageTo        PROCEDURE(),int64,PROC
getPageNumber    PROCEDURE(),LONG,PROC
getPrevPage      PROCEDURE(),LONG,PROC
getNextPage      PROCEDURE(),LONG,PROC
getTotalPages    PROCEDURE(),LONG,PROC
getAcceptLanguage  PROCEDURE(),*CSTRING,PROC
    END



cppClientSystemLogRequest  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
setZip           PROCEDURE(LONG Zip),PROC
    END



cppClientSystemLogResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getThefile_mimetype  PROCEDURE(),const char *,PROC
getThefile       PROCEDURE(),binary,PROC
    END



cppClientTpGetComponentFileRequest  INTERFACE(cppInterface),COM
setCompType      PROCEDURE(CONST *CSTRING CompType),PROC
setCompName      PROCEDURE(CONST *CSTRING CompName),PROC
setNetAddress    PROCEDURE(CONST *CSTRING NetAddress),PROC
setDirectory     PROCEDURE(CONST *CSTRING Directory),PROC
setFileType      PROCEDURE(CONST *CSTRING FileType),PROC
setOsType        PROCEDURE(LONG OsType),PROC
setPlainText     PROCEDURE(CONST *CSTRING PlainText),PROC
    END



cppClientTpGetComponentFileResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getFileContents_mimetype  PROCEDURE(),const char *,PROC
getFileContents  PROCEDURE(),binary,PROC
    END



cppClientTpThorStatusRequest  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
    END



cppClientTpThorStatusResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getName          PROCEDURE(),*CSTRING,PROC
getQueue         PROCEDURE(),*CSTRING,PROC
getGroup         PROCEDURE(),*CSTRING,PROC
getThorMasterIPAddress  PROCEDURE(),*CSTRING,PROC
getPort          PROCEDURE(),LONG,PROC
getStartTime     PROCEDURE(),*CSTRING,PROC
getLogFile       PROCEDURE(),*CSTRING,PROC
getWuid          PROCEDURE(),*CSTRING,PROC
getGraph         PROCEDURE(),*CSTRING,PROC
getSubGraph      PROCEDURE(),LONG,PROC
getSubGraphDuration  PROCEDURE(),LONG,PROC
getAutoRefresh   PROCEDURE(),LONG,PROC
    END



cppClientTpGetServicePluginsRequest  INTERFACE(cppInterface),COM
    END



cppClientTpGetServicePluginsResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getPlugins       PROCEDURE(),*CSTRING,PROC
    END



cppClientTpDropZoneQueryRequest  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setECLWatchVisibleOnly  PROCEDURE(CBOOL ECLWatchVisibleOnly),PROC
    END



cppClientTpDropZoneQueryResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getTpDropZones   PROCEDURE(),*CSTRING,PROC
    END



cppClientWsTopologyPingRequest  INTERFACE(cppInterface),COM
    END



cppClientWsTopologyPingResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
    END



cppClientWsTopologyEvents INTERFACE(cppInterface),COM
onPingComplete PROCEDURE(*cppClientWsTopologyPingResponse resp),PROC
onPingError PROCEDURE(*cppClientWsTopologyPingResponse resp),PROC
onSystemLogComplete PROCEDURE(*cppClientSystemLogResponse resp),PROC
onSystemLogError PROCEDURE(*cppClientSystemLogResponse resp),PROC
onTpClusterInfoComplete PROCEDURE(*cppClientTpClusterInfoResponse resp),PROC
onTpClusterInfoError PROCEDURE(*cppClientTpClusterInfoResponse resp),PROC
onTpClusterQueryComplete PROCEDURE(*cppClientTpClusterQueryResponse resp),PROC
onTpClusterQueryError PROCEDURE(*cppClientTpClusterQueryResponse resp),PROC
onTpDropZoneQueryComplete PROCEDURE(*cppClientTpDropZoneQueryResponse resp),PROC
onTpDropZoneQueryError PROCEDURE(*cppClientTpDropZoneQueryResponse resp),PROC
onTpGetComponentFileComplete PROCEDURE(*cppClientTpGetComponentFileResponse resp),PROC
onTpGetComponentFileError PROCEDURE(*cppClientTpGetComponentFileResponse resp),PROC
onTpGetServicePluginsComplete PROCEDURE(*cppClientTpGetServicePluginsResponse resp),PROC
onTpGetServicePluginsError PROCEDURE(*cppClientTpGetServicePluginsResponse resp),PROC
onTpGroupQueryComplete PROCEDURE(*cppClientTpGroupQueryResponse resp),PROC
onTpGroupQueryError PROCEDURE(*cppClientTpGroupQueryResponse resp),PROC
onTpListTargetClustersComplete PROCEDURE(*cppClientTpListTargetClustersResponse resp),PROC
onTpListTargetClustersError PROCEDURE(*cppClientTpListTargetClustersResponse resp),PROC
onTpLogFileComplete PROCEDURE(*cppClientTpLogFileResponse resp),PROC
onTpLogFileError PROCEDURE(*cppClientTpLogFileResponse resp),PROC
onTpLogFileDisplayComplete PROCEDURE(*cppClientTpLogFileResponse resp),PROC
onTpLogFileDisplayError PROCEDURE(*cppClientTpLogFileResponse resp),PROC
onTpLogicalClusterQueryComplete PROCEDURE(*cppClientTpLogicalClusterQueryResponse resp),PROC
onTpLogicalClusterQueryError PROCEDURE(*cppClientTpLogicalClusterQueryResponse resp),PROC
onTpMachineInfoComplete PROCEDURE(*cppClientTpMachineInfoResponse resp),PROC
onTpMachineInfoError PROCEDURE(*cppClientTpMachineInfoResponse resp),PROC
onTpMachineQueryComplete PROCEDURE(*cppClientTpMachineQueryResponse resp),PROC
onTpMachineQueryError PROCEDURE(*cppClientTpMachineQueryResponse resp),PROC
onTpServiceQueryComplete PROCEDURE(*cppClientTpServiceQueryResponse resp),PROC
onTpServiceQueryError PROCEDURE(*cppClientTpServiceQueryResponse resp),PROC
onTpSetMachineStatusComplete PROCEDURE(*cppClientTpSetMachineStatusResponse resp),PROC
onTpSetMachineStatusError PROCEDURE(*cppClientTpSetMachineStatusResponse resp),PROC
onTpSwapNodeComplete PROCEDURE(*cppClientTpSwapNodeResponse resp),PROC
onTpSwapNodeError PROCEDURE(*cppClientTpSwapNodeResponse resp),PROC
onTpTargetClusterQueryComplete PROCEDURE(*cppClientTpTargetClusterQueryResponse resp),PROC
onTpTargetClusterQueryError PROCEDURE(*cppClientTpTargetClusterQueryResponse resp),PROC
onTpThorStatusComplete PROCEDURE(*cppClientTpThorStatusResponse resp),PROC
onTpThorStatusError PROCEDURE(*cppClientTpThorStatusResponse resp),PROC
onTpXMLFileComplete PROCEDURE(*cppClientTpXMLFileResponse resp),PROC
onTpXMLFileError PROCEDURE(*cppClientTpXMLFileResponse resp),PROC

 END

cppClientWsTopology INTERFACE(cppInterface),COM
setProxyAddress  PROCEDURE(CONST *CSTRING address),PROC
addServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
removeServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
setUsernameToken  PROCEDURE(CONST *CSTRING Username,CONST *CSTRING Password,CONST *CSTRING Realm ),PROC
createPingRequest  PROCEDURE(),*cppClientWsTopologyPingRequest,PROC
Ping  PROCEDURE(*cppClientWsTopologyPingRequest request),*cppClientWsTopologyPingResponse,PROC
async_Ping  PROCEDURE(*cppClientWsTopologyPingRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createSystemLogRequest  PROCEDURE(),*cppClientSystemLogRequest,PROC
SystemLog  PROCEDURE(*cppClientSystemLogRequest request),*cppClientSystemLogResponse,PROC
async_SystemLog  PROCEDURE(*cppClientSystemLogRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpClusterInfoRequest  PROCEDURE(),*cppClientTpClusterInfoRequest,PROC
TpClusterInfo  PROCEDURE(*cppClientTpClusterInfoRequest request),*cppClientTpClusterInfoResponse,PROC
async_TpClusterInfo  PROCEDURE(*cppClientTpClusterInfoRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpClusterQueryRequest  PROCEDURE(),*cppClientTpClusterQueryRequest,PROC
TpClusterQuery  PROCEDURE(*cppClientTpClusterQueryRequest request),*cppClientTpClusterQueryResponse,PROC
async_TpClusterQuery  PROCEDURE(*cppClientTpClusterQueryRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpDropZoneQueryRequest  PROCEDURE(),*cppClientTpDropZoneQueryRequest,PROC
TpDropZoneQuery  PROCEDURE(*cppClientTpDropZoneQueryRequest request),*cppClientTpDropZoneQueryResponse,PROC
async_TpDropZoneQuery  PROCEDURE(*cppClientTpDropZoneQueryRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpGetComponentFileRequest  PROCEDURE(),*cppClientTpGetComponentFileRequest,PROC
TpGetComponentFile  PROCEDURE(*cppClientTpGetComponentFileRequest request),*cppClientTpGetComponentFileResponse,PROC
async_TpGetComponentFile  PROCEDURE(*cppClientTpGetComponentFileRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpGetServicePluginsRequest  PROCEDURE(),*cppClientTpGetServicePluginsRequest,PROC
TpGetServicePlugins  PROCEDURE(*cppClientTpGetServicePluginsRequest request),*cppClientTpGetServicePluginsResponse,PROC
async_TpGetServicePlugins  PROCEDURE(*cppClientTpGetServicePluginsRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpGroupQueryRequest  PROCEDURE(),*cppClientTpGroupQueryRequest,PROC
TpGroupQuery  PROCEDURE(*cppClientTpGroupQueryRequest request),*cppClientTpGroupQueryResponse,PROC
async_TpGroupQuery  PROCEDURE(*cppClientTpGroupQueryRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpListTargetClustersRequest  PROCEDURE(),*cppClientTpListTargetClustersRequest,PROC
TpListTargetClusters  PROCEDURE(*cppClientTpListTargetClustersRequest request),*cppClientTpListTargetClustersResponse,PROC
async_TpListTargetClusters  PROCEDURE(*cppClientTpListTargetClustersRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpLogFileRequest  PROCEDURE(),*cppClientTpLogFileRequest,PROC
TpLogFile  PROCEDURE(*cppClientTpLogFileRequest request),*cppClientTpLogFileResponse,PROC
async_TpLogFile  PROCEDURE(*cppClientTpLogFileRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpLogFileDisplayRequest  PROCEDURE(),*cppClientTpLogFileRequest,PROC
TpLogFileDisplay  PROCEDURE(*cppClientTpLogFileRequest request),*cppClientTpLogFileResponse,PROC
async_TpLogFileDisplay  PROCEDURE(*cppClientTpLogFileRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpLogicalClusterQueryRequest  PROCEDURE(),*cppClientTpLogicalClusterQueryRequest,PROC
TpLogicalClusterQuery  PROCEDURE(*cppClientTpLogicalClusterQueryRequest request),*cppClientTpLogicalClusterQueryResponse,PROC
async_TpLogicalClusterQuery  PROCEDURE(*cppClientTpLogicalClusterQueryRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpMachineInfoRequest  PROCEDURE(),*cppClientTpMachineInfoRequest,PROC
TpMachineInfo  PROCEDURE(*cppClientTpMachineInfoRequest request),*cppClientTpMachineInfoResponse,PROC
async_TpMachineInfo  PROCEDURE(*cppClientTpMachineInfoRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpMachineQueryRequest  PROCEDURE(),*cppClientTpMachineQueryRequest,PROC
TpMachineQuery  PROCEDURE(*cppClientTpMachineQueryRequest request),*cppClientTpMachineQueryResponse,PROC
async_TpMachineQuery  PROCEDURE(*cppClientTpMachineQueryRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpServiceQueryRequest  PROCEDURE(),*cppClientTpServiceQueryRequest,PROC
TpServiceQuery  PROCEDURE(*cppClientTpServiceQueryRequest request),*cppClientTpServiceQueryResponse,PROC
async_TpServiceQuery  PROCEDURE(*cppClientTpServiceQueryRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpSetMachineStatusRequest  PROCEDURE(),*cppClientTpSetMachineStatusRequest,PROC
TpSetMachineStatus  PROCEDURE(*cppClientTpSetMachineStatusRequest request),*cppClientTpSetMachineStatusResponse,PROC
async_TpSetMachineStatus  PROCEDURE(*cppClientTpSetMachineStatusRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpSwapNodeRequest  PROCEDURE(),*cppClientTpSwapNodeRequest,PROC
TpSwapNode  PROCEDURE(*cppClientTpSwapNodeRequest request),*cppClientTpSwapNodeResponse,PROC
async_TpSwapNode  PROCEDURE(*cppClientTpSwapNodeRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpTargetClusterQueryRequest  PROCEDURE(),*cppClientTpTargetClusterQueryRequest,PROC
TpTargetClusterQuery  PROCEDURE(*cppClientTpTargetClusterQueryRequest request),*cppClientTpTargetClusterQueryResponse,PROC
async_TpTargetClusterQuery  PROCEDURE(*cppClientTpTargetClusterQueryRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpThorStatusRequest  PROCEDURE(),*cppClientTpThorStatusRequest,PROC
TpThorStatus  PROCEDURE(*cppClientTpThorStatusRequest request),*cppClientTpThorStatusResponse,PROC
async_TpThorStatus  PROCEDURE(*cppClientTpThorStatusRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC
createTpXMLFileRequest  PROCEDURE(),*cppClientTpXMLFileRequest,PROC
TpXMLFile  PROCEDURE(*cppClientTpXMLFileRequest request),*cppClientTpXMLFileResponse,PROC
async_TpXMLFile  PROCEDURE(*cppClientTpXMLFileRequest request, *cppClientWsTopologyEvents events,*cppInterface State),PROC

  END




  MAP
    MODULE('ws_topology')
      createWsTopologyClient (),*cppClientWsTopology, pascal, raw, name('_createWsTopologyClient@0')
    END

  END


EndOfInclude
