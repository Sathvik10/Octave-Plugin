// *** Include file generated by HIDL Version 1.3 from ws_access.ecm ***
// *** Not to be hand edited (changes will be lost on re-generation) ***

#ifndef ws_access_SCM_INCL
#define ws_access_SCM_INCL

#include "esp.hpp"



enum CUserSortBy { UserSortBy_Undefined=-1,CUserSortBy_Name, CUserSortBy_FullName, CUserSortBy_PasswordExpiration, CUserSortBy_EmployeeID, };
typedef ArrayOf<CUserSortBy> UserSortByArray;


enum CGroupSortBy { GroupSortBy_Undefined=-1,CGroupSortBy_Name, CGroupSortBy_ManagedBy, };
typedef ArrayOf<CGroupSortBy> GroupSortByArray;


enum CResourceSortBy { ResourceSortBy_Undefined=-1,CResourceSortBy_Name, };
typedef ArrayOf<CResourceSortBy> ResourceSortByArray;


enum CResourcePermissionSortBy { ResourcePermissionSortBy_Undefined=-1,CResourcePermissionSortBy_Name, CResourcePermissionSortBy_Type, };
typedef ArrayOf<CResourcePermissionSortBy> ResourcePermissionSortByArray;


enum CAccountTypeReq { AccountTypeReq_Undefined=-1,CAccountTypeReq_Any, CAccountTypeReq_User, CAccountTypeReq_Group, };
typedef ArrayOf<CAccountTypeReq> AccountTypeReqArray;


interface IConstUserInfo : extends IEspStruct
{
	virtual const char * getUsername()=0;
	virtual const char * getFullname()=0;
	virtual const char * getPasswordexpiration()=0;
	virtual const char * getEmployeeID()=0;
};

interface IEspUserInfo : extends IConstUserInfo
{
	virtual void setUsername(const char * val)=0;
	virtual void setFullname(const char * val)=0;
	virtual void setPasswordexpiration(const char * val)=0;
	virtual void setEmployeeID(const char * val)=0;
	virtual void copy(IConstUserInfo &from)=0;
};

interface IClientUserInfo : extends IInterface
{
	virtual void setUsername(const char * val)=0;
	virtual void setFullname(const char * val)=0;
	virtual void setPasswordexpiration(const char * val)=0;
	virtual void setEmployeeID(const char * val)=0;
	virtual const char * getUsername()=0;
	virtual const char * getFullname()=0;
	virtual const char * getPasswordexpiration()=0;
	virtual const char * getEmployeeID()=0;
};



interface IConstGroupInfo : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual bool getDeletable()=0;
	virtual const char * getGroupOwner()=0;
	virtual const char * getGroupDesc()=0;
};

interface IEspGroupInfo : extends IConstGroupInfo
{
	virtual void setName(const char * val)=0;
	virtual void setDeletable(bool val)=0;
	virtual void setGroupOwner(const char * val)=0;
	virtual void setGroupDesc(const char * val)=0;
	virtual void copy(IConstGroupInfo &from)=0;
};

interface IClientGroupInfo : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setDeletable(bool val)=0;
	virtual void setGroupOwner(const char * val)=0;
	virtual void setGroupDesc(const char * val)=0;
	virtual const char * getName()=0;
	virtual bool getDeletable()=0;
	virtual const char * getGroupOwner()=0;
	virtual const char * getGroupDesc()=0;
};



interface IConstAccountPermission : extends IEspStruct
{
	virtual const char * getBasedn()=0;
	virtual const char * getRType()=0;
	virtual const char * getRname()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getResourceName()=0;
	virtual const char * getPermissionName()=0;
	virtual bool getAllow_access()=0;
	virtual bool getAllow_read()=0;
	virtual bool getAllow_write()=0;
	virtual bool getAllow_full()=0;
	virtual bool getDeny_access()=0;
	virtual bool getDeny_read()=0;
	virtual bool getDeny_write()=0;
	virtual bool getDeny_full()=0;
};

interface IEspAccountPermission : extends IConstAccountPermission
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRType(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setResourceName(const char * val)=0;
	virtual void setPermissionName(const char * val)=0;
	virtual void setAllow_access(bool val)=0;
	virtual void setAllow_read(bool val)=0;
	virtual void setAllow_write(bool val)=0;
	virtual void setAllow_full(bool val)=0;
	virtual void setDeny_access(bool val)=0;
	virtual void setDeny_read(bool val)=0;
	virtual void setDeny_write(bool val)=0;
	virtual void setDeny_full(bool val)=0;
	virtual void copy(IConstAccountPermission &from)=0;
};

interface IClientAccountPermission : extends IInterface
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRType(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setResourceName(const char * val)=0;
	virtual void setPermissionName(const char * val)=0;
	virtual void setAllow_access(bool val)=0;
	virtual void setAllow_read(bool val)=0;
	virtual void setAllow_write(bool val)=0;
	virtual void setAllow_full(bool val)=0;
	virtual void setDeny_access(bool val)=0;
	virtual void setDeny_read(bool val)=0;
	virtual void setDeny_write(bool val)=0;
	virtual void setDeny_full(bool val)=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRType()=0;
	virtual const char * getRname()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getResourceName()=0;
	virtual const char * getPermissionName()=0;
	virtual bool getAllow_access()=0;
	virtual bool getAllow_read()=0;
	virtual bool getAllow_write()=0;
	virtual bool getAllow_full()=0;
	virtual bool getDeny_access()=0;
	virtual bool getDeny_read()=0;
	virtual bool getDeny_write()=0;
	virtual bool getDeny_full()=0;
};



interface IConstGroupAccountPermission : extends IEspStruct
{
	virtual const char * getGroupName()=0;
	virtual StringArray & getBasednNames()=0;
	virtual IArrayOf<IConstAccountPermission> & getPermissions()=0;
};

interface IEspGroupAccountPermission : extends IConstGroupAccountPermission
{
	virtual void setGroupName(const char * val)=0;
	virtual void setBasednNames(StringArray &val)=0;
	virtual void setPermissions(IArrayOf<IEspAccountPermission> &val)=0;
	virtual void setPermissions(IArrayOf<IConstAccountPermission> &val)=0;
	virtual void copy(IConstGroupAccountPermission &from)=0;
};

interface IClientGroupAccountPermission : extends IInterface
{
	virtual void setGroupName(const char * val)=0;
	virtual void setBasednNames(StringArray &val)=0;
	virtual void setPermissions(IArrayOf<IEspAccountPermission> &val)=0;
	virtual void setPermissions(IArrayOf<IConstAccountPermission> &val)=0;
	virtual const char * getGroupName()=0;
	virtual StringArray & getBasednNames()=0;
	virtual IArrayOf<IConstAccountPermission> & getPermissions()=0;
};



interface IConstUserRequest : extends IEspRequest
{
	virtual const char * getSearchinput()=0;
};

interface IEspUserRequest : extends IConstUserRequest
{
	virtual void setSearchinput(const char * val)=0;
	virtual void copy(IConstUserRequest &from)=0;
};

interface IClientUserRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setSearchinput(const char * val)=0;
};



interface IConstUserResponse : extends IEspResponse
{
	virtual bool getNoSecMngr()=0;
	virtual bool getToomany()=0;
	virtual bool getPosixok()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
};

interface IEspUserResponse : extends IConstUserResponse
{
	virtual void setNoSecMngr(bool val)=0;
	virtual void setToomany(bool val)=0;
	virtual void setPosixok(bool val)=0;
	virtual void setUsers(IArrayOf<IEspUserInfo> &val)=0;
	virtual void setUsers(IArrayOf<IConstUserInfo> &val)=0;
	virtual void copy(IConstUserResponse &from)=0;
};

interface IClientUserResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr()=0;
	virtual bool getToomany()=0;
	virtual bool getPosixok()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
};



interface IConstUserQueryRequest : extends IEspRequest
{
	virtual const char * getName()=0;
	virtual bool getPageSize_isNull()=0;
	virtual unsigned int getPageSize()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual CUserSortBy getSortBy()=0;
	virtual const char* getSortByAsString()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspUserQueryRequest : extends IConstUserQueryRequest
{
	virtual void setName(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CUserSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstUserQueryRequest &from)=0;
};

interface IClientUserQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setName(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CUserSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
};



interface IConstUserQueryResponse : extends IEspResponse
{
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual bool getTotalUsers_isNull()=0;
	virtual __int64 getTotalUsers()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspUserQueryResponse : extends IConstUserQueryResponse
{
	virtual void setNoSecMngr_null()=0;
	virtual void setNoSecMngr(bool val)=0;
	virtual void setUsers(IArrayOf<IEspUserInfo> &val)=0;
	virtual void setUsers(IArrayOf<IConstUserInfo> &val)=0;
	virtual void setTotalUsers_null()=0;
	virtual void setTotalUsers(__int64 val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstUserQueryResponse &from)=0;
};

interface IClientUserQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual bool getTotalUsers_isNull()=0;
	virtual __int64 getTotalUsers()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};



interface IConstUserEditRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
};

interface IEspUserEditRequest : extends IConstUserEditRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstUserEditRequest &from)=0;
};

interface IClientUserEditRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
};



interface IConstUserEditResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
};

interface IEspUserEditResponse : extends IConstUserEditResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setGroups(IArrayOf<IEspGroupInfo> &val)=0;
	virtual void setGroups(IArrayOf<IConstGroupInfo> &val)=0;
	virtual void copy(IConstUserEditResponse &from)=0;
};

interface IClientUserEditResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
};



interface IConstUserGroupEditInputRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
};

interface IEspUserGroupEditInputRequest : extends IConstUserGroupEditInputRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstUserGroupEditInputRequest &from)=0;
};

interface IClientUserGroupEditInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
};



interface IConstUserGroupEditInputResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
};

interface IEspUserGroupEditInputResponse : extends IConstUserGroupEditInputResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setGroups(IArrayOf<IEspGroupInfo> &val)=0;
	virtual void setGroups(IArrayOf<IConstGroupInfo> &val)=0;
	virtual void copy(IConstUserGroupEditInputResponse &from)=0;
};

interface IClientUserGroupEditInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
};




interface IConstUserGroupEditRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
	virtual const char * getAction()=0;
	virtual StringArray & getGroupnames()=0;
};

interface IEspUserGroupEditRequest : extends IConstUserGroupEditRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setGroupnames(StringArray &val)=0;
	virtual void copy(IConstUserGroupEditRequest &from)=0;
};

interface IClientUserGroupEditRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setGroupnames(StringArray &val)=0;
};



interface IConstUserGroupEditResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual const char * getAction()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspUserGroupEditResponse : extends IConstUserGroupEditResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstUserGroupEditResponse &from)=0;
};

interface IClientUserGroupEditResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual const char * getAction()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};




interface IConstUserPosixInputRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
};

interface IEspUserPosixInputRequest : extends IConstUserPosixInputRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstUserPosixInputRequest &from)=0;
};

interface IClientUserPosixInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
};



interface IConstUserPosixInputResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual bool getPosixenabled()=0;
	virtual const char * getGidnumber()=0;
	virtual const char * getUidnumber()=0;
	virtual const char * getHomedirectory()=0;
	virtual const char * getLoginshell()=0;
};

interface IEspUserPosixInputResponse : extends IConstUserPosixInputResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setPosixenabled(bool val)=0;
	virtual void setGidnumber(const char * val)=0;
	virtual void setUidnumber(const char * val)=0;
	virtual void setHomedirectory(const char * val)=0;
	virtual void setLoginshell(const char * val)=0;
	virtual void copy(IConstUserPosixInputResponse &from)=0;
};

interface IClientUserPosixInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual bool getPosixenabled()=0;
	virtual const char * getGidnumber()=0;
	virtual const char * getUidnumber()=0;
	virtual const char * getHomedirectory()=0;
	virtual const char * getLoginshell()=0;
};



interface IConstUserPosixRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
	virtual bool getPosixenabled()=0;
	virtual const char * getGidnumber()=0;
	virtual const char * getUidnumber()=0;
	virtual const char * getHomedirectory()=0;
	virtual const char * getLoginshell()=0;
};

interface IEspUserPosixRequest : extends IConstUserPosixRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void setPosixenabled(bool val)=0;
	virtual void setGidnumber(const char * val)=0;
	virtual void setUidnumber(const char * val)=0;
	virtual void setHomedirectory(const char * val)=0;
	virtual void setLoginshell(const char * val)=0;
	virtual void copy(IConstUserPosixRequest &from)=0;
};

interface IClientUserPosixRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
	virtual void setPosixenabled(bool val)=0;
	virtual void setGidnumber(const char * val)=0;
	virtual void setUidnumber(const char * val)=0;
	virtual void setHomedirectory(const char * val)=0;
	virtual void setLoginshell(const char * val)=0;
};



interface IConstUserPosixResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspUserPosixResponse : extends IConstUserPosixResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstUserPosixResponse &from)=0;
};

interface IClientUserPosixResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstUserSudoersInputRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
};

interface IEspUserSudoersInputRequest : extends IConstUserSudoersInputRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstUserSudoersInputRequest &from)=0;
};

interface IClientUserSudoersInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
};



interface IConstUserSudoersInputResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual bool getInsudoers()=0;
	virtual const char * getSudoHost()=0;
	virtual const char * getSudoCommand()=0;
	virtual const char * getSudoOption()=0;
};

interface IEspUserSudoersInputResponse : extends IConstUserSudoersInputResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setInsudoers(bool val)=0;
	virtual void setSudoHost(const char * val)=0;
	virtual void setSudoCommand(const char * val)=0;
	virtual void setSudoOption(const char * val)=0;
	virtual void copy(IConstUserSudoersInputResponse &from)=0;
};

interface IClientUserSudoersInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual bool getInsudoers()=0;
	virtual const char * getSudoHost()=0;
	virtual const char * getSudoCommand()=0;
	virtual const char * getSudoOption()=0;
};



interface IConstUserSudoersRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
	virtual const char * getAction()=0;
	virtual const char * getSudoHost()=0;
	virtual const char * getSudoCommand()=0;
	virtual const char * getSudoOption()=0;
};

interface IEspUserSudoersRequest : extends IConstUserSudoersRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setSudoHost(const char * val)=0;
	virtual void setSudoCommand(const char * val)=0;
	virtual void setSudoOption(const char * val)=0;
	virtual void copy(IConstUserSudoersRequest &from)=0;
};

interface IClientUserSudoersRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setSudoHost(const char * val)=0;
	virtual void setSudoCommand(const char * val)=0;
	virtual void setSudoOption(const char * val)=0;
};



interface IConstUserSudoersResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspUserSudoersResponse : extends IConstUserSudoersResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstUserSudoersResponse &from)=0;
};

interface IClientUserSudoersResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstUserInfoEditInputRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
};

interface IEspUserInfoEditInputRequest : extends IConstUserInfoEditInputRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstUserInfoEditInputRequest &from)=0;
};

interface IClientUserInfoEditInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
};



interface IConstUserInfoEditInputResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual const char * getFirstname()=0;
	virtual const char * getLastname()=0;
	virtual const char * getEmployeeID()=0;
	virtual const char * getPasswordExpiration()=0;
};

interface IEspUserInfoEditInputResponse : extends IConstUserInfoEditInputResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setFirstname(const char * val)=0;
	virtual void setLastname(const char * val)=0;
	virtual void setEmployeeID(const char * val)=0;
	virtual void setPasswordExpiration(const char * val)=0;
	virtual void copy(IConstUserInfoEditInputResponse &from)=0;
};

interface IClientUserInfoEditInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual const char * getFirstname()=0;
	virtual const char * getLastname()=0;
	virtual const char * getEmployeeID()=0;
	virtual const char * getPasswordExpiration()=0;
};



interface IConstUserInfoEditRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
	virtual const char * getFirstname()=0;
	virtual const char * getLastname()=0;
	virtual const char * getEmployeeID()=0;
};

interface IEspUserInfoEditRequest : extends IConstUserInfoEditRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void setFirstname(const char * val)=0;
	virtual void setLastname(const char * val)=0;
	virtual void setEmployeeID(const char * val)=0;
	virtual void copy(IConstUserInfoEditRequest &from)=0;
};

interface IClientUserInfoEditRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
	virtual void setFirstname(const char * val)=0;
	virtual void setLastname(const char * val)=0;
	virtual void setEmployeeID(const char * val)=0;
};



interface IConstUserInfoEditResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspUserInfoEditResponse : extends IConstUserInfoEditResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstUserInfoEditResponse &from)=0;
};

interface IClientUserInfoEditResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstAddUserRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
	virtual const char * getFirstname()=0;
	virtual const char * getLastname()=0;
	virtual const char * getPassword1()=0;
	virtual const char * getPassword2()=0;
	virtual const char * getEmployeeID()=0;
};

interface IEspAddUserRequest : extends IConstAddUserRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void setFirstname(const char * val)=0;
	virtual void setLastname(const char * val)=0;
	virtual void setPassword1(const char * val)=0;
	virtual void setPassword2(const char * val)=0;
	virtual void setEmployeeID(const char * val)=0;
	virtual void copy(IConstAddUserRequest &from)=0;
};

interface IClientAddUserRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
	virtual void setFirstname(const char * val)=0;
	virtual void setLastname(const char * val)=0;
	virtual void setPassword1(const char * val)=0;
	virtual void setPassword2(const char * val)=0;
	virtual void setEmployeeID(const char * val)=0;
};



interface IConstAddUserResponse : extends IEspResponse
{
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspAddUserResponse : extends IConstAddUserResponse
{
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstAddUserResponse &from)=0;
};

interface IClientAddUserResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstUserActionRequest : extends IEspRequest
{
	virtual const char * getAction()=0;
	virtual const char * getActionType()=0;
	virtual StringArray & getUsernames()=0;
};

interface IEspUserActionRequest : extends IConstUserActionRequest
{
	virtual void setAction(const char * val)=0;
	virtual void setActionType(const char * val)=0;
	virtual void setUsernames(StringArray &val)=0;
	virtual void copy(IConstUserActionRequest &from)=0;
};

interface IClientUserActionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setAction(const char * val)=0;
	virtual void setActionType(const char * val)=0;
	virtual void setUsernames(StringArray &val)=0;
};



interface IConstUserActionResponse : extends IEspResponse
{
	virtual const char * getAction()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspUserActionResponse : extends IConstUserActionResponse
{
	virtual void setAction(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstUserActionResponse &from)=0;
};

interface IClientUserActionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getAction()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstUserResetPassInputRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
};

interface IEspUserResetPassInputRequest : extends IConstUserResetPassInputRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstUserResetPassInputRequest &from)=0;
};

interface IClientUserResetPassInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
};



interface IConstUserResetPassInputResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
};

interface IEspUserResetPassInputResponse : extends IConstUserResetPassInputResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstUserResetPassInputResponse &from)=0;
};

interface IClientUserResetPassInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
};



interface IConstUserResetPassRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
	virtual const char * getNewPassword()=0;
	virtual const char * getNewPasswordRetype()=0;
};

interface IEspUserResetPassRequest : extends IConstUserResetPassRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void setNewPassword(const char * val)=0;
	virtual void setNewPasswordRetype(const char * val)=0;
	virtual void copy(IConstUserResetPassRequest &from)=0;
};

interface IClientUserResetPassRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
	virtual void setNewPassword(const char * val)=0;
	virtual void setNewPasswordRetype(const char * val)=0;
};



interface IConstUserResetPassResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspUserResetPassResponse : extends IConstUserResetPassResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstUserResetPassResponse &from)=0;
};

interface IClientUserResetPassResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstGroupRequest : extends IEspRequest
{
};

interface IEspGroupRequest : extends IConstGroupRequest
{
	virtual void copy(IConstGroupRequest &from)=0;
};

interface IClientGroupRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstGroupResponse : extends IEspResponse
{
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
};

interface IEspGroupResponse : extends IConstGroupResponse
{
	virtual void setNoSecMngr(bool val)=0;
	virtual void setGroups(IArrayOf<IEspGroupInfo> &val)=0;
	virtual void setGroups(IArrayOf<IConstGroupInfo> &val)=0;
	virtual void copy(IConstGroupResponse &from)=0;
};

interface IClientGroupResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
};



interface IConstGroupQueryRequest : extends IEspRequest
{
	virtual bool getPageSize_isNull()=0;
	virtual unsigned int getPageSize()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual CGroupSortBy getSortBy()=0;
	virtual const char* getSortByAsString()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspGroupQueryRequest : extends IConstGroupQueryRequest
{
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CGroupSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstGroupQueryRequest &from)=0;
};

interface IClientGroupQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CGroupSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
};



interface IConstGroupQueryResponse : extends IEspResponse
{
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
	virtual bool getTotalGroups_isNull()=0;
	virtual __int64 getTotalGroups()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspGroupQueryResponse : extends IConstGroupQueryResponse
{
	virtual void setNoSecMngr_null()=0;
	virtual void setNoSecMngr(bool val)=0;
	virtual void setGroups(IArrayOf<IEspGroupInfo> &val)=0;
	virtual void setGroups(IArrayOf<IConstGroupInfo> &val)=0;
	virtual void setTotalGroups_null()=0;
	virtual void setTotalGroups(__int64 val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstGroupQueryResponse &from)=0;
};

interface IClientGroupQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
	virtual bool getTotalGroups_isNull()=0;
	virtual __int64 getTotalGroups()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};



interface IConstGroupAddRequest : extends IEspRequest
{
	virtual const char * getGroupname()=0;
	virtual const char * getGroupOwner()=0;
	virtual const char * getGroupDesc()=0;
};

interface IEspGroupAddRequest : extends IConstGroupAddRequest
{
	virtual void setGroupname(const char * val)=0;
	virtual void setGroupOwner(const char * val)=0;
	virtual void setGroupDesc(const char * val)=0;
	virtual void copy(IConstGroupAddRequest &from)=0;
};

interface IClientGroupAddRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setGroupname(const char * val)=0;
	virtual void setGroupOwner(const char * val)=0;
	virtual void setGroupDesc(const char * val)=0;
};



interface IConstGroupAddResponse : extends IEspResponse
{
	virtual const char * getGroupname()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspGroupAddResponse : extends IConstGroupAddResponse
{
	virtual void setGroupname(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstGroupAddResponse &from)=0;
};

interface IClientGroupAddResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getGroupname()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstGroupActionRequest : extends IEspRequest
{
	virtual StringArray & getGroupnames()=0;
	virtual const char * getActionType()=0;
	virtual bool getDeletePermission_isNull()=0;
	virtual bool getDeletePermission()=0;
};

interface IEspGroupActionRequest : extends IConstGroupActionRequest
{
	virtual void setGroupnames(StringArray &val)=0;
	virtual void setActionType(const char * val)=0;
	virtual void setDeletePermission_null()=0;
	virtual void setDeletePermission(bool val)=0;
	virtual void copy(IConstGroupActionRequest &from)=0;
};

interface IClientGroupActionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setGroupnames(StringArray &val)=0;
	virtual void setActionType(const char * val)=0;
	virtual void setDeletePermission_null()=0;
	virtual void setDeletePermission(bool val)=0;
};



interface IConstGroupActionResponse : extends IEspResponse
{
	virtual const char * getGroupnames()=0;
	virtual IArrayOf<IConstAccountPermission> & getPermissions()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspGroupActionResponse : extends IConstGroupActionResponse
{
	virtual void setGroupnames(const char * val)=0;
	virtual void setPermissions(IArrayOf<IEspAccountPermission> &val)=0;
	virtual void setPermissions(IArrayOf<IConstAccountPermission> &val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstGroupActionResponse &from)=0;
};

interface IClientGroupActionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getGroupnames()=0;
	virtual IArrayOf<IConstAccountPermission> & getPermissions()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};




interface IConstGroupEditRequest : extends IEspRequest
{
	virtual const char * getGroupname()=0;
};

interface IEspGroupEditRequest : extends IConstGroupEditRequest
{
	virtual void setGroupname(const char * val)=0;
	virtual void copy(IConstGroupEditRequest &from)=0;
};

interface IClientGroupEditRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setGroupname(const char * val)=0;
};



interface IConstGroupEditResponse : extends IEspResponse
{
	virtual const char * getGroupname()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
};

interface IEspGroupEditResponse : extends IConstGroupEditResponse
{
	virtual void setGroupname(const char * val)=0;
	virtual void setUsers(IArrayOf<IEspUserInfo> &val)=0;
	virtual void setUsers(IArrayOf<IConstUserInfo> &val)=0;
	virtual void copy(IConstGroupEditResponse &from)=0;
};

interface IClientGroupEditResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getGroupname()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
};



interface IConstGroupMemberQueryRequest : extends IEspRequest
{
	virtual const char * getGroupName()=0;
	virtual bool getPageSize_isNull()=0;
	virtual unsigned int getPageSize()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual CUserSortBy getSortBy()=0;
	virtual const char* getSortByAsString()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspGroupMemberQueryRequest : extends IConstGroupMemberQueryRequest
{
	virtual void setGroupName(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CUserSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstGroupMemberQueryRequest &from)=0;
};

interface IClientGroupMemberQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setGroupName(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CUserSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
};



interface IConstGroupMemberQueryResponse : extends IEspResponse
{
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual bool getTotalUsers_isNull()=0;
	virtual __int64 getTotalUsers()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspGroupMemberQueryResponse : extends IConstGroupMemberQueryResponse
{
	virtual void setNoSecMngr_null()=0;
	virtual void setNoSecMngr(bool val)=0;
	virtual void setUsers(IArrayOf<IEspUserInfo> &val)=0;
	virtual void setUsers(IArrayOf<IConstUserInfo> &val)=0;
	virtual void setTotalUsers_null()=0;
	virtual void setTotalUsers(__int64 val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstGroupMemberQueryResponse &from)=0;
};

interface IClientGroupMemberQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual bool getTotalUsers_isNull()=0;
	virtual __int64 getTotalUsers()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};



interface IConstGroupMemberEditInputRequest : extends IEspRequest
{
	virtual const char * getSearchinput()=0;
	virtual const char * getGroupname()=0;
};

interface IEspGroupMemberEditInputRequest : extends IConstGroupMemberEditInputRequest
{
	virtual void setSearchinput(const char * val)=0;
	virtual void setGroupname(const char * val)=0;
	virtual void copy(IConstGroupMemberEditInputRequest &from)=0;
};

interface IClientGroupMemberEditInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setSearchinput(const char * val)=0;
	virtual void setGroupname(const char * val)=0;
};



interface IConstGroupMemberEditInputResponse : extends IEspResponse
{
	virtual const char * getGroupname()=0;
	virtual bool getToomany()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
};

interface IEspGroupMemberEditInputResponse : extends IConstGroupMemberEditInputResponse
{
	virtual void setGroupname(const char * val)=0;
	virtual void setToomany(bool val)=0;
	virtual void setUsers(IArrayOf<IEspUserInfo> &val)=0;
	virtual void setUsers(IArrayOf<IConstUserInfo> &val)=0;
	virtual void copy(IConstGroupMemberEditInputResponse &from)=0;
};

interface IClientGroupMemberEditInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getGroupname()=0;
	virtual bool getToomany()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
};



interface IConstGroupMemberEditRequest : extends IEspRequest
{
	virtual const char * getGroupname()=0;
	virtual const char * getAction()=0;
	virtual StringArray & getUsernames()=0;
};

interface IEspGroupMemberEditRequest : extends IConstGroupMemberEditRequest
{
	virtual void setGroupname(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setUsernames(StringArray &val)=0;
	virtual void copy(IConstGroupMemberEditRequest &from)=0;
};

interface IClientGroupMemberEditRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setGroupname(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setUsernames(StringArray &val)=0;
};



interface IConstGroupMemberEditResponse : extends IEspResponse
{
	virtual const char * getGroupname()=0;
	virtual const char * getAction()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspGroupMemberEditResponse : extends IConstGroupMemberEditResponse
{
	virtual void setGroupname(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstGroupMemberEditResponse &from)=0;
};

interface IClientGroupMemberEditResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getGroupname()=0;
	virtual const char * getAction()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstBasednsRequest : extends IEspRequest
{
};

interface IEspBasednsRequest : extends IConstBasednsRequest
{
	virtual void copy(IConstBasednsRequest &from)=0;
};

interface IClientBasednsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstDnStruct : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getTemplatename()=0;
};

interface IEspDnStruct : extends IConstDnStruct
{
	virtual void setName(const char * val)=0;
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setTemplatename(const char * val)=0;
	virtual void copy(IConstDnStruct &from)=0;
};

interface IClientDnStruct : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setTemplatename(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getTemplatename()=0;
};



interface IConstBasednsResponse : extends IEspResponse
{
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstDnStruct> & getBasedns()=0;
};

interface IEspBasednsResponse : extends IConstBasednsResponse
{
	virtual void setNoSecMngr(bool val)=0;
	virtual void setBasedns(IArrayOf<IEspDnStruct> &val)=0;
	virtual void setBasedns(IArrayOf<IConstDnStruct> &val)=0;
	virtual void copy(IConstBasednsResponse &from)=0;
};

interface IClientBasednsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstDnStruct> & getBasedns()=0;
};



interface IConstResourcesRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getTemplatename()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getSearchinput()=0;
};

interface IEspResourcesRequest : extends IConstResourcesRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setTemplatename(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setSearchinput(const char * val)=0;
	virtual void copy(IConstResourcesRequest &from)=0;
};

interface IClientResourcesRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setTemplatename(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setSearchinput(const char * val)=0;
};



interface IConstResource : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getDescription()=0;
	virtual bool getIsSpecial()=0;
};

interface IEspResource : extends IConstResource
{
	virtual void setName(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setIsSpecial(bool val)=0;
	virtual void copy(IConstResource &from)=0;
};

interface IClientResource : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setIsSpecial(bool val)=0;
	virtual const char * getName()=0;
	virtual const char * getDescription()=0;
	virtual bool getIsSpecial()=0;
};



interface IConstScopeScanStatusStruct : extends IEspStruct
{
	virtual bool getIsEnabled()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspScopeScanStatusStruct : extends IConstScopeScanStatusStruct
{
	virtual void setIsEnabled(bool val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstScopeScanStatusStruct &from)=0;
};

interface IClientScopeScanStatusStruct : extends IInterface
{
	virtual void setIsEnabled(bool val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual bool getIsEnabled()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstResourcesResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual IArrayOf<IConstResource> & getResources()=0;
	virtual const char * getDefault_basedn()=0;
	virtual const char * getDefault_name()=0;
	virtual const char * getPrefix()=0;
	virtual bool getToomany()=0;
	virtual IConstScopeScanStatusStruct & getScopeScansStatus()=0;
};

interface IEspResourcesResponse : extends IConstResourcesResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setResources(IArrayOf<IEspResource> &val)=0;
	virtual void setResources(IArrayOf<IConstResource> &val)=0;
	virtual void setDefault_basedn(const char * val)=0;
	virtual void setDefault_name(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setToomany(bool val)=0;
	virtual IEspScopeScanStatusStruct & updateScopeScansStatus()=0;
	virtual void setScopeScansStatus(IConstScopeScanStatusStruct &ifrom)=0;
	virtual void copy(IConstResourcesResponse &from)=0;
};

interface IClientResourcesResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual IArrayOf<IConstResource> & getResources()=0;
	virtual const char * getDefault_basedn()=0;
	virtual const char * getDefault_name()=0;
	virtual const char * getPrefix()=0;
	virtual bool getToomany()=0;
	virtual IConstScopeScanStatusStruct & getScopeScansStatus()=0;
};



interface IConstResourceQueryRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getName()=0;
	virtual bool getPageSize_isNull()=0;
	virtual unsigned int getPageSize()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual CResourceSortBy getSortBy()=0;
	virtual const char* getSortByAsString()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspResourceQueryRequest : extends IConstResourceQueryRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CResourceSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstResourceQueryRequest &from)=0;
};

interface IClientResourceQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CResourceSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
};



interface IConstResourceQueryResponse : extends IEspResponse
{
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstResource> & getResources()=0;
	virtual bool getTotalResources_isNull()=0;
	virtual __int64 getTotalResources()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspResourceQueryResponse : extends IConstResourceQueryResponse
{
	virtual void setNoSecMngr_null()=0;
	virtual void setNoSecMngr(bool val)=0;
	virtual void setResources(IArrayOf<IEspResource> &val)=0;
	virtual void setResources(IArrayOf<IConstResource> &val)=0;
	virtual void setTotalResources_null()=0;
	virtual void setTotalResources(__int64 val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstResourceQueryResponse &from)=0;
};

interface IClientResourceQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstResource> & getResources()=0;
	virtual bool getTotalResources_isNull()=0;
	virtual __int64 getTotalResources()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};



interface IConstResourceAddInputRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
};

interface IEspResourceAddInputRequest : extends IConstResourceAddInputRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void copy(IConstResourceAddInputRequest &from)=0;
};

interface IClientResourceAddInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
};



interface IConstResourceAddInputResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
};

interface IEspResourceAddInputResponse : extends IConstResourceAddInputResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void copy(IConstResourceAddInputResponse &from)=0;
};

interface IClientResourceAddInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
};



interface IConstResourceAddRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getName()=0;
	virtual const char * getDescription()=0;
	virtual const char * getPrefix()=0;
};

interface IEspResourceAddRequest : extends IConstResourceAddRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void copy(IConstResourceAddRequest &from)=0;
};

interface IClientResourceAddRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
};



interface IConstResourceAddResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspResourceAddResponse : extends IConstResourceAddResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstResourceAddResponse &from)=0;
};

interface IClientResourceAddResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstResourceDeleteRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual StringArray & getNames()=0;
	virtual int getDoUpdate()=0;
};

interface IEspResourceDeleteRequest : extends IConstResourceDeleteRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setNames(StringArray &val)=0;
	virtual void setDoUpdate(int val)=0;
	virtual void copy(IConstResourceDeleteRequest &from)=0;
};

interface IClientResourceDeleteRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setNames(StringArray &val)=0;
	virtual void setDoUpdate(int val)=0;
};



interface IConstResourceDeleteResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspResourceDeleteResponse : extends IConstResourceDeleteResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstResourceDeleteResponse &from)=0;
};

interface IClientResourceDeleteResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstResourcePermissionsRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getName()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
};

interface IEspResourcePermissionsRequest : extends IConstResourcePermissionsRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void copy(IConstResourcePermissionsRequest &from)=0;
};

interface IClientResourcePermissionsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
};



interface IConstResourcePermission : extends IEspStruct
{
	virtual const char * getAccount_name()=0;
	virtual const char * getEscaped_account_name()=0;
	virtual int getAccount_type()=0;
	virtual bool getAllow_access()=0;
	virtual bool getAllow_read()=0;
	virtual bool getAllow_write()=0;
	virtual bool getAllow_full()=0;
	virtual bool getDeny_access()=0;
	virtual bool getDeny_read()=0;
	virtual bool getDeny_write()=0;
	virtual bool getDeny_full()=0;
};

interface IEspResourcePermission : extends IConstResourcePermission
{
	virtual void setAccount_name(const char * val)=0;
	virtual void setEscaped_account_name(const char * val)=0;
	virtual void setAccount_type(int val)=0;
	virtual void setAllow_access(bool val)=0;
	virtual void setAllow_read(bool val)=0;
	virtual void setAllow_write(bool val)=0;
	virtual void setAllow_full(bool val)=0;
	virtual void setDeny_access(bool val)=0;
	virtual void setDeny_read(bool val)=0;
	virtual void setDeny_write(bool val)=0;
	virtual void setDeny_full(bool val)=0;
	virtual void copy(IConstResourcePermission &from)=0;
};

interface IClientResourcePermission : extends IInterface
{
	virtual void setAccount_name(const char * val)=0;
	virtual void setEscaped_account_name(const char * val)=0;
	virtual void setAccount_type(int val)=0;
	virtual void setAllow_access(bool val)=0;
	virtual void setAllow_read(bool val)=0;
	virtual void setAllow_write(bool val)=0;
	virtual void setAllow_full(bool val)=0;
	virtual void setDeny_access(bool val)=0;
	virtual void setDeny_read(bool val)=0;
	virtual void setDeny_write(bool val)=0;
	virtual void setDeny_full(bool val)=0;
	virtual const char * getAccount_name()=0;
	virtual const char * getEscaped_account_name()=0;
	virtual int getAccount_type()=0;
	virtual bool getAllow_access()=0;
	virtual bool getAllow_read()=0;
	virtual bool getAllow_write()=0;
	virtual bool getAllow_full()=0;
	virtual bool getDeny_access()=0;
	virtual bool getDeny_read()=0;
	virtual bool getDeny_write()=0;
	virtual bool getDeny_full()=0;
};



interface IConstResourcePermissionsResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getName()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual IArrayOf<IConstResourcePermission> & getPermissions()=0;
};

interface IEspResourcePermissionsResponse : extends IConstResourcePermissionsResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setPermissions(IArrayOf<IEspResourcePermission> &val)=0;
	virtual void setPermissions(IArrayOf<IConstResourcePermission> &val)=0;
	virtual void copy(IConstResourcePermissionsResponse &from)=0;
};

interface IClientResourcePermissionsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getName()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual IArrayOf<IConstResourcePermission> & getPermissions()=0;
};



interface IConstResourcePermissionQueryRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getName()=0;
	virtual CAccountTypeReq getAccountType()=0;
	virtual const char* getAccountTypeAsString()=0;
	virtual bool getPageSize_isNull()=0;
	virtual unsigned int getPageSize()=0;
	virtual bool getPageStartFrom_isNull()=0;
	virtual __int64 getPageStartFrom()=0;
	virtual CResourcePermissionSortBy getSortBy()=0;
	virtual const char* getSortByAsString()=0;
	virtual bool getDescending_isNull()=0;
	virtual bool getDescending()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspResourcePermissionQueryRequest : extends IConstResourcePermissionQueryRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setAccountType(CAccountTypeReq val)=0;
	virtual void setAccountType(const char* val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CResourcePermissionSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstResourcePermissionQueryRequest &from)=0;
};

interface IClientResourcePermissionQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setAccountType(CAccountTypeReq val)=0;
	virtual void setAccountType(const char* val)=0;
	virtual void setPageSize_null()=0;
	virtual void setPageSize(unsigned int val)=0;
	virtual void setPageStartFrom_null()=0;
	virtual void setPageStartFrom(__int64 val)=0;
	virtual void setSortBy(CResourcePermissionSortBy val)=0;
	virtual void setSortBy(const char* val)=0;
	virtual void setDescending_null()=0;
	virtual void setDescending(bool val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
};



interface IConstResourcePermissionQueryResponse : extends IEspResponse
{
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstResourcePermission> & getPermissions()=0;
	virtual bool getTotalResourcePermissions_isNull()=0;
	virtual __int64 getTotalResourcePermissions()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};

interface IEspResourcePermissionQueryResponse : extends IConstResourcePermissionQueryResponse
{
	virtual void setNoSecMngr_null()=0;
	virtual void setNoSecMngr(bool val)=0;
	virtual void setPermissions(IArrayOf<IEspResourcePermission> &val)=0;
	virtual void setPermissions(IArrayOf<IConstResourcePermission> &val)=0;
	virtual void setTotalResourcePermissions_null()=0;
	virtual void setTotalResourcePermissions(__int64 val)=0;
	virtual void setCacheHint_null()=0;
	virtual void setCacheHint(__int64 val)=0;
	virtual void copy(IConstResourcePermissionQueryResponse &from)=0;
};

interface IClientResourcePermissionQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual IArrayOf<IConstResourcePermission> & getPermissions()=0;
	virtual bool getTotalResourcePermissions_isNull()=0;
	virtual __int64 getTotalResourcePermissions()=0;
	virtual bool getCacheHint_isNull()=0;
	virtual __int64 getCacheHint()=0;
};





interface IConstView : extends IEspStruct
{
	virtual const char * getViewname()=0;
	virtual const char * getDescription()=0;
};

interface IEspView : extends IConstView
{
	virtual void setViewname(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void copy(IConstView &from)=0;
};

interface IClientView : extends IInterface
{
	virtual void setViewname(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual const char * getViewname()=0;
	virtual const char * getDescription()=0;
};



interface IConstQueryViewsRequest : extends IEspRequest
{
};

interface IEspQueryViewsRequest : extends IConstQueryViewsRequest
{
	virtual void copy(IConstQueryViewsRequest &from)=0;
};

interface IClientQueryViewsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstQueryViewsResponse : extends IEspResponse
{
	virtual IArrayOf<IConstView> & getViews()=0;
};

interface IEspQueryViewsResponse : extends IConstQueryViewsResponse
{
	virtual void setViews(IArrayOf<IEspView> &val)=0;
	virtual void setViews(IArrayOf<IConstView> &val)=0;
	virtual void copy(IConstQueryViewsResponse &from)=0;
};

interface IClientQueryViewsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstView> & getViews()=0;
};



interface IConstAddViewRequest : extends IEspRequest
{
	virtual const char * getViewname()=0;
	virtual const char * getDescription()=0;
};

interface IEspAddViewRequest : extends IConstAddViewRequest
{
	virtual void setViewname(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void copy(IConstAddViewRequest &from)=0;
};

interface IClientAddViewRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setViewname(const char * val)=0;
	virtual void setDescription(const char * val)=0;
};



interface IConstAddViewResponse : extends IEspResponse
{
	virtual const char * getViewname()=0;
	virtual const char * getDescription()=0;
};

interface IEspAddViewResponse : extends IConstAddViewResponse
{
	virtual void setViewname(const char * val)=0;
	virtual void setDescription(const char * val)=0;
	virtual void copy(IConstAddViewResponse &from)=0;
};

interface IClientAddViewResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getViewname()=0;
	virtual const char * getDescription()=0;
};



interface IConstDeleteViewRequest : extends IEspRequest
{
	virtual const char * getViewname()=0;
};

interface IEspDeleteViewRequest : extends IConstDeleteViewRequest
{
	virtual void setViewname(const char * val)=0;
	virtual void copy(IConstDeleteViewRequest &from)=0;
};

interface IClientDeleteViewRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setViewname(const char * val)=0;
};



interface IConstDeleteViewResponse : extends IEspResponse
{
	virtual const char * getViewname()=0;
};

interface IEspDeleteViewResponse : extends IConstDeleteViewResponse
{
	virtual void setViewname(const char * val)=0;
	virtual void copy(IConstDeleteViewResponse &from)=0;
};

interface IClientDeleteViewResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getViewname()=0;
};



interface IConstViewColumn : extends IEspStruct
{
	virtual const char * getViewname()=0;
	virtual const char * getFilename()=0;
	virtual const char * getColumnname()=0;
};

interface IEspViewColumn : extends IConstViewColumn
{
	virtual void setViewname(const char * val)=0;
	virtual void setFilename(const char * val)=0;
	virtual void setColumnname(const char * val)=0;
	virtual void copy(IConstViewColumn &from)=0;
};

interface IClientViewColumn : extends IInterface
{
	virtual void setViewname(const char * val)=0;
	virtual void setFilename(const char * val)=0;
	virtual void setColumnname(const char * val)=0;
	virtual const char * getViewname()=0;
	virtual const char * getFilename()=0;
	virtual const char * getColumnname()=0;
};



interface IConstQueryViewColumnsRequest : extends IEspRequest
{
	virtual const char * getViewname()=0;
};

interface IEspQueryViewColumnsRequest : extends IConstQueryViewColumnsRequest
{
	virtual void setViewname(const char * val)=0;
	virtual void copy(IConstQueryViewColumnsRequest &from)=0;
};

interface IClientQueryViewColumnsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setViewname(const char * val)=0;
};



interface IConstQueryViewColumnsResponse : extends IEspResponse
{
	virtual const char * getViewname()=0;
	virtual IArrayOf<IConstViewColumn> & getViewcolumns()=0;
};

interface IEspQueryViewColumnsResponse : extends IConstQueryViewColumnsResponse
{
	virtual void setViewname(const char * val)=0;
	virtual void setViewcolumns(IArrayOf<IEspViewColumn> &val)=0;
	virtual void setViewcolumns(IArrayOf<IConstViewColumn> &val)=0;
	virtual void copy(IConstQueryViewColumnsResponse &from)=0;
};

interface IClientQueryViewColumnsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getViewname()=0;
	virtual IArrayOf<IConstViewColumn> & getViewcolumns()=0;
};



interface IConstAddViewColumnRequest : extends IEspRequest
{
	virtual const char * getViewname()=0;
	virtual const char * getFilename()=0;
	virtual const char * getColumnname()=0;
};

interface IEspAddViewColumnRequest : extends IConstAddViewColumnRequest
{
	virtual void setViewname(const char * val)=0;
	virtual void setFilename(const char * val)=0;
	virtual void setColumnname(const char * val)=0;
	virtual void copy(IConstAddViewColumnRequest &from)=0;
};

interface IClientAddViewColumnRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setViewname(const char * val)=0;
	virtual void setFilename(const char * val)=0;
	virtual void setColumnname(const char * val)=0;
};



interface IConstAddViewColumnResponse : extends IEspResponse
{
	virtual const char * getViewname()=0;
	virtual const char * getFilename()=0;
	virtual const char * getColumnname()=0;
};

interface IEspAddViewColumnResponse : extends IConstAddViewColumnResponse
{
	virtual void setViewname(const char * val)=0;
	virtual void setFilename(const char * val)=0;
	virtual void setColumnname(const char * val)=0;
	virtual void copy(IConstAddViewColumnResponse &from)=0;
};

interface IClientAddViewColumnResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getViewname()=0;
	virtual const char * getFilename()=0;
	virtual const char * getColumnname()=0;
};



interface IConstDeleteViewColumnRequest : extends IEspRequest
{
	virtual const char * getViewname()=0;
	virtual const char * getFilename()=0;
	virtual const char * getColumnname()=0;
};

interface IEspDeleteViewColumnRequest : extends IConstDeleteViewColumnRequest
{
	virtual void setViewname(const char * val)=0;
	virtual void setFilename(const char * val)=0;
	virtual void setColumnname(const char * val)=0;
	virtual void copy(IConstDeleteViewColumnRequest &from)=0;
};

interface IClientDeleteViewColumnRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setViewname(const char * val)=0;
	virtual void setFilename(const char * val)=0;
	virtual void setColumnname(const char * val)=0;
};



interface IConstDeleteViewColumnResponse : extends IEspResponse
{
	virtual const char * getViewname()=0;
	virtual const char * getFilename()=0;
	virtual const char * getColumnname()=0;
};

interface IEspDeleteViewColumnResponse : extends IConstDeleteViewColumnResponse
{
	virtual void setViewname(const char * val)=0;
	virtual void setFilename(const char * val)=0;
	virtual void setColumnname(const char * val)=0;
	virtual void copy(IConstDeleteViewColumnResponse &from)=0;
};

interface IClientDeleteViewColumnResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getViewname()=0;
	virtual const char * getFilename()=0;
	virtual const char * getColumnname()=0;
};



enum CViewMemberType { ViewMemberType_Undefined=-1,CViewMemberType_User, CViewMemberType_Group, };
typedef ArrayOf<CViewMemberType> ViewMemberTypeArray;


interface IConstViewMember : extends IEspStruct
{
	virtual const char * getViewname()=0;
	virtual const char * getName()=0;
	virtual CViewMemberType getMembertype()=0;
	virtual const char* getMembertypeAsString()=0;
};

interface IEspViewMember : extends IConstViewMember
{
	virtual void setViewname(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setMembertype(CViewMemberType val)=0;
	virtual void setMembertype(const char* val)=0;
	virtual void copy(IConstViewMember &from)=0;
};

interface IClientViewMember : extends IInterface
{
	virtual void setViewname(const char * val)=0;
	virtual void setName(const char * val)=0;
	virtual void setMembertype(CViewMemberType val)=0;
	virtual void setMembertype(const char* val)=0;
	virtual const char * getViewname()=0;
	virtual const char * getName()=0;
	virtual CViewMemberType getMembertype()=0;
	virtual const char* getMembertypeAsString()=0;
};



interface IConstQueryViewMembersRequest : extends IEspRequest
{
	virtual const char * getViewname()=0;
};

interface IEspQueryViewMembersRequest : extends IConstQueryViewMembersRequest
{
	virtual void setViewname(const char * val)=0;
	virtual void copy(IConstQueryViewMembersRequest &from)=0;
};

interface IClientQueryViewMembersRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setViewname(const char * val)=0;
};



interface IConstQueryViewMembersResponse : extends IEspResponse
{
	virtual const char * getViewname()=0;
	virtual IArrayOf<IConstViewMember> & getViewmembers()=0;
};

interface IEspQueryViewMembersResponse : extends IConstQueryViewMembersResponse
{
	virtual void setViewname(const char * val)=0;
	virtual void setViewmembers(IArrayOf<IEspViewMember> &val)=0;
	virtual void setViewmembers(IArrayOf<IConstViewMember> &val)=0;
	virtual void copy(IConstQueryViewMembersResponse &from)=0;
};

interface IClientQueryViewMembersResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getViewname()=0;
	virtual IArrayOf<IConstViewMember> & getViewmembers()=0;
};



interface IConstAddViewMemberRequest : extends IEspRequest
{
	virtual const char * getViewname()=0;
	virtual const char * getMembername()=0;
	virtual CViewMemberType getMembertype()=0;
	virtual const char* getMembertypeAsString()=0;
};

interface IEspAddViewMemberRequest : extends IConstAddViewMemberRequest
{
	virtual void setViewname(const char * val)=0;
	virtual void setMembername(const char * val)=0;
	virtual void setMembertype(CViewMemberType val)=0;
	virtual void setMembertype(const char* val)=0;
	virtual void copy(IConstAddViewMemberRequest &from)=0;
};

interface IClientAddViewMemberRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setViewname(const char * val)=0;
	virtual void setMembername(const char * val)=0;
	virtual void setMembertype(CViewMemberType val)=0;
	virtual void setMembertype(const char* val)=0;
};



interface IConstAddViewMemberResponse : extends IEspResponse
{
	virtual const char * getViewname()=0;
	virtual const char * getMembername()=0;
	virtual CViewMemberType getMembertype()=0;
	virtual const char* getMembertypeAsString()=0;
};

interface IEspAddViewMemberResponse : extends IConstAddViewMemberResponse
{
	virtual void setViewname(const char * val)=0;
	virtual void setMembername(const char * val)=0;
	virtual void setMembertype(CViewMemberType val)=0;
	virtual void setMembertype(const char* val)=0;
	virtual void copy(IConstAddViewMemberResponse &from)=0;
};

interface IClientAddViewMemberResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getViewname()=0;
	virtual const char * getMembername()=0;
	virtual CViewMemberType getMembertype()=0;
	virtual const char* getMembertypeAsString()=0;
};



interface IConstDeleteViewMemberRequest : extends IEspRequest
{
	virtual const char * getViewname()=0;
	virtual const char * getMembername()=0;
	virtual CViewMemberType getMembertype()=0;
	virtual const char* getMembertypeAsString()=0;
};

interface IEspDeleteViewMemberRequest : extends IConstDeleteViewMemberRequest
{
	virtual void setViewname(const char * val)=0;
	virtual void setMembername(const char * val)=0;
	virtual void setMembertype(CViewMemberType val)=0;
	virtual void setMembertype(const char* val)=0;
	virtual void copy(IConstDeleteViewMemberRequest &from)=0;
};

interface IClientDeleteViewMemberRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setViewname(const char * val)=0;
	virtual void setMembername(const char * val)=0;
	virtual void setMembertype(CViewMemberType val)=0;
	virtual void setMembertype(const char* val)=0;
};



interface IConstDeleteViewMemberResponse : extends IEspResponse
{
	virtual const char * getViewname()=0;
	virtual const char * getMembername()=0;
	virtual CViewMemberType getMembertype()=0;
	virtual const char* getMembertypeAsString()=0;
};

interface IEspDeleteViewMemberResponse : extends IConstDeleteViewMemberResponse
{
	virtual void setViewname(const char * val)=0;
	virtual void setMembername(const char * val)=0;
	virtual void setMembertype(CViewMemberType val)=0;
	virtual void setMembertype(const char* val)=0;
	virtual void copy(IConstDeleteViewMemberResponse &from)=0;
};

interface IClientDeleteViewMemberResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getViewname()=0;
	virtual const char * getMembername()=0;
	virtual CViewMemberType getMembertype()=0;
	virtual const char* getMembertypeAsString()=0;
};



interface IConstQueryUserViewColumnsRequest : extends IEspRequest
{
	virtual const char * getUsername()=0;
};

interface IEspQueryUserViewColumnsRequest : extends IConstQueryUserViewColumnsRequest
{
	virtual void setUsername(const char * val)=0;
	virtual void copy(IConstQueryUserViewColumnsRequest &from)=0;
};

interface IClientQueryUserViewColumnsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsername(const char * val)=0;
};



interface IConstQueryUserViewColumnsResponse : extends IEspResponse
{
	virtual const char * getUsername()=0;
	virtual IArrayOf<IConstViewColumn> & getViewcolumns()=0;
};

interface IEspQueryUserViewColumnsResponse : extends IConstQueryUserViewColumnsResponse
{
	virtual void setUsername(const char * val)=0;
	virtual void setViewcolumns(IArrayOf<IEspViewColumn> &val)=0;
	virtual void setViewcolumns(IArrayOf<IConstViewColumn> &val)=0;
	virtual void copy(IConstQueryUserViewColumnsResponse &from)=0;
};

interface IClientQueryUserViewColumnsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getUsername()=0;
	virtual IArrayOf<IConstViewColumn> & getViewcolumns()=0;
};



interface IConstPermissionAddRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getRname()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getBasednName()=0;
	virtual const char * getAccountName()=0;
	virtual int getAccountType()=0;
};

interface IEspPermissionAddRequest : extends IConstPermissionAddRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setBasednName(const char * val)=0;
	virtual void setAccountName(const char * val)=0;
	virtual void setAccountType(int val)=0;
	virtual void copy(IConstPermissionAddRequest &from)=0;
};

interface IClientPermissionAddRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setBasednName(const char * val)=0;
	virtual void setAccountName(const char * val)=0;
	virtual void setAccountType(int val)=0;
};



interface IConstPermissionAddResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getRname()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getBasednName()=0;
	virtual const char * getAccountName()=0;
	virtual int getAccountType()=0;
	virtual bool getToomany()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
	virtual StringArray & getResources()=0;
};

interface IEspPermissionAddResponse : extends IConstPermissionAddResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setBasednName(const char * val)=0;
	virtual void setAccountName(const char * val)=0;
	virtual void setAccountType(int val)=0;
	virtual void setToomany(bool val)=0;
	virtual void setUsers(IArrayOf<IEspUserInfo> &val)=0;
	virtual void setUsers(IArrayOf<IConstUserInfo> &val)=0;
	virtual void setGroups(IArrayOf<IEspGroupInfo> &val)=0;
	virtual void setGroups(IArrayOf<IConstGroupInfo> &val)=0;
	virtual void setResources(StringArray &val)=0;
	virtual void copy(IConstPermissionAddResponse &from)=0;
};

interface IClientPermissionAddResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getRname()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getBasednName()=0;
	virtual const char * getAccountName()=0;
	virtual int getAccountType()=0;
	virtual bool getToomany()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
	virtual StringArray & getResources()=0;
};



interface IConstPermissionsResetInputRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getRname()=0;
	virtual const char * getPrefix()=0;
	virtual StringArray & getNames()=0;
};

interface IEspPermissionsResetInputRequest : extends IConstPermissionsResetInputRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setNames(StringArray &val)=0;
	virtual void copy(IConstPermissionsResetInputRequest &from)=0;
};

interface IClientPermissionsResetInputRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setNames(StringArray &val)=0;
};



interface IConstPermissionsResetInputResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getRname()=0;
	virtual const char * getPrefix()=0;
	virtual bool getToomany()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
	virtual StringArray & getResources()=0;
	virtual const char * getResourceList()=0;
};

interface IEspPermissionsResetInputResponse : extends IConstPermissionsResetInputResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setToomany(bool val)=0;
	virtual void setUsers(IArrayOf<IEspUserInfo> &val)=0;
	virtual void setUsers(IArrayOf<IConstUserInfo> &val)=0;
	virtual void setGroups(IArrayOf<IEspGroupInfo> &val)=0;
	virtual void setGroups(IArrayOf<IConstGroupInfo> &val)=0;
	virtual void setResources(StringArray &val)=0;
	virtual void setResourceList(const char * val)=0;
	virtual void copy(IConstPermissionsResetInputResponse &from)=0;
};

interface IClientPermissionsResetInputResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getRname()=0;
	virtual const char * getPrefix()=0;
	virtual bool getToomany()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
	virtual StringArray & getResources()=0;
	virtual const char * getResourceList()=0;
};



interface IConstPermissionsResetRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRname()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual StringArray & getNames()=0;
	virtual bool getAllow_access()=0;
	virtual bool getAllow_read()=0;
	virtual bool getAllow_write()=0;
	virtual bool getAllow_full()=0;
	virtual bool getDeny_access()=0;
	virtual bool getDeny_read()=0;
	virtual bool getDeny_write()=0;
	virtual bool getDeny_full()=0;
	virtual const char * getUserarray()=0;
	virtual const char * getGrouparray()=0;
};

interface IEspPermissionsResetRequest : extends IConstPermissionsResetRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setNames(StringArray &val)=0;
	virtual void setAllow_access(bool val)=0;
	virtual void setAllow_read(bool val)=0;
	virtual void setAllow_write(bool val)=0;
	virtual void setAllow_full(bool val)=0;
	virtual void setDeny_access(bool val)=0;
	virtual void setDeny_read(bool val)=0;
	virtual void setDeny_write(bool val)=0;
	virtual void setDeny_full(bool val)=0;
	virtual void setUserarray(const char * val)=0;
	virtual void setGrouparray(const char * val)=0;
	virtual void copy(IConstPermissionsResetRequest &from)=0;
};

interface IClientPermissionsResetRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setNames(StringArray &val)=0;
	virtual void setAllow_access(bool val)=0;
	virtual void setAllow_read(bool val)=0;
	virtual void setAllow_write(bool val)=0;
	virtual void setAllow_full(bool val)=0;
	virtual void setDeny_access(bool val)=0;
	virtual void setDeny_read(bool val)=0;
	virtual void setDeny_write(bool val)=0;
	virtual void setDeny_full(bool val)=0;
	virtual void setUserarray(const char * val)=0;
	virtual void setGrouparray(const char * val)=0;
};



interface IConstPermissionsResetResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRname()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspPermissionsResetResponse : extends IConstPermissionsResetResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstPermissionsResetResponse &from)=0;
};

interface IClientPermissionsResetResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRname()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstClearPermissionsCacheRequest : extends IEspRequest
{
};

interface IEspClearPermissionsCacheRequest : extends IConstClearPermissionsCacheRequest
{
	virtual void copy(IConstClearPermissionsCacheRequest &from)=0;
};

interface IClientClearPermissionsCacheRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstClearPermissionsCacheResponse : extends IEspResponse
{
	virtual int getRetcode()=0;
};

interface IEspClearPermissionsCacheResponse : extends IConstClearPermissionsCacheResponse
{
	virtual void setRetcode(int val)=0;
	virtual void copy(IConstClearPermissionsCacheResponse &from)=0;
};

interface IClientClearPermissionsCacheResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getRetcode()=0;
};



interface IConstQueryScopeScansEnabledRequest : extends IEspRequest
{
};

interface IEspQueryScopeScansEnabledRequest : extends IConstQueryScopeScansEnabledRequest
{
	virtual void copy(IConstQueryScopeScansEnabledRequest &from)=0;
};

interface IClientQueryScopeScansEnabledRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstQueryScopeScansEnabledResponse : extends IEspResponse
{
	virtual IConstScopeScanStatusStruct & getScopeScansStatus()=0;
};

interface IEspQueryScopeScansEnabledResponse : extends IConstQueryScopeScansEnabledResponse
{
	virtual IEspScopeScanStatusStruct & updateScopeScansStatus()=0;
	virtual void setScopeScansStatus(IConstScopeScanStatusStruct &ifrom)=0;
	virtual void copy(IConstQueryScopeScansEnabledResponse &from)=0;
};

interface IClientQueryScopeScansEnabledResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstScopeScanStatusStruct & getScopeScansStatus()=0;
};



interface IConstEnableScopeScansRequest : extends IEspRequest
{
};

interface IEspEnableScopeScansRequest : extends IConstEnableScopeScansRequest
{
	virtual void copy(IConstEnableScopeScansRequest &from)=0;
};

interface IClientEnableScopeScansRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstEnableScopeScansResponse : extends IEspResponse
{
	virtual IConstScopeScanStatusStruct & getScopeScansStatus()=0;
};

interface IEspEnableScopeScansResponse : extends IConstEnableScopeScansResponse
{
	virtual IEspScopeScanStatusStruct & updateScopeScansStatus()=0;
	virtual void setScopeScansStatus(IConstScopeScanStatusStruct &ifrom)=0;
	virtual void copy(IConstEnableScopeScansResponse &from)=0;
};

interface IClientEnableScopeScansResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstScopeScanStatusStruct & getScopeScansStatus()=0;
};



interface IConstDisableScopeScansRequest : extends IEspRequest
{
};

interface IEspDisableScopeScansRequest : extends IConstDisableScopeScansRequest
{
	virtual void copy(IConstDisableScopeScansRequest &from)=0;
};

interface IClientDisableScopeScansRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstDisableScopeScansResponse : extends IEspResponse
{
	virtual IConstScopeScanStatusStruct & getScopeScansStatus()=0;
};

interface IEspDisableScopeScansResponse : extends IConstDisableScopeScansResponse
{
	virtual IEspScopeScanStatusStruct & updateScopeScansStatus()=0;
	virtual void setScopeScansStatus(IConstScopeScanStatusStruct &ifrom)=0;
	virtual void copy(IConstDisableScopeScansResponse &from)=0;
};

interface IClientDisableScopeScansResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstScopeScanStatusStruct & getScopeScansStatus()=0;
};



interface IConstPermissionActionRequest : extends IEspRequest
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRname()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getAction()=0;
	virtual const char * getAccount_name()=0;
	virtual int getAccount_type()=0;
	virtual bool getAllow_access()=0;
	virtual bool getAllow_read()=0;
	virtual bool getAllow_write()=0;
	virtual bool getAllow_full()=0;
	virtual bool getDeny_access()=0;
	virtual bool getDeny_read()=0;
	virtual bool getDeny_write()=0;
	virtual bool getDeny_full()=0;
	virtual const char * getUser()=0;
	virtual const char * getGroup()=0;
	virtual const char * getBasednName()=0;
	virtual const char * getResourceName()=0;
};

interface IEspPermissionActionRequest : extends IConstPermissionActionRequest
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setAccount_name(const char * val)=0;
	virtual void setAccount_type(int val)=0;
	virtual void setAllow_access(bool val)=0;
	virtual void setAllow_read(bool val)=0;
	virtual void setAllow_write(bool val)=0;
	virtual void setAllow_full(bool val)=0;
	virtual void setDeny_access(bool val)=0;
	virtual void setDeny_read(bool val)=0;
	virtual void setDeny_write(bool val)=0;
	virtual void setDeny_full(bool val)=0;
	virtual void setUser(const char * val)=0;
	virtual void setGroup(const char * val)=0;
	virtual void setBasednName(const char * val)=0;
	virtual void setResourceName(const char * val)=0;
	virtual void copy(IConstPermissionActionRequest &from)=0;
};

interface IClientPermissionActionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setAction(const char * val)=0;
	virtual void setAccount_name(const char * val)=0;
	virtual void setAccount_type(int val)=0;
	virtual void setAllow_access(bool val)=0;
	virtual void setAllow_read(bool val)=0;
	virtual void setAllow_write(bool val)=0;
	virtual void setAllow_full(bool val)=0;
	virtual void setDeny_access(bool val)=0;
	virtual void setDeny_read(bool val)=0;
	virtual void setDeny_write(bool val)=0;
	virtual void setDeny_full(bool val)=0;
	virtual void setUser(const char * val)=0;
	virtual void setGroup(const char * val)=0;
	virtual void setBasednName(const char * val)=0;
	virtual void setResourceName(const char * val)=0;
};



interface IConstPermissionActionResponse : extends IEspResponse
{
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRname()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getAccountName()=0;
	virtual bool getIsGroup()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};

interface IEspPermissionActionResponse : extends IConstPermissionActionResponse
{
	virtual void setBasedn(const char * val)=0;
	virtual void setRtype(const char * val)=0;
	virtual void setRname(const char * val)=0;
	virtual void setRtitle(const char * val)=0;
	virtual void setPrefix(const char * val)=0;
	virtual void setAccountName(const char * val)=0;
	virtual void setIsGroup(bool val)=0;
	virtual void setRetcode(int val)=0;
	virtual void setRetmsg(const char * val)=0;
	virtual void copy(IConstPermissionActionResponse &from)=0;
};

interface IClientPermissionActionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getBasedn()=0;
	virtual const char * getRtype()=0;
	virtual const char * getRname()=0;
	virtual const char * getRtitle()=0;
	virtual const char * getPrefix()=0;
	virtual const char * getAccountName()=0;
	virtual bool getIsGroup()=0;
	virtual int getRetcode()=0;
	virtual const char * getRetmsg()=0;
};



interface IConstAccountPermissionsRequest : extends IEspRequest
{
	virtual const char * getAccountName()=0;
	virtual bool getIsGroup()=0;
	virtual bool getIncludeGroup()=0;
};

interface IEspAccountPermissionsRequest : extends IConstAccountPermissionsRequest
{
	virtual void setAccountName(const char * val)=0;
	virtual void setIsGroup(bool val)=0;
	virtual void setIncludeGroup(bool val)=0;
	virtual void copy(IConstAccountPermissionsRequest &from)=0;
};

interface IClientAccountPermissionsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setAccountName(const char * val)=0;
	virtual void setIsGroup(bool val)=0;
	virtual void setIncludeGroup(bool val)=0;
};



interface IConstAccountPermissionsResponse : extends IEspResponse
{
	virtual const char * getAccountName()=0;
	virtual bool getIsGroup()=0;
	virtual bool getIncludeGroup()=0;
	virtual StringArray & getBasednNames()=0;
	virtual IArrayOf<IConstAccountPermission> & getPermissions()=0;
	virtual IArrayOf<IConstGroupAccountPermission> & getGroupPermissions()=0;
};

interface IEspAccountPermissionsResponse : extends IConstAccountPermissionsResponse
{
	virtual void setAccountName(const char * val)=0;
	virtual void setIsGroup(bool val)=0;
	virtual void setIncludeGroup(bool val)=0;
	virtual void setBasednNames(StringArray &val)=0;
	virtual void setPermissions(IArrayOf<IEspAccountPermission> &val)=0;
	virtual void setPermissions(IArrayOf<IConstAccountPermission> &val)=0;
	virtual void setGroupPermissions(IArrayOf<IEspGroupAccountPermission> &val)=0;
	virtual void setGroupPermissions(IArrayOf<IConstGroupAccountPermission> &val)=0;
	virtual void copy(IConstAccountPermissionsResponse &from)=0;
};

interface IClientAccountPermissionsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getAccountName()=0;
	virtual bool getIsGroup()=0;
	virtual bool getIncludeGroup()=0;
	virtual StringArray & getBasednNames()=0;
	virtual IArrayOf<IConstAccountPermission> & getPermissions()=0;
	virtual IArrayOf<IConstGroupAccountPermission> & getGroupPermissions()=0;
};



interface IConstFilePermissionRequest : extends IEspRequest
{
	virtual const char * getFileName()=0;
	virtual const char * getUserName()=0;
	virtual const char * getGroupName()=0;
};

interface IEspFilePermissionRequest : extends IConstFilePermissionRequest
{
	virtual void setFileName(const char * val)=0;
	virtual void setUserName(const char * val)=0;
	virtual void setGroupName(const char * val)=0;
	virtual void copy(IConstFilePermissionRequest &from)=0;
};

interface IClientFilePermissionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setFileName(const char * val)=0;
	virtual void setUserName(const char * val)=0;
	virtual void setGroupName(const char * val)=0;
};



interface IConstFilePermissionResponse : extends IEspResponse
{
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual const char * getFileName()=0;
	virtual const char * getUserName()=0;
	virtual const char * getGroupName()=0;
	virtual bool getToomany_isNull()=0;
	virtual bool getToomany()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
	virtual const char * getUserPermission()=0;
};

interface IEspFilePermissionResponse : extends IConstFilePermissionResponse
{
	virtual void setNoSecMngr_null()=0;
	virtual void setNoSecMngr(bool val)=0;
	virtual void setFileName(const char * val)=0;
	virtual void setUserName(const char * val)=0;
	virtual void setGroupName(const char * val)=0;
	virtual void setToomany_null()=0;
	virtual void setToomany(bool val)=0;
	virtual void setUsers(IArrayOf<IEspUserInfo> &val)=0;
	virtual void setUsers(IArrayOf<IConstUserInfo> &val)=0;
	virtual void setGroups(IArrayOf<IEspGroupInfo> &val)=0;
	virtual void setGroups(IArrayOf<IConstGroupInfo> &val)=0;
	virtual void setUserPermission(const char * val)=0;
	virtual void copy(IConstFilePermissionResponse &from)=0;
};

interface IClientFilePermissionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getNoSecMngr_isNull()=0;
	virtual bool getNoSecMngr()=0;
	virtual const char * getFileName()=0;
	virtual const char * getUserName()=0;
	virtual const char * getGroupName()=0;
	virtual bool getToomany_isNull()=0;
	virtual bool getToomany()=0;
	virtual IArrayOf<IConstUserInfo> & getUsers()=0;
	virtual IArrayOf<IConstGroupInfo> & getGroups()=0;
	virtual const char * getUserPermission()=0;
};



interface IConstUserAccountExportRequest : extends IEspRequest
{
	virtual StringArray & getUsernames()=0;
	virtual StringArray & getGroupnames()=0;
};

interface IEspUserAccountExportRequest : extends IConstUserAccountExportRequest
{
	virtual void setUsernames(StringArray &val)=0;
	virtual void setGroupnames(StringArray &val)=0;
	virtual void copy(IConstUserAccountExportRequest &from)=0;
};

interface IClientUserAccountExportRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setUsernames(StringArray &val)=0;
	virtual void setGroupnames(StringArray &val)=0;
};



interface IConstUserAccountExportResponse : extends IEspResponse
{
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;
};

interface IEspUserAccountExportResponse : extends IConstUserAccountExportResponse
{
	virtual void setResult_mimetype(const char *  val)=0;
	virtual void setResult(const MemoryBuffer & val)=0;
	virtual void copy(IConstUserAccountExportResponse &from)=0;
};

interface IClientUserAccountExportResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char *getResult_mimetype()=0;
	virtual const MemoryBuffer & getResult()=0;
};



interface IConstws_accessPingRequest : extends IEspRequest
{
};

interface IEspws_accessPingRequest : extends IConstws_accessPingRequest
{
	virtual void copy(IConstws_accessPingRequest &from)=0;
};

interface IClientws_accessPingRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};

interface IConstws_accessPingResponse : extends IEspResponse
{
};

interface IEspws_accessPingResponse : extends IConstws_accessPingResponse
{
	virtual void copy(IConstws_accessPingResponse &from)=0;
};

interface IClientws_accessPingResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
};

interface IEspws_access : extends IEspService
{
	virtual bool onAccountPermissions(IEspContext &context, IEspAccountPermissionsRequest &req, IEspAccountPermissionsResponse &resp)=0;
	virtual bool onAddUser(IEspContext &context, IEspAddUserRequest &req, IEspAddUserResponse &resp)=0;
	virtual bool onAddView(IEspContext &context, IEspAddViewRequest &req, IEspAddViewResponse &resp)=0;
	virtual bool onAddViewColumn(IEspContext &context, IEspAddViewColumnRequest &req, IEspAddViewColumnResponse &resp)=0;
	virtual bool onAddViewMember(IEspContext &context, IEspAddViewMemberRequest &req, IEspAddViewMemberResponse &resp)=0;
	virtual bool onClearPermissionsCache(IEspContext &context, IEspClearPermissionsCacheRequest &req, IEspClearPermissionsCacheResponse &resp)=0;
	virtual bool onDeleteView(IEspContext &context, IEspDeleteViewRequest &req, IEspDeleteViewResponse &resp)=0;
	virtual bool onDeleteViewColumn(IEspContext &context, IEspDeleteViewColumnRequest &req, IEspDeleteViewColumnResponse &resp)=0;
	virtual bool onDeleteViewMember(IEspContext &context, IEspDeleteViewMemberRequest &req, IEspDeleteViewMemberResponse &resp)=0;
	virtual bool onDisableScopeScans(IEspContext &context, IEspDisableScopeScansRequest &req, IEspDisableScopeScansResponse &resp)=0;
	virtual bool onEnableScopeScans(IEspContext &context, IEspEnableScopeScansRequest &req, IEspEnableScopeScansResponse &resp)=0;
	virtual bool onFilePermission(IEspContext &context, IEspFilePermissionRequest &req, IEspFilePermissionResponse &resp)=0;
	virtual bool onGroupAction(IEspContext &context, IEspGroupActionRequest &req, IEspGroupActionResponse &resp)=0;
	virtual bool onGroupAdd(IEspContext &context, IEspGroupAddRequest &req, IEspGroupAddResponse &resp)=0;
	virtual bool onGroupEdit(IEspContext &context, IEspGroupEditRequest &req, IEspGroupEditResponse &resp)=0;
	virtual bool onGroupMemberEdit(IEspContext &context, IEspGroupMemberEditRequest &req, IEspGroupMemberEditResponse &resp)=0;
	virtual bool onGroupMemberEditInput(IEspContext &context, IEspGroupMemberEditInputRequest &req, IEspGroupMemberEditInputResponse &resp)=0;
	virtual bool onGroupMemberQuery(IEspContext &context, IEspGroupMemberQueryRequest &req, IEspGroupMemberQueryResponse &resp)=0;
	virtual bool onGroupQuery(IEspContext &context, IEspGroupQueryRequest &req, IEspGroupQueryResponse &resp)=0;
	virtual bool onGroups(IEspContext &context, IEspGroupRequest &req, IEspGroupResponse &resp)=0;
	virtual bool onPermissionAction(IEspContext &context, IEspPermissionActionRequest &req, IEspPermissionActionResponse &resp)=0;
	virtual bool onPermissionAddInput(IEspContext &context, IEspPermissionAddRequest &req, IEspPermissionAddResponse &resp)=0;
	virtual bool onPermissions(IEspContext &context, IEspBasednsRequest &req, IEspBasednsResponse &resp)=0;
	virtual bool onPermissionsReset(IEspContext &context, IEspPermissionsResetRequest &req, IEspPermissionsResetResponse &resp)=0;
	virtual bool onPermissionsResetInput(IEspContext &context, IEspPermissionsResetInputRequest &req, IEspPermissionsResetInputResponse &resp)=0;
	virtual bool onPing(IEspContext &context, IEspws_accessPingRequest &req, IEspws_accessPingResponse &resp)=0;
	virtual bool onQueryScopeScansEnabled(IEspContext &context, IEspQueryScopeScansEnabledRequest &req, IEspQueryScopeScansEnabledResponse &resp)=0;
	virtual bool onQueryUserViewColumns(IEspContext &context, IEspQueryUserViewColumnsRequest &req, IEspQueryUserViewColumnsResponse &resp)=0;
	virtual bool onQueryViewColumns(IEspContext &context, IEspQueryViewColumnsRequest &req, IEspQueryViewColumnsResponse &resp)=0;
	virtual bool onQueryViewMembers(IEspContext &context, IEspQueryViewMembersRequest &req, IEspQueryViewMembersResponse &resp)=0;
	virtual bool onQueryViews(IEspContext &context, IEspQueryViewsRequest &req, IEspQueryViewsResponse &resp)=0;
	virtual bool onResourceAdd(IEspContext &context, IEspResourceAddRequest &req, IEspResourceAddResponse &resp)=0;
	virtual bool onResourceAddInput(IEspContext &context, IEspResourceAddInputRequest &req, IEspResourceAddInputResponse &resp)=0;
	virtual bool onResourceDelete(IEspContext &context, IEspResourceDeleteRequest &req, IEspResourceDeleteResponse &resp)=0;
	virtual bool onResourcePermissionQuery(IEspContext &context, IEspResourcePermissionQueryRequest &req, IEspResourcePermissionQueryResponse &resp)=0;
	virtual bool onResourcePermissions(IEspContext &context, IEspResourcePermissionsRequest &req, IEspResourcePermissionsResponse &resp)=0;
	virtual bool onResourceQuery(IEspContext &context, IEspResourceQueryRequest &req, IEspResourceQueryResponse &resp)=0;
	virtual bool onResources(IEspContext &context, IEspResourcesRequest &req, IEspResourcesResponse &resp)=0;
	virtual bool onUserAccountExport(IEspContext &context, IEspUserAccountExportRequest &req, IEspUserAccountExportResponse &resp)=0;
	virtual bool onUserAction(IEspContext &context, IEspUserActionRequest &req, IEspUserActionResponse &resp)=0;
	virtual bool onUserEdit(IEspContext &context, IEspUserEditRequest &req, IEspUserEditResponse &resp)=0;
	virtual bool onUserGroupEdit(IEspContext &context, IEspUserGroupEditRequest &req, IEspUserGroupEditResponse &resp)=0;
	virtual bool onUserGroupEditInput(IEspContext &context, IEspUserGroupEditInputRequest &req, IEspUserGroupEditInputResponse &resp)=0;
	virtual bool onUserInfoEdit(IEspContext &context, IEspUserInfoEditRequest &req, IEspUserInfoEditResponse &resp)=0;
	virtual bool onUserInfoEditInput(IEspContext &context, IEspUserInfoEditInputRequest &req, IEspUserInfoEditInputResponse &resp)=0;
	virtual bool onUserPosix(IEspContext &context, IEspUserPosixRequest &req, IEspUserPosixResponse &resp)=0;
	virtual bool onUserPosixInput(IEspContext &context, IEspUserPosixInputRequest &req, IEspUserPosixInputResponse &resp)=0;
	virtual bool onUserQuery(IEspContext &context, IEspUserQueryRequest &req, IEspUserQueryResponse &resp)=0;
	virtual bool onUserResetPass(IEspContext &context, IEspUserResetPassRequest &req, IEspUserResetPassResponse &resp)=0;
	virtual bool onUserResetPassInput(IEspContext &context, IEspUserResetPassInputRequest &req, IEspUserResetPassInputResponse &resp)=0;
	virtual bool onUserSudoers(IEspContext &context, IEspUserSudoersRequest &req, IEspUserSudoersResponse &resp)=0;
	virtual bool onUserSudoersInput(IEspContext &context, IEspUserSudoersInputRequest &req, IEspUserSudoersInputResponse &resp)=0;
	virtual bool onUsers(IEspContext &context, IEspUserRequest &req, IEspUserResponse &resp)=0;
};

interface IClientws_accessEvents : extends IInterface
{
	virtual int onAccountPermissionsComplete(IClientAccountPermissionsResponse *resp,IInterface* state)=0;
	virtual int onAccountPermissionsError(IClientAccountPermissionsResponse *resp,IInterface* state)=0;
	virtual int onAddUserComplete(IClientAddUserResponse *resp,IInterface* state)=0;
	virtual int onAddUserError(IClientAddUserResponse *resp,IInterface* state)=0;
	virtual int onAddViewComplete(IClientAddViewResponse *resp,IInterface* state)=0;
	virtual int onAddViewError(IClientAddViewResponse *resp,IInterface* state)=0;
	virtual int onAddViewColumnComplete(IClientAddViewColumnResponse *resp,IInterface* state)=0;
	virtual int onAddViewColumnError(IClientAddViewColumnResponse *resp,IInterface* state)=0;
	virtual int onAddViewMemberComplete(IClientAddViewMemberResponse *resp,IInterface* state)=0;
	virtual int onAddViewMemberError(IClientAddViewMemberResponse *resp,IInterface* state)=0;
	virtual int onClearPermissionsCacheComplete(IClientClearPermissionsCacheResponse *resp,IInterface* state)=0;
	virtual int onClearPermissionsCacheError(IClientClearPermissionsCacheResponse *resp,IInterface* state)=0;
	virtual int onDeleteViewComplete(IClientDeleteViewResponse *resp,IInterface* state)=0;
	virtual int onDeleteViewError(IClientDeleteViewResponse *resp,IInterface* state)=0;
	virtual int onDeleteViewColumnComplete(IClientDeleteViewColumnResponse *resp,IInterface* state)=0;
	virtual int onDeleteViewColumnError(IClientDeleteViewColumnResponse *resp,IInterface* state)=0;
	virtual int onDeleteViewMemberComplete(IClientDeleteViewMemberResponse *resp,IInterface* state)=0;
	virtual int onDeleteViewMemberError(IClientDeleteViewMemberResponse *resp,IInterface* state)=0;
	virtual int onDisableScopeScansComplete(IClientDisableScopeScansResponse *resp,IInterface* state)=0;
	virtual int onDisableScopeScansError(IClientDisableScopeScansResponse *resp,IInterface* state)=0;
	virtual int onEnableScopeScansComplete(IClientEnableScopeScansResponse *resp,IInterface* state)=0;
	virtual int onEnableScopeScansError(IClientEnableScopeScansResponse *resp,IInterface* state)=0;
	virtual int onFilePermissionComplete(IClientFilePermissionResponse *resp,IInterface* state)=0;
	virtual int onFilePermissionError(IClientFilePermissionResponse *resp,IInterface* state)=0;
	virtual int onGroupActionComplete(IClientGroupActionResponse *resp,IInterface* state)=0;
	virtual int onGroupActionError(IClientGroupActionResponse *resp,IInterface* state)=0;
	virtual int onGroupAddComplete(IClientGroupAddResponse *resp,IInterface* state)=0;
	virtual int onGroupAddError(IClientGroupAddResponse *resp,IInterface* state)=0;
	virtual int onGroupEditComplete(IClientGroupEditResponse *resp,IInterface* state)=0;
	virtual int onGroupEditError(IClientGroupEditResponse *resp,IInterface* state)=0;
	virtual int onGroupMemberEditComplete(IClientGroupMemberEditResponse *resp,IInterface* state)=0;
	virtual int onGroupMemberEditError(IClientGroupMemberEditResponse *resp,IInterface* state)=0;
	virtual int onGroupMemberEditInputComplete(IClientGroupMemberEditInputResponse *resp,IInterface* state)=0;
	virtual int onGroupMemberEditInputError(IClientGroupMemberEditInputResponse *resp,IInterface* state)=0;
	virtual int onGroupMemberQueryComplete(IClientGroupMemberQueryResponse *resp,IInterface* state)=0;
	virtual int onGroupMemberQueryError(IClientGroupMemberQueryResponse *resp,IInterface* state)=0;
	virtual int onGroupQueryComplete(IClientGroupQueryResponse *resp,IInterface* state)=0;
	virtual int onGroupQueryError(IClientGroupQueryResponse *resp,IInterface* state)=0;
	virtual int onGroupsComplete(IClientGroupResponse *resp,IInterface* state)=0;
	virtual int onGroupsError(IClientGroupResponse *resp,IInterface* state)=0;
	virtual int onPermissionActionComplete(IClientPermissionActionResponse *resp,IInterface* state)=0;
	virtual int onPermissionActionError(IClientPermissionActionResponse *resp,IInterface* state)=0;
	virtual int onPermissionAddInputComplete(IClientPermissionAddResponse *resp,IInterface* state)=0;
	virtual int onPermissionAddInputError(IClientPermissionAddResponse *resp,IInterface* state)=0;
	virtual int onPermissionsComplete(IClientBasednsResponse *resp,IInterface* state)=0;
	virtual int onPermissionsError(IClientBasednsResponse *resp,IInterface* state)=0;
	virtual int onPermissionsResetComplete(IClientPermissionsResetResponse *resp,IInterface* state)=0;
	virtual int onPermissionsResetError(IClientPermissionsResetResponse *resp,IInterface* state)=0;
	virtual int onPermissionsResetInputComplete(IClientPermissionsResetInputResponse *resp,IInterface* state)=0;
	virtual int onPermissionsResetInputError(IClientPermissionsResetInputResponse *resp,IInterface* state)=0;
	virtual int onPingComplete(IClientws_accessPingResponse *resp,IInterface* state)=0;
	virtual int onPingError(IClientws_accessPingResponse *resp,IInterface* state)=0;
	virtual int onQueryScopeScansEnabledComplete(IClientQueryScopeScansEnabledResponse *resp,IInterface* state)=0;
	virtual int onQueryScopeScansEnabledError(IClientQueryScopeScansEnabledResponse *resp,IInterface* state)=0;
	virtual int onQueryUserViewColumnsComplete(IClientQueryUserViewColumnsResponse *resp,IInterface* state)=0;
	virtual int onQueryUserViewColumnsError(IClientQueryUserViewColumnsResponse *resp,IInterface* state)=0;
	virtual int onQueryViewColumnsComplete(IClientQueryViewColumnsResponse *resp,IInterface* state)=0;
	virtual int onQueryViewColumnsError(IClientQueryViewColumnsResponse *resp,IInterface* state)=0;
	virtual int onQueryViewMembersComplete(IClientQueryViewMembersResponse *resp,IInterface* state)=0;
	virtual int onQueryViewMembersError(IClientQueryViewMembersResponse *resp,IInterface* state)=0;
	virtual int onQueryViewsComplete(IClientQueryViewsResponse *resp,IInterface* state)=0;
	virtual int onQueryViewsError(IClientQueryViewsResponse *resp,IInterface* state)=0;
	virtual int onResourceAddComplete(IClientResourceAddResponse *resp,IInterface* state)=0;
	virtual int onResourceAddError(IClientResourceAddResponse *resp,IInterface* state)=0;
	virtual int onResourceAddInputComplete(IClientResourceAddInputResponse *resp,IInterface* state)=0;
	virtual int onResourceAddInputError(IClientResourceAddInputResponse *resp,IInterface* state)=0;
	virtual int onResourceDeleteComplete(IClientResourceDeleteResponse *resp,IInterface* state)=0;
	virtual int onResourceDeleteError(IClientResourceDeleteResponse *resp,IInterface* state)=0;
	virtual int onResourcePermissionQueryComplete(IClientResourcePermissionQueryResponse *resp,IInterface* state)=0;
	virtual int onResourcePermissionQueryError(IClientResourcePermissionQueryResponse *resp,IInterface* state)=0;
	virtual int onResourcePermissionsComplete(IClientResourcePermissionsResponse *resp,IInterface* state)=0;
	virtual int onResourcePermissionsError(IClientResourcePermissionsResponse *resp,IInterface* state)=0;
	virtual int onResourceQueryComplete(IClientResourceQueryResponse *resp,IInterface* state)=0;
	virtual int onResourceQueryError(IClientResourceQueryResponse *resp,IInterface* state)=0;
	virtual int onResourcesComplete(IClientResourcesResponse *resp,IInterface* state)=0;
	virtual int onResourcesError(IClientResourcesResponse *resp,IInterface* state)=0;
	virtual int onUserAccountExportComplete(IClientUserAccountExportResponse *resp,IInterface* state)=0;
	virtual int onUserAccountExportError(IClientUserAccountExportResponse *resp,IInterface* state)=0;
	virtual int onUserActionComplete(IClientUserActionResponse *resp,IInterface* state)=0;
	virtual int onUserActionError(IClientUserActionResponse *resp,IInterface* state)=0;
	virtual int onUserEditComplete(IClientUserEditResponse *resp,IInterface* state)=0;
	virtual int onUserEditError(IClientUserEditResponse *resp,IInterface* state)=0;
	virtual int onUserGroupEditComplete(IClientUserGroupEditResponse *resp,IInterface* state)=0;
	virtual int onUserGroupEditError(IClientUserGroupEditResponse *resp,IInterface* state)=0;
	virtual int onUserGroupEditInputComplete(IClientUserGroupEditInputResponse *resp,IInterface* state)=0;
	virtual int onUserGroupEditInputError(IClientUserGroupEditInputResponse *resp,IInterface* state)=0;
	virtual int onUserInfoEditComplete(IClientUserInfoEditResponse *resp,IInterface* state)=0;
	virtual int onUserInfoEditError(IClientUserInfoEditResponse *resp,IInterface* state)=0;
	virtual int onUserInfoEditInputComplete(IClientUserInfoEditInputResponse *resp,IInterface* state)=0;
	virtual int onUserInfoEditInputError(IClientUserInfoEditInputResponse *resp,IInterface* state)=0;
	virtual int onUserPosixComplete(IClientUserPosixResponse *resp,IInterface* state)=0;
	virtual int onUserPosixError(IClientUserPosixResponse *resp,IInterface* state)=0;
	virtual int onUserPosixInputComplete(IClientUserPosixInputResponse *resp,IInterface* state)=0;
	virtual int onUserPosixInputError(IClientUserPosixInputResponse *resp,IInterface* state)=0;
	virtual int onUserQueryComplete(IClientUserQueryResponse *resp,IInterface* state)=0;
	virtual int onUserQueryError(IClientUserQueryResponse *resp,IInterface* state)=0;
	virtual int onUserResetPassComplete(IClientUserResetPassResponse *resp,IInterface* state)=0;
	virtual int onUserResetPassError(IClientUserResetPassResponse *resp,IInterface* state)=0;
	virtual int onUserResetPassInputComplete(IClientUserResetPassInputResponse *resp,IInterface* state)=0;
	virtual int onUserResetPassInputError(IClientUserResetPassInputResponse *resp,IInterface* state)=0;
	virtual int onUserSudoersComplete(IClientUserSudoersResponse *resp,IInterface* state)=0;
	virtual int onUserSudoersError(IClientUserSudoersResponse *resp,IInterface* state)=0;
	virtual int onUserSudoersInputComplete(IClientUserSudoersInputResponse *resp,IInterface* state)=0;
	virtual int onUserSudoersInputError(IClientUserSudoersInputResponse *resp,IInterface* state)=0;
	virtual int onUsersComplete(IClientUserResponse *resp,IInterface* state)=0;
	virtual int onUsersError(IClientUserResponse *resp,IInterface* state)=0;
};

interface IClientws_access : extends IInterface
{
	virtual void setProxyAddress(const char *address)=0;
	virtual void addServiceUrl(const char *url)=0;
	virtual void removeServiceUrl(const char *url)=0;
	virtual void setUsernameToken(const char *userName,const char *passWord,const char *realm)=0;
	virtual void setAction(const char *action)=0;

	virtual IClientAccountPermissionsRequest * createAccountPermissionsRequest()=0;
	virtual IClientAccountPermissionsResponse * AccountPermissions(IClientAccountPermissionsRequest *request)=0;
	virtual void async_AccountPermissions(IClientAccountPermissionsRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientAddUserRequest * createAddUserRequest()=0;
	virtual IClientAddUserResponse * AddUser(IClientAddUserRequest *request)=0;
	virtual void async_AddUser(IClientAddUserRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientAddViewRequest * createAddViewRequest()=0;
	virtual IClientAddViewResponse * AddView(IClientAddViewRequest *request)=0;
	virtual void async_AddView(IClientAddViewRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientAddViewColumnRequest * createAddViewColumnRequest()=0;
	virtual IClientAddViewColumnResponse * AddViewColumn(IClientAddViewColumnRequest *request)=0;
	virtual void async_AddViewColumn(IClientAddViewColumnRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientAddViewMemberRequest * createAddViewMemberRequest()=0;
	virtual IClientAddViewMemberResponse * AddViewMember(IClientAddViewMemberRequest *request)=0;
	virtual void async_AddViewMember(IClientAddViewMemberRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientClearPermissionsCacheRequest * createClearPermissionsCacheRequest()=0;
	virtual IClientClearPermissionsCacheResponse * ClearPermissionsCache(IClientClearPermissionsCacheRequest *request)=0;
	virtual void async_ClearPermissionsCache(IClientClearPermissionsCacheRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientDeleteViewRequest * createDeleteViewRequest()=0;
	virtual IClientDeleteViewResponse * DeleteView(IClientDeleteViewRequest *request)=0;
	virtual void async_DeleteView(IClientDeleteViewRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientDeleteViewColumnRequest * createDeleteViewColumnRequest()=0;
	virtual IClientDeleteViewColumnResponse * DeleteViewColumn(IClientDeleteViewColumnRequest *request)=0;
	virtual void async_DeleteViewColumn(IClientDeleteViewColumnRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientDeleteViewMemberRequest * createDeleteViewMemberRequest()=0;
	virtual IClientDeleteViewMemberResponse * DeleteViewMember(IClientDeleteViewMemberRequest *request)=0;
	virtual void async_DeleteViewMember(IClientDeleteViewMemberRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientDisableScopeScansRequest * createDisableScopeScansRequest()=0;
	virtual IClientDisableScopeScansResponse * DisableScopeScans(IClientDisableScopeScansRequest *request)=0;
	virtual void async_DisableScopeScans(IClientDisableScopeScansRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientEnableScopeScansRequest * createEnableScopeScansRequest()=0;
	virtual IClientEnableScopeScansResponse * EnableScopeScans(IClientEnableScopeScansRequest *request)=0;
	virtual void async_EnableScopeScans(IClientEnableScopeScansRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientFilePermissionRequest * createFilePermissionRequest()=0;
	virtual IClientFilePermissionResponse * FilePermission(IClientFilePermissionRequest *request)=0;
	virtual void async_FilePermission(IClientFilePermissionRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientGroupActionRequest * createGroupActionRequest()=0;
	virtual IClientGroupActionResponse * GroupAction(IClientGroupActionRequest *request)=0;
	virtual void async_GroupAction(IClientGroupActionRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientGroupAddRequest * createGroupAddRequest()=0;
	virtual IClientGroupAddResponse * GroupAdd(IClientGroupAddRequest *request)=0;
	virtual void async_GroupAdd(IClientGroupAddRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientGroupEditRequest * createGroupEditRequest()=0;
	virtual IClientGroupEditResponse * GroupEdit(IClientGroupEditRequest *request)=0;
	virtual void async_GroupEdit(IClientGroupEditRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientGroupMemberEditRequest * createGroupMemberEditRequest()=0;
	virtual IClientGroupMemberEditResponse * GroupMemberEdit(IClientGroupMemberEditRequest *request)=0;
	virtual void async_GroupMemberEdit(IClientGroupMemberEditRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientGroupMemberEditInputRequest * createGroupMemberEditInputRequest()=0;
	virtual IClientGroupMemberEditInputResponse * GroupMemberEditInput(IClientGroupMemberEditInputRequest *request)=0;
	virtual void async_GroupMemberEditInput(IClientGroupMemberEditInputRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientGroupMemberQueryRequest * createGroupMemberQueryRequest()=0;
	virtual IClientGroupMemberQueryResponse * GroupMemberQuery(IClientGroupMemberQueryRequest *request)=0;
	virtual void async_GroupMemberQuery(IClientGroupMemberQueryRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientGroupQueryRequest * createGroupQueryRequest()=0;
	virtual IClientGroupQueryResponse * GroupQuery(IClientGroupQueryRequest *request)=0;
	virtual void async_GroupQuery(IClientGroupQueryRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientGroupRequest * createGroupsRequest()=0;
	virtual IClientGroupResponse * Groups(IClientGroupRequest *request)=0;
	virtual void async_Groups(IClientGroupRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientPermissionActionRequest * createPermissionActionRequest()=0;
	virtual IClientPermissionActionResponse * PermissionAction(IClientPermissionActionRequest *request)=0;
	virtual void async_PermissionAction(IClientPermissionActionRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientPermissionAddRequest * createPermissionAddInputRequest()=0;
	virtual IClientPermissionAddResponse * PermissionAddInput(IClientPermissionAddRequest *request)=0;
	virtual void async_PermissionAddInput(IClientPermissionAddRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientBasednsRequest * createPermissionsRequest()=0;
	virtual IClientBasednsResponse * Permissions(IClientBasednsRequest *request)=0;
	virtual void async_Permissions(IClientBasednsRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientPermissionsResetRequest * createPermissionsResetRequest()=0;
	virtual IClientPermissionsResetResponse * PermissionsReset(IClientPermissionsResetRequest *request)=0;
	virtual void async_PermissionsReset(IClientPermissionsResetRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientPermissionsResetInputRequest * createPermissionsResetInputRequest()=0;
	virtual IClientPermissionsResetInputResponse * PermissionsResetInput(IClientPermissionsResetInputRequest *request)=0;
	virtual void async_PermissionsResetInput(IClientPermissionsResetInputRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientws_accessPingRequest * createPingRequest()=0;
	virtual IClientws_accessPingResponse * Ping(IClientws_accessPingRequest *request)=0;
	virtual void async_Ping(IClientws_accessPingRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientQueryScopeScansEnabledRequest * createQueryScopeScansEnabledRequest()=0;
	virtual IClientQueryScopeScansEnabledResponse * QueryScopeScansEnabled(IClientQueryScopeScansEnabledRequest *request)=0;
	virtual void async_QueryScopeScansEnabled(IClientQueryScopeScansEnabledRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientQueryUserViewColumnsRequest * createQueryUserViewColumnsRequest()=0;
	virtual IClientQueryUserViewColumnsResponse * QueryUserViewColumns(IClientQueryUserViewColumnsRequest *request)=0;
	virtual void async_QueryUserViewColumns(IClientQueryUserViewColumnsRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientQueryViewColumnsRequest * createQueryViewColumnsRequest()=0;
	virtual IClientQueryViewColumnsResponse * QueryViewColumns(IClientQueryViewColumnsRequest *request)=0;
	virtual void async_QueryViewColumns(IClientQueryViewColumnsRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientQueryViewMembersRequest * createQueryViewMembersRequest()=0;
	virtual IClientQueryViewMembersResponse * QueryViewMembers(IClientQueryViewMembersRequest *request)=0;
	virtual void async_QueryViewMembers(IClientQueryViewMembersRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientQueryViewsRequest * createQueryViewsRequest()=0;
	virtual IClientQueryViewsResponse * QueryViews(IClientQueryViewsRequest *request)=0;
	virtual void async_QueryViews(IClientQueryViewsRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientResourceAddRequest * createResourceAddRequest()=0;
	virtual IClientResourceAddResponse * ResourceAdd(IClientResourceAddRequest *request)=0;
	virtual void async_ResourceAdd(IClientResourceAddRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientResourceAddInputRequest * createResourceAddInputRequest()=0;
	virtual IClientResourceAddInputResponse * ResourceAddInput(IClientResourceAddInputRequest *request)=0;
	virtual void async_ResourceAddInput(IClientResourceAddInputRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientResourceDeleteRequest * createResourceDeleteRequest()=0;
	virtual IClientResourceDeleteResponse * ResourceDelete(IClientResourceDeleteRequest *request)=0;
	virtual void async_ResourceDelete(IClientResourceDeleteRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientResourcePermissionQueryRequest * createResourcePermissionQueryRequest()=0;
	virtual IClientResourcePermissionQueryResponse * ResourcePermissionQuery(IClientResourcePermissionQueryRequest *request)=0;
	virtual void async_ResourcePermissionQuery(IClientResourcePermissionQueryRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientResourcePermissionsRequest * createResourcePermissionsRequest()=0;
	virtual IClientResourcePermissionsResponse * ResourcePermissions(IClientResourcePermissionsRequest *request)=0;
	virtual void async_ResourcePermissions(IClientResourcePermissionsRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientResourceQueryRequest * createResourceQueryRequest()=0;
	virtual IClientResourceQueryResponse * ResourceQuery(IClientResourceQueryRequest *request)=0;
	virtual void async_ResourceQuery(IClientResourceQueryRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientResourcesRequest * createResourcesRequest()=0;
	virtual IClientResourcesResponse * Resources(IClientResourcesRequest *request)=0;
	virtual void async_Resources(IClientResourcesRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserAccountExportRequest * createUserAccountExportRequest()=0;
	virtual IClientUserAccountExportResponse * UserAccountExport(IClientUserAccountExportRequest *request)=0;
	virtual void async_UserAccountExport(IClientUserAccountExportRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserActionRequest * createUserActionRequest()=0;
	virtual IClientUserActionResponse * UserAction(IClientUserActionRequest *request)=0;
	virtual void async_UserAction(IClientUserActionRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserEditRequest * createUserEditRequest()=0;
	virtual IClientUserEditResponse * UserEdit(IClientUserEditRequest *request)=0;
	virtual void async_UserEdit(IClientUserEditRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserGroupEditRequest * createUserGroupEditRequest()=0;
	virtual IClientUserGroupEditResponse * UserGroupEdit(IClientUserGroupEditRequest *request)=0;
	virtual void async_UserGroupEdit(IClientUserGroupEditRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserGroupEditInputRequest * createUserGroupEditInputRequest()=0;
	virtual IClientUserGroupEditInputResponse * UserGroupEditInput(IClientUserGroupEditInputRequest *request)=0;
	virtual void async_UserGroupEditInput(IClientUserGroupEditInputRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserInfoEditRequest * createUserInfoEditRequest()=0;
	virtual IClientUserInfoEditResponse * UserInfoEdit(IClientUserInfoEditRequest *request)=0;
	virtual void async_UserInfoEdit(IClientUserInfoEditRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserInfoEditInputRequest * createUserInfoEditInputRequest()=0;
	virtual IClientUserInfoEditInputResponse * UserInfoEditInput(IClientUserInfoEditInputRequest *request)=0;
	virtual void async_UserInfoEditInput(IClientUserInfoEditInputRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserPosixRequest * createUserPosixRequest()=0;
	virtual IClientUserPosixResponse * UserPosix(IClientUserPosixRequest *request)=0;
	virtual void async_UserPosix(IClientUserPosixRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserPosixInputRequest * createUserPosixInputRequest()=0;
	virtual IClientUserPosixInputResponse * UserPosixInput(IClientUserPosixInputRequest *request)=0;
	virtual void async_UserPosixInput(IClientUserPosixInputRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserQueryRequest * createUserQueryRequest()=0;
	virtual IClientUserQueryResponse * UserQuery(IClientUserQueryRequest *request)=0;
	virtual void async_UserQuery(IClientUserQueryRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserResetPassRequest * createUserResetPassRequest()=0;
	virtual IClientUserResetPassResponse * UserResetPass(IClientUserResetPassRequest *request)=0;
	virtual void async_UserResetPass(IClientUserResetPassRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserResetPassInputRequest * createUserResetPassInputRequest()=0;
	virtual IClientUserResetPassInputResponse * UserResetPassInput(IClientUserResetPassInputRequest *request)=0;
	virtual void async_UserResetPassInput(IClientUserResetPassInputRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserSudoersRequest * createUserSudoersRequest()=0;
	virtual IClientUserSudoersResponse * UserSudoers(IClientUserSudoersRequest *request)=0;
	virtual void async_UserSudoers(IClientUserSudoersRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserSudoersInputRequest * createUserSudoersInputRequest()=0;
	virtual IClientUserSudoersInputResponse * UserSudoersInput(IClientUserSudoersInputRequest *request)=0;
	virtual void async_UserSudoersInput(IClientUserSudoersInputRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;

	virtual IClientUserRequest * createUsersRequest()=0;
	virtual IClientUserResponse * Users(IClientUserRequest *request)=0;
	virtual void async_Users(IClientUserRequest *request, IClientws_accessEvents *events,IInterface* state=0)=0;


	virtual IClientAccountPermissionsResponse *AccountPermissionsFn(const char * AccountName_, bool IsGroup_, bool IncludeGroup_)=0;

	virtual IClientAddUserResponse *AddUserFn(const char * username_, const char * firstname_, const char * lastname_, const char * password1_, const char * password2_, const char * employeeID_)=0;

	virtual IClientAddViewResponse *AddViewFn(const char * viewname_, const char * description_)=0;

	virtual IClientAddViewColumnResponse *AddViewColumnFn(const char * viewname_, const char * filename_, const char * columnname_)=0;

	virtual IClientAddViewMemberResponse *AddViewMemberFn(const char * viewname_, const char * membername_, CViewMemberType membertype_)=0;

	virtual IClientClearPermissionsCacheResponse *ClearPermissionsCacheFn()=0;

	virtual IClientDeleteViewResponse *DeleteViewFn(const char * viewname_)=0;

	virtual IClientDeleteViewColumnResponse *DeleteViewColumnFn(const char * viewname_, const char * filename_, const char * columnname_)=0;

	virtual IClientDeleteViewMemberResponse *DeleteViewMemberFn(const char * viewname_, const char * membername_, CViewMemberType membertype_)=0;

	virtual IClientDisableScopeScansResponse *DisableScopeScansFn()=0;

	virtual IClientEnableScopeScansResponse *EnableScopeScansFn()=0;

	virtual IClientFilePermissionResponse *FilePermissionFn(const char * FileName_, const char * UserName_, const char * GroupName_)=0;

	virtual IClientGroupActionResponse *GroupActionFn(StringArray &groupnames_, const char * ActionType_, bool DeletePermission_)=0;

	virtual IClientGroupAddResponse *GroupAddFn(const char * groupname_, const char * groupOwner_, const char * groupDesc_)=0;

	virtual IClientGroupEditResponse *GroupEditFn(const char * groupname_)=0;

	virtual IClientGroupMemberEditResponse *GroupMemberEditFn(const char * groupname_, const char * action_, StringArray &usernames_)=0;

	virtual IClientGroupMemberEditInputResponse *GroupMemberEditInputFn(const char * searchinput_, const char * groupname_)=0;

	virtual IClientGroupMemberQueryResponse *GroupMemberQueryFn(const char * GroupName_, unsigned int PageSize_, __int64 PageStartFrom_, CUserSortBy SortBy_, bool Descending_, __int64 CacheHint_)=0;

	virtual IClientGroupQueryResponse *GroupQueryFn(unsigned int PageSize_, __int64 PageStartFrom_, CGroupSortBy SortBy_, bool Descending_, __int64 CacheHint_)=0;

	virtual IClientGroupResponse *GroupsFn()=0;

	virtual IClientPermissionActionResponse *PermissionActionFn(const char * basedn_, const char * rtype_, const char * rname_, const char * rtitle_, const char * prefix_, const char * action_, const char * account_name_, int account_type_, bool allow_access_, bool allow_read_, bool allow_write_, bool allow_full_, bool deny_access_, bool deny_read_, bool deny_write_, bool deny_full_, const char * user_, const char * group_, const char * BasednName_, const char * ResourceName_)=0;

	virtual IClientPermissionAddResponse *PermissionAddInputFn(const char * basedn_, const char * rtype_, const char * rtitle_, const char * rname_, const char * prefix_, const char * BasednName_, const char * AccountName_, int AccountType_)=0;

	virtual IClientBasednsResponse *PermissionsFn()=0;

	virtual IClientPermissionsResetResponse *PermissionsResetFn(const char * basedn_, const char * rtype_, const char * rname_, const char * rtitle_, const char * prefix_, StringArray &names_, bool allow_access_, bool allow_read_, bool allow_write_, bool allow_full_, bool deny_access_, bool deny_read_, bool deny_write_, bool deny_full_, const char * userarray_, const char * grouparray_)=0;

	virtual IClientPermissionsResetInputResponse *PermissionsResetInputFn(const char * basedn_, const char * rtype_, const char * rtitle_, const char * rname_, const char * prefix_, StringArray &names_)=0;

	virtual IClientws_accessPingResponse *PingFn()=0;

	virtual IClientQueryScopeScansEnabledResponse *QueryScopeScansEnabledFn()=0;

	virtual IClientQueryUserViewColumnsResponse *QueryUserViewColumnsFn(const char * username_)=0;

	virtual IClientQueryViewColumnsResponse *QueryViewColumnsFn(const char * viewname_)=0;

	virtual IClientQueryViewMembersResponse *QueryViewMembersFn(const char * viewname_)=0;

	virtual IClientQueryViewsResponse *QueryViewsFn()=0;

	virtual IClientResourceAddResponse *ResourceAddFn(const char * basedn_, const char * rtype_, const char * rtitle_, const char * name_, const char * description_, const char * prefix_)=0;

	virtual IClientResourceAddInputResponse *ResourceAddInputFn(const char * basedn_, const char * rtype_, const char * rtitle_, const char * prefix_)=0;

	virtual IClientResourceDeleteResponse *ResourceDeleteFn(const char * basedn_, const char * rtype_, const char * rtitle_, const char * prefix_, StringArray &names_, int DoUpdate_)=0;

	virtual IClientResourcePermissionQueryResponse *ResourcePermissionQueryFn(const char * basedn_, const char * rtype_, const char * rtitle_, const char * prefix_, const char * Name_, CAccountTypeReq AccountType_, unsigned int PageSize_, __int64 PageStartFrom_, CResourcePermissionSortBy SortBy_, bool Descending_, __int64 CacheHint_)=0;

	virtual IClientResourcePermissionsResponse *ResourcePermissionsFn(const char * basedn_, const char * rtype_, const char * name_, const char * rtitle_, const char * prefix_)=0;

	virtual IClientResourceQueryResponse *ResourceQueryFn(const char * basedn_, const char * rtype_, const char * rtitle_, const char * prefix_, const char * Name_, unsigned int PageSize_, __int64 PageStartFrom_, CResourceSortBy SortBy_, bool Descending_, __int64 CacheHint_)=0;

	virtual IClientResourcesResponse *ResourcesFn(const char * basedn_, const char * rtype_, const char * rtitle_, const char * templatename_, const char * prefix_, const char * searchinput_)=0;

	virtual IClientUserAccountExportResponse *UserAccountExportFn(StringArray &usernames_, StringArray &groupnames_)=0;

	virtual IClientUserActionResponse *UserActionFn(const char * action_, const char * ActionType_, StringArray &usernames_)=0;

	virtual IClientUserEditResponse *UserEditFn(const char * username_)=0;

	virtual IClientUserGroupEditResponse *UserGroupEditFn(const char * username_, const char * action_, StringArray &groupnames_)=0;

	virtual IClientUserGroupEditInputResponse *UserGroupEditInputFn(const char * username_)=0;

	virtual IClientUserInfoEditResponse *UserInfoEditFn(const char * username_, const char * firstname_, const char * lastname_, const char * employeeID_)=0;

	virtual IClientUserInfoEditInputResponse *UserInfoEditInputFn(const char * username_)=0;

	virtual IClientUserPosixResponse *UserPosixFn(const char * username_, bool posixenabled_, const char * gidnumber_, const char * uidnumber_, const char * homedirectory_, const char * loginshell_)=0;

	virtual IClientUserPosixInputResponse *UserPosixInputFn(const char * username_)=0;

	virtual IClientUserQueryResponse *UserQueryFn(const char * Name_, unsigned int PageSize_, __int64 PageStartFrom_, CUserSortBy SortBy_, bool Descending_, __int64 CacheHint_)=0;

	virtual IClientUserResetPassResponse *UserResetPassFn(const char * username_, const char * newPassword_, const char * newPasswordRetype_)=0;

	virtual IClientUserResetPassInputResponse *UserResetPassInputFn(const char * username_)=0;

	virtual IClientUserSudoersResponse *UserSudoersFn(const char * username_, const char * action_, const char * sudoHost_, const char * sudoCommand_, const char * sudoOption_)=0;

	virtual IClientUserSudoersInputResponse *UserSudoersInputFn(const char * username_)=0;

	virtual IClientUserResponse *UsersFn(const char * searchinput_)=0;
};



#ifndef ws_access_API
#define ws_access_API
#endif //ws_access_API



extern "C" ws_access_API IClientws_access * createws_accessClient();


extern "C"  IEspUserInfo *createUserInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientUserInfo *createClientUserInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspGroupInfo *createGroupInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientGroupInfo *createClientGroupInfo(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspAccountPermission *createAccountPermission(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientAccountPermission *createClientAccountPermission(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspGroupAccountPermission *createGroupAccountPermission(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientGroupAccountPermission *createClientGroupAccountPermission(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspUserRequest *createUserRequest(const char *serv=NULL);
extern "C"  IClientUserRequest *createClientUserRequest(const char *serv=NULL);
extern "C"  IEspUserResponse *createUserResponse(const char *serv=NULL);
extern "C"  IClientUserResponse *createClientUserResponse(const char *serv=NULL);
extern "C"  IEspUserQueryRequest *createUserQueryRequest(const char *serv=NULL);
extern "C"  IClientUserQueryRequest *createClientUserQueryRequest(const char *serv=NULL);
extern "C"  IEspUserQueryResponse *createUserQueryResponse(const char *serv=NULL);
extern "C"  IClientUserQueryResponse *createClientUserQueryResponse(const char *serv=NULL);
extern "C"  IEspUserEditRequest *createUserEditRequest(const char *serv=NULL);
extern "C"  IClientUserEditRequest *createClientUserEditRequest(const char *serv=NULL);
extern "C"  IEspUserEditResponse *createUserEditResponse(const char *serv=NULL);
extern "C"  IClientUserEditResponse *createClientUserEditResponse(const char *serv=NULL);
extern "C"  IEspUserGroupEditInputRequest *createUserGroupEditInputRequest(const char *serv=NULL);
extern "C"  IClientUserGroupEditInputRequest *createClientUserGroupEditInputRequest(const char *serv=NULL);
extern "C"  IEspUserGroupEditInputResponse *createUserGroupEditInputResponse(const char *serv=NULL);
extern "C"  IClientUserGroupEditInputResponse *createClientUserGroupEditInputResponse(const char *serv=NULL);
extern "C"  IEspUserGroupEditRequest *createUserGroupEditRequest(const char *serv=NULL);
extern "C"  IClientUserGroupEditRequest *createClientUserGroupEditRequest(const char *serv=NULL);
extern "C"  IEspUserGroupEditResponse *createUserGroupEditResponse(const char *serv=NULL);
extern "C"  IClientUserGroupEditResponse *createClientUserGroupEditResponse(const char *serv=NULL);
extern "C"  IEspUserPosixInputRequest *createUserPosixInputRequest(const char *serv=NULL);
extern "C"  IClientUserPosixInputRequest *createClientUserPosixInputRequest(const char *serv=NULL);
extern "C"  IEspUserPosixInputResponse *createUserPosixInputResponse(const char *serv=NULL);
extern "C"  IClientUserPosixInputResponse *createClientUserPosixInputResponse(const char *serv=NULL);
extern "C"  IEspUserPosixRequest *createUserPosixRequest(const char *serv=NULL);
extern "C"  IClientUserPosixRequest *createClientUserPosixRequest(const char *serv=NULL);
extern "C"  IEspUserPosixResponse *createUserPosixResponse(const char *serv=NULL);
extern "C"  IClientUserPosixResponse *createClientUserPosixResponse(const char *serv=NULL);
extern "C"  IEspUserSudoersInputRequest *createUserSudoersInputRequest(const char *serv=NULL);
extern "C"  IClientUserSudoersInputRequest *createClientUserSudoersInputRequest(const char *serv=NULL);
extern "C"  IEspUserSudoersInputResponse *createUserSudoersInputResponse(const char *serv=NULL);
extern "C"  IClientUserSudoersInputResponse *createClientUserSudoersInputResponse(const char *serv=NULL);
extern "C"  IEspUserSudoersRequest *createUserSudoersRequest(const char *serv=NULL);
extern "C"  IClientUserSudoersRequest *createClientUserSudoersRequest(const char *serv=NULL);
extern "C"  IEspUserSudoersResponse *createUserSudoersResponse(const char *serv=NULL);
extern "C"  IClientUserSudoersResponse *createClientUserSudoersResponse(const char *serv=NULL);
extern "C"  IEspUserInfoEditInputRequest *createUserInfoEditInputRequest(const char *serv=NULL);
extern "C"  IClientUserInfoEditInputRequest *createClientUserInfoEditInputRequest(const char *serv=NULL);
extern "C"  IEspUserInfoEditInputResponse *createUserInfoEditInputResponse(const char *serv=NULL);
extern "C"  IClientUserInfoEditInputResponse *createClientUserInfoEditInputResponse(const char *serv=NULL);
extern "C"  IEspUserInfoEditRequest *createUserInfoEditRequest(const char *serv=NULL);
extern "C"  IClientUserInfoEditRequest *createClientUserInfoEditRequest(const char *serv=NULL);
extern "C"  IEspUserInfoEditResponse *createUserInfoEditResponse(const char *serv=NULL);
extern "C"  IClientUserInfoEditResponse *createClientUserInfoEditResponse(const char *serv=NULL);
extern "C"  IEspAddUserRequest *createAddUserRequest(const char *serv=NULL);
extern "C"  IClientAddUserRequest *createClientAddUserRequest(const char *serv=NULL);
extern "C"  IEspAddUserResponse *createAddUserResponse(const char *serv=NULL);
extern "C"  IClientAddUserResponse *createClientAddUserResponse(const char *serv=NULL);
extern "C"  IEspUserActionRequest *createUserActionRequest(const char *serv=NULL);
extern "C"  IClientUserActionRequest *createClientUserActionRequest(const char *serv=NULL);
extern "C"  IEspUserActionResponse *createUserActionResponse(const char *serv=NULL);
extern "C"  IClientUserActionResponse *createClientUserActionResponse(const char *serv=NULL);
extern "C"  IEspUserResetPassInputRequest *createUserResetPassInputRequest(const char *serv=NULL);
extern "C"  IClientUserResetPassInputRequest *createClientUserResetPassInputRequest(const char *serv=NULL);
extern "C"  IEspUserResetPassInputResponse *createUserResetPassInputResponse(const char *serv=NULL);
extern "C"  IClientUserResetPassInputResponse *createClientUserResetPassInputResponse(const char *serv=NULL);
extern "C"  IEspUserResetPassRequest *createUserResetPassRequest(const char *serv=NULL);
extern "C"  IClientUserResetPassRequest *createClientUserResetPassRequest(const char *serv=NULL);
extern "C"  IEspUserResetPassResponse *createUserResetPassResponse(const char *serv=NULL);
extern "C"  IClientUserResetPassResponse *createClientUserResetPassResponse(const char *serv=NULL);
extern "C"  IEspGroupRequest *createGroupRequest(const char *serv=NULL);
extern "C"  IClientGroupRequest *createClientGroupRequest(const char *serv=NULL);
extern "C"  IEspGroupResponse *createGroupResponse(const char *serv=NULL);
extern "C"  IClientGroupResponse *createClientGroupResponse(const char *serv=NULL);
extern "C"  IEspGroupQueryRequest *createGroupQueryRequest(const char *serv=NULL);
extern "C"  IClientGroupQueryRequest *createClientGroupQueryRequest(const char *serv=NULL);
extern "C"  IEspGroupQueryResponse *createGroupQueryResponse(const char *serv=NULL);
extern "C"  IClientGroupQueryResponse *createClientGroupQueryResponse(const char *serv=NULL);
extern "C"  IEspGroupAddRequest *createGroupAddRequest(const char *serv=NULL);
extern "C"  IClientGroupAddRequest *createClientGroupAddRequest(const char *serv=NULL);
extern "C"  IEspGroupAddResponse *createGroupAddResponse(const char *serv=NULL);
extern "C"  IClientGroupAddResponse *createClientGroupAddResponse(const char *serv=NULL);
extern "C"  IEspGroupActionRequest *createGroupActionRequest(const char *serv=NULL);
extern "C"  IClientGroupActionRequest *createClientGroupActionRequest(const char *serv=NULL);
extern "C"  IEspGroupActionResponse *createGroupActionResponse(const char *serv=NULL);
extern "C"  IClientGroupActionResponse *createClientGroupActionResponse(const char *serv=NULL);
extern "C"  IEspGroupEditRequest *createGroupEditRequest(const char *serv=NULL);
extern "C"  IClientGroupEditRequest *createClientGroupEditRequest(const char *serv=NULL);
extern "C"  IEspGroupEditResponse *createGroupEditResponse(const char *serv=NULL);
extern "C"  IClientGroupEditResponse *createClientGroupEditResponse(const char *serv=NULL);
extern "C"  IEspGroupMemberQueryRequest *createGroupMemberQueryRequest(const char *serv=NULL);
extern "C"  IClientGroupMemberQueryRequest *createClientGroupMemberQueryRequest(const char *serv=NULL);
extern "C"  IEspGroupMemberQueryResponse *createGroupMemberQueryResponse(const char *serv=NULL);
extern "C"  IClientGroupMemberQueryResponse *createClientGroupMemberQueryResponse(const char *serv=NULL);
extern "C"  IEspGroupMemberEditInputRequest *createGroupMemberEditInputRequest(const char *serv=NULL);
extern "C"  IClientGroupMemberEditInputRequest *createClientGroupMemberEditInputRequest(const char *serv=NULL);
extern "C"  IEspGroupMemberEditInputResponse *createGroupMemberEditInputResponse(const char *serv=NULL);
extern "C"  IClientGroupMemberEditInputResponse *createClientGroupMemberEditInputResponse(const char *serv=NULL);
extern "C"  IEspGroupMemberEditRequest *createGroupMemberEditRequest(const char *serv=NULL);
extern "C"  IClientGroupMemberEditRequest *createClientGroupMemberEditRequest(const char *serv=NULL);
extern "C"  IEspGroupMemberEditResponse *createGroupMemberEditResponse(const char *serv=NULL);
extern "C"  IClientGroupMemberEditResponse *createClientGroupMemberEditResponse(const char *serv=NULL);
extern "C"  IEspBasednsRequest *createBasednsRequest(const char *serv=NULL);
extern "C"  IClientBasednsRequest *createClientBasednsRequest(const char *serv=NULL);
extern "C"  IEspDnStruct *createDnStruct(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientDnStruct *createClientDnStruct(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspBasednsResponse *createBasednsResponse(const char *serv=NULL);
extern "C"  IClientBasednsResponse *createClientBasednsResponse(const char *serv=NULL);
extern "C"  IEspResourcesRequest *createResourcesRequest(const char *serv=NULL);
extern "C"  IClientResourcesRequest *createClientResourcesRequest(const char *serv=NULL);
extern "C"  IEspResource *createResource(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientResource *createClientResource(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspScopeScanStatusStruct *createScopeScanStatusStruct(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientScopeScanStatusStruct *createClientScopeScanStatusStruct(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspResourcesResponse *createResourcesResponse(const char *serv=NULL);
extern "C"  IClientResourcesResponse *createClientResourcesResponse(const char *serv=NULL);
extern "C"  IEspResourceQueryRequest *createResourceQueryRequest(const char *serv=NULL);
extern "C"  IClientResourceQueryRequest *createClientResourceQueryRequest(const char *serv=NULL);
extern "C"  IEspResourceQueryResponse *createResourceQueryResponse(const char *serv=NULL);
extern "C"  IClientResourceQueryResponse *createClientResourceQueryResponse(const char *serv=NULL);
extern "C"  IEspResourceAddInputRequest *createResourceAddInputRequest(const char *serv=NULL);
extern "C"  IClientResourceAddInputRequest *createClientResourceAddInputRequest(const char *serv=NULL);
extern "C"  IEspResourceAddInputResponse *createResourceAddInputResponse(const char *serv=NULL);
extern "C"  IClientResourceAddInputResponse *createClientResourceAddInputResponse(const char *serv=NULL);
extern "C"  IEspResourceAddRequest *createResourceAddRequest(const char *serv=NULL);
extern "C"  IClientResourceAddRequest *createClientResourceAddRequest(const char *serv=NULL);
extern "C"  IEspResourceAddResponse *createResourceAddResponse(const char *serv=NULL);
extern "C"  IClientResourceAddResponse *createClientResourceAddResponse(const char *serv=NULL);
extern "C"  IEspResourceDeleteRequest *createResourceDeleteRequest(const char *serv=NULL);
extern "C"  IClientResourceDeleteRequest *createClientResourceDeleteRequest(const char *serv=NULL);
extern "C"  IEspResourceDeleteResponse *createResourceDeleteResponse(const char *serv=NULL);
extern "C"  IClientResourceDeleteResponse *createClientResourceDeleteResponse(const char *serv=NULL);
extern "C"  IEspResourcePermissionsRequest *createResourcePermissionsRequest(const char *serv=NULL);
extern "C"  IClientResourcePermissionsRequest *createClientResourcePermissionsRequest(const char *serv=NULL);
extern "C"  IEspResourcePermission *createResourcePermission(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientResourcePermission *createClientResourcePermission(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspResourcePermissionsResponse *createResourcePermissionsResponse(const char *serv=NULL);
extern "C"  IClientResourcePermissionsResponse *createClientResourcePermissionsResponse(const char *serv=NULL);
extern "C"  IEspResourcePermissionQueryRequest *createResourcePermissionQueryRequest(const char *serv=NULL);
extern "C"  IClientResourcePermissionQueryRequest *createClientResourcePermissionQueryRequest(const char *serv=NULL);
extern "C"  IEspResourcePermissionQueryResponse *createResourcePermissionQueryResponse(const char *serv=NULL);
extern "C"  IClientResourcePermissionQueryResponse *createClientResourcePermissionQueryResponse(const char *serv=NULL);
extern "C"  IEspView *createView(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientView *createClientView(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspQueryViewsRequest *createQueryViewsRequest(const char *serv=NULL);
extern "C"  IClientQueryViewsRequest *createClientQueryViewsRequest(const char *serv=NULL);
extern "C"  IEspQueryViewsResponse *createQueryViewsResponse(const char *serv=NULL);
extern "C"  IClientQueryViewsResponse *createClientQueryViewsResponse(const char *serv=NULL);
extern "C"  IEspAddViewRequest *createAddViewRequest(const char *serv=NULL);
extern "C"  IClientAddViewRequest *createClientAddViewRequest(const char *serv=NULL);
extern "C"  IEspAddViewResponse *createAddViewResponse(const char *serv=NULL);
extern "C"  IClientAddViewResponse *createClientAddViewResponse(const char *serv=NULL);
extern "C"  IEspDeleteViewRequest *createDeleteViewRequest(const char *serv=NULL);
extern "C"  IClientDeleteViewRequest *createClientDeleteViewRequest(const char *serv=NULL);
extern "C"  IEspDeleteViewResponse *createDeleteViewResponse(const char *serv=NULL);
extern "C"  IClientDeleteViewResponse *createClientDeleteViewResponse(const char *serv=NULL);
extern "C"  IEspViewColumn *createViewColumn(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientViewColumn *createClientViewColumn(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspQueryViewColumnsRequest *createQueryViewColumnsRequest(const char *serv=NULL);
extern "C"  IClientQueryViewColumnsRequest *createClientQueryViewColumnsRequest(const char *serv=NULL);
extern "C"  IEspQueryViewColumnsResponse *createQueryViewColumnsResponse(const char *serv=NULL);
extern "C"  IClientQueryViewColumnsResponse *createClientQueryViewColumnsResponse(const char *serv=NULL);
extern "C"  IEspAddViewColumnRequest *createAddViewColumnRequest(const char *serv=NULL);
extern "C"  IClientAddViewColumnRequest *createClientAddViewColumnRequest(const char *serv=NULL);
extern "C"  IEspAddViewColumnResponse *createAddViewColumnResponse(const char *serv=NULL);
extern "C"  IClientAddViewColumnResponse *createClientAddViewColumnResponse(const char *serv=NULL);
extern "C"  IEspDeleteViewColumnRequest *createDeleteViewColumnRequest(const char *serv=NULL);
extern "C"  IClientDeleteViewColumnRequest *createClientDeleteViewColumnRequest(const char *serv=NULL);
extern "C"  IEspDeleteViewColumnResponse *createDeleteViewColumnResponse(const char *serv=NULL);
extern "C"  IClientDeleteViewColumnResponse *createClientDeleteViewColumnResponse(const char *serv=NULL);
extern "C"  IEspViewMember *createViewMember(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientViewMember *createClientViewMember(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspQueryViewMembersRequest *createQueryViewMembersRequest(const char *serv=NULL);
extern "C"  IClientQueryViewMembersRequest *createClientQueryViewMembersRequest(const char *serv=NULL);
extern "C"  IEspQueryViewMembersResponse *createQueryViewMembersResponse(const char *serv=NULL);
extern "C"  IClientQueryViewMembersResponse *createClientQueryViewMembersResponse(const char *serv=NULL);
extern "C"  IEspAddViewMemberRequest *createAddViewMemberRequest(const char *serv=NULL);
extern "C"  IClientAddViewMemberRequest *createClientAddViewMemberRequest(const char *serv=NULL);
extern "C"  IEspAddViewMemberResponse *createAddViewMemberResponse(const char *serv=NULL);
extern "C"  IClientAddViewMemberResponse *createClientAddViewMemberResponse(const char *serv=NULL);
extern "C"  IEspDeleteViewMemberRequest *createDeleteViewMemberRequest(const char *serv=NULL);
extern "C"  IClientDeleteViewMemberRequest *createClientDeleteViewMemberRequest(const char *serv=NULL);
extern "C"  IEspDeleteViewMemberResponse *createDeleteViewMemberResponse(const char *serv=NULL);
extern "C"  IClientDeleteViewMemberResponse *createClientDeleteViewMemberResponse(const char *serv=NULL);
extern "C"  IEspQueryUserViewColumnsRequest *createQueryUserViewColumnsRequest(const char *serv=NULL);
extern "C"  IClientQueryUserViewColumnsRequest *createClientQueryUserViewColumnsRequest(const char *serv=NULL);
extern "C"  IEspQueryUserViewColumnsResponse *createQueryUserViewColumnsResponse(const char *serv=NULL);
extern "C"  IClientQueryUserViewColumnsResponse *createClientQueryUserViewColumnsResponse(const char *serv=NULL);
extern "C"  IEspPermissionAddRequest *createPermissionAddRequest(const char *serv=NULL);
extern "C"  IClientPermissionAddRequest *createClientPermissionAddRequest(const char *serv=NULL);
extern "C"  IEspPermissionAddResponse *createPermissionAddResponse(const char *serv=NULL);
extern "C"  IClientPermissionAddResponse *createClientPermissionAddResponse(const char *serv=NULL);
extern "C"  IEspPermissionsResetInputRequest *createPermissionsResetInputRequest(const char *serv=NULL);
extern "C"  IClientPermissionsResetInputRequest *createClientPermissionsResetInputRequest(const char *serv=NULL);
extern "C"  IEspPermissionsResetInputResponse *createPermissionsResetInputResponse(const char *serv=NULL);
extern "C"  IClientPermissionsResetInputResponse *createClientPermissionsResetInputResponse(const char *serv=NULL);
extern "C"  IEspPermissionsResetRequest *createPermissionsResetRequest(const char *serv=NULL);
extern "C"  IClientPermissionsResetRequest *createClientPermissionsResetRequest(const char *serv=NULL);
extern "C"  IEspPermissionsResetResponse *createPermissionsResetResponse(const char *serv=NULL);
extern "C"  IClientPermissionsResetResponse *createClientPermissionsResetResponse(const char *serv=NULL);
extern "C"  IEspClearPermissionsCacheRequest *createClearPermissionsCacheRequest(const char *serv=NULL);
extern "C"  IClientClearPermissionsCacheRequest *createClientClearPermissionsCacheRequest(const char *serv=NULL);
extern "C"  IEspClearPermissionsCacheResponse *createClearPermissionsCacheResponse(const char *serv=NULL);
extern "C"  IClientClearPermissionsCacheResponse *createClientClearPermissionsCacheResponse(const char *serv=NULL);
extern "C"  IEspQueryScopeScansEnabledRequest *createQueryScopeScansEnabledRequest(const char *serv=NULL);
extern "C"  IClientQueryScopeScansEnabledRequest *createClientQueryScopeScansEnabledRequest(const char *serv=NULL);
extern "C"  IEspQueryScopeScansEnabledResponse *createQueryScopeScansEnabledResponse(const char *serv=NULL);
extern "C"  IClientQueryScopeScansEnabledResponse *createClientQueryScopeScansEnabledResponse(const char *serv=NULL);
extern "C"  IEspEnableScopeScansRequest *createEnableScopeScansRequest(const char *serv=NULL);
extern "C"  IClientEnableScopeScansRequest *createClientEnableScopeScansRequest(const char *serv=NULL);
extern "C"  IEspEnableScopeScansResponse *createEnableScopeScansResponse(const char *serv=NULL);
extern "C"  IClientEnableScopeScansResponse *createClientEnableScopeScansResponse(const char *serv=NULL);
extern "C"  IEspDisableScopeScansRequest *createDisableScopeScansRequest(const char *serv=NULL);
extern "C"  IClientDisableScopeScansRequest *createClientDisableScopeScansRequest(const char *serv=NULL);
extern "C"  IEspDisableScopeScansResponse *createDisableScopeScansResponse(const char *serv=NULL);
extern "C"  IClientDisableScopeScansResponse *createClientDisableScopeScansResponse(const char *serv=NULL);
extern "C"  IEspPermissionActionRequest *createPermissionActionRequest(const char *serv=NULL);
extern "C"  IClientPermissionActionRequest *createClientPermissionActionRequest(const char *serv=NULL);
extern "C"  IEspPermissionActionResponse *createPermissionActionResponse(const char *serv=NULL);
extern "C"  IClientPermissionActionResponse *createClientPermissionActionResponse(const char *serv=NULL);
extern "C"  IEspAccountPermissionsRequest *createAccountPermissionsRequest(const char *serv=NULL);
extern "C"  IClientAccountPermissionsRequest *createClientAccountPermissionsRequest(const char *serv=NULL);
extern "C"  IEspAccountPermissionsResponse *createAccountPermissionsResponse(const char *serv=NULL);
extern "C"  IClientAccountPermissionsResponse *createClientAccountPermissionsResponse(const char *serv=NULL);
extern "C"  IEspFilePermissionRequest *createFilePermissionRequest(const char *serv=NULL);
extern "C"  IClientFilePermissionRequest *createClientFilePermissionRequest(const char *serv=NULL);
extern "C"  IEspFilePermissionResponse *createFilePermissionResponse(const char *serv=NULL);
extern "C"  IClientFilePermissionResponse *createClientFilePermissionResponse(const char *serv=NULL);
extern "C"  IEspUserAccountExportRequest *createUserAccountExportRequest(const char *serv=NULL);
extern "C"  IClientUserAccountExportRequest *createClientUserAccountExportRequest(const char *serv=NULL);
extern "C"  IEspUserAccountExportResponse *createUserAccountExportResponse(const char *serv=NULL);
extern "C"  IClientUserAccountExportResponse *createClientUserAccountExportResponse(const char *serv=NULL);
extern "C"  IEspws_accessPingRequest *createws_accessPingRequest(const char *serv=NULL);
extern "C"  IClientws_accessPingRequest *createClientws_accessPingRequest(const char *serv=NULL);
extern "C"  IEspws_accessPingResponse *createws_accessPingResponse(const char *serv=NULL);
extern "C"  IClientws_accessPingResponse *createClientws_accessPingResponse(const char *serv=NULL);

#endif // _ws_access_SCM_INCL
//end
