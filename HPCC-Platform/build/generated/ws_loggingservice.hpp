// *** Include file generated by HIDL Version 1.3 from ws_loggingservice.ecm ***
// *** Not to be hand edited (changes will be lost on re-generation) ***

#ifndef ws_loggingservice_SCM_INCL
#define ws_loggingservice_SCM_INCL

#include "esp.hpp"



interface IConstLogItem : extends IEspStruct
{
	virtual const char * getName()=0;
	virtual const char * getValue()=0;
};

interface IEspLogItem : extends IConstLogItem
{
	virtual void setName(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual void copy(IConstLogItem &from)=0;
};

interface IClientLogItem : extends IInterface
{
	virtual void setName(const char * val)=0;
	virtual void setValue(const char * val)=0;
	virtual const char * getName()=0;
	virtual const char * getValue()=0;
};



interface IConstGetTransactionSeedRequest : extends IEspRequest
{
	virtual const char * getApplication()=0;
};

interface IEspGetTransactionSeedRequest : extends IConstGetTransactionSeedRequest
{
	virtual void setApplication(const char * val)=0;
	virtual void copy(IConstGetTransactionSeedRequest &from)=0;
};

interface IClientGetTransactionSeedRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setApplication(const char * val)=0;
};



interface IConstLoggingServiceResponse : extends IEspResponse
{
	virtual int getStatusCode()=0;
	virtual const char * getStatusMessage()=0;
};

interface IEspLoggingServiceResponse : extends IConstLoggingServiceResponse
{
	virtual void setStatusCode(int val)=0;
	virtual void setStatusMessage(const char * val)=0;
	virtual void copy(IConstLoggingServiceResponse &from)=0;
};

interface IClientLoggingServiceResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual int getStatusCode()=0;
	virtual const char * getStatusMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstGetTransactionSeedResponse : extends IEspResponse
{
	virtual const char * getSeedId()=0;
	virtual int getStatusCode()=0;
	virtual const char * getStatusMessage()=0;
};

interface IEspGetTransactionSeedResponse : extends IConstGetTransactionSeedResponse
{
	virtual void setSeedId(const char * val)=0;
	virtual void setStatusCode(int val)=0;
	virtual void setStatusMessage(const char * val)=0;
	virtual void copy(IConstGetTransactionSeedResponse &from)=0;
};

interface IClientGetTransactionSeedResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getSeedId()=0;
	virtual int getStatusCode()=0;
	virtual const char * getStatusMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstUpdateLogRequest : extends IEspRequest
{
	virtual const char * getOption()=0;
	virtual const char * getLogContent()=0;
};

interface IEspUpdateLogRequest : extends IConstUpdateLogRequest
{
	virtual void setOption(const char * val)=0;
	virtual void setLogContent(const char * val)=0;
	virtual void copy(IConstUpdateLogRequest &from)=0;
};

interface IClientUpdateLogRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setOption(const char * val)=0;
	virtual void setLogContent(const char * val)=0;
};



interface IConstUpdateLogResponse : extends IEspResponse
{
	virtual const char * getResponse()=0;
	virtual int getStatusCode()=0;
	virtual const char * getStatusMessage()=0;
};

interface IEspUpdateLogResponse : extends IConstUpdateLogResponse
{
	virtual void setResponse(const char * val)=0;
	virtual void setStatusCode(int val)=0;
	virtual void setStatusMessage(const char * val)=0;
	virtual void copy(IConstUpdateLogResponse &from)=0;
};

interface IClientUpdateLogResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual const char * getResponse()=0;
	virtual int getStatusCode()=0;
	virtual const char * getStatusMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWsLoggingServicePingRequest : extends IEspRequest
{
};

interface IEspWsLoggingServicePingRequest : extends IConstWsLoggingServicePingRequest
{
	virtual void copy(IConstWsLoggingServicePingRequest &from)=0;
};

interface IClientWsLoggingServicePingRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};

interface IConstWsLoggingServicePingResponse : extends IEspResponse
{
};

interface IEspWsLoggingServicePingResponse : extends IConstWsLoggingServicePingResponse
{
	virtual void copy(IConstWsLoggingServicePingResponse &from)=0;
};

interface IClientWsLoggingServicePingResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
};

interface IEspWsLoggingService : extends IEspService
{
	virtual bool onGetTransactionSeed(IEspContext &context, IEspGetTransactionSeedRequest &req, IEspGetTransactionSeedResponse &resp)=0;
	virtual bool onPing(IEspContext &context, IEspWsLoggingServicePingRequest &req, IEspWsLoggingServicePingResponse &resp)=0;
	virtual bool onUpdateLog(IEspContext &context, IEspUpdateLogRequest &req, IEspUpdateLogResponse &resp)=0;
};

interface IClientWsLoggingServiceEvents : extends IInterface
{
	virtual int onGetTransactionSeedComplete(IClientGetTransactionSeedResponse *resp,IInterface* state)=0;
	virtual int onGetTransactionSeedError(IClientGetTransactionSeedResponse *resp,IInterface* state)=0;
	virtual int onPingComplete(IClientWsLoggingServicePingResponse *resp,IInterface* state)=0;
	virtual int onPingError(IClientWsLoggingServicePingResponse *resp,IInterface* state)=0;
	virtual int onUpdateLogComplete(IClientUpdateLogResponse *resp,IInterface* state)=0;
	virtual int onUpdateLogError(IClientUpdateLogResponse *resp,IInterface* state)=0;
};

interface IClientWsLoggingService : extends IInterface
{
	virtual void setProxyAddress(const char *address)=0;
	virtual void addServiceUrl(const char *url)=0;
	virtual void removeServiceUrl(const char *url)=0;
	virtual void setUsernameToken(const char *userName,const char *passWord,const char *realm)=0;
	virtual void setAction(const char *action)=0;

	virtual IClientGetTransactionSeedRequest * createGetTransactionSeedRequest()=0;
	virtual IClientGetTransactionSeedResponse * GetTransactionSeed(IClientGetTransactionSeedRequest *request)=0;
	virtual void async_GetTransactionSeed(IClientGetTransactionSeedRequest *request, IClientWsLoggingServiceEvents *events,IInterface* state=0)=0;

	virtual IClientWsLoggingServicePingRequest * createPingRequest()=0;
	virtual IClientWsLoggingServicePingResponse * Ping(IClientWsLoggingServicePingRequest *request)=0;
	virtual void async_Ping(IClientWsLoggingServicePingRequest *request, IClientWsLoggingServiceEvents *events,IInterface* state=0)=0;

	virtual IClientUpdateLogRequest * createUpdateLogRequest()=0;
	virtual IClientUpdateLogResponse * UpdateLog(IClientUpdateLogRequest *request)=0;
	virtual void async_UpdateLog(IClientUpdateLogRequest *request, IClientWsLoggingServiceEvents *events,IInterface* state=0)=0;


	virtual IClientGetTransactionSeedResponse *GetTransactionSeedFn(const char * Application_)=0;

	virtual IClientWsLoggingServicePingResponse *PingFn()=0;

	virtual IClientUpdateLogResponse *UpdateLogFn(const char * Option_, const char * LogContent_)=0;
};



#ifndef WSLOGGING_API
#define WSLOGGING_API
#endif //WSLOGGING_API



extern "C" WSLOGGING_API IClientWsLoggingService * createWsLoggingServiceClient();


extern "C"  IEspLogItem *createLogItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientLogItem *createClientLogItem(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspGetTransactionSeedRequest *createGetTransactionSeedRequest(const char *serv=NULL);
extern "C"  IClientGetTransactionSeedRequest *createClientGetTransactionSeedRequest(const char *serv=NULL);
extern "C"  IEspLoggingServiceResponse *createLoggingServiceResponse(const char *serv=NULL);
extern "C"  IClientLoggingServiceResponse *createClientLoggingServiceResponse(const char *serv=NULL);
extern "C"  IEspGetTransactionSeedResponse *createGetTransactionSeedResponse(const char *serv=NULL);
extern "C"  IClientGetTransactionSeedResponse *createClientGetTransactionSeedResponse(const char *serv=NULL);
extern "C"  IEspUpdateLogRequest *createUpdateLogRequest(const char *serv=NULL);
extern "C"  IClientUpdateLogRequest *createClientUpdateLogRequest(const char *serv=NULL);
extern "C"  IEspUpdateLogResponse *createUpdateLogResponse(const char *serv=NULL);
extern "C"  IClientUpdateLogResponse *createClientUpdateLogResponse(const char *serv=NULL);
extern "C"  IEspWsLoggingServicePingRequest *createWsLoggingServicePingRequest(const char *serv=NULL);
extern "C"  IClientWsLoggingServicePingRequest *createClientWsLoggingServicePingRequest(const char *serv=NULL);
extern "C"  IEspWsLoggingServicePingResponse *createWsLoggingServicePingResponse(const char *serv=NULL);
extern "C"  IClientWsLoggingServicePingResponse *createClientWsLoggingServicePingResponse(const char *serv=NULL);

#endif // _ws_loggingservice_SCM_INCL
//end
