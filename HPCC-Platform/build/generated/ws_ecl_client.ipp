// *** Source file generated by HIDL Version 1.3 from ws_ecl_client.ecm ***
// *** Not to be hand edited (changes will be lost on re-generation) ***

#include "ws_ecl_client.hpp"

// clarion interface stub for IClientWsEclResp 
class SCMCLWSTUB_IClientWsEclResp: public SCMStubBase, implements IClientWsEclResp // interface
	IClientWsEclResp &_o;
public:
	IMPLEMENT_SCMSTUBBASE
	SCMCLW_IClientWsEclResp(IClientWsEclResp *_if) : SCMStubBase(_if), _o(*LINK(_if)) { } 
	~SCMCLW_IClientWsEclResp() { _o.Release(); } 
	unsigned long _stdcall getRequestId()
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclResp_getRequestId;
		SCMCLW_INTRO_IClientWsEclResp_getRequestId;
#endif
		unsigned long _return;
		_return = _o.getRequestId();
#ifdef SCMCLW_OUTRO_IClientWsEclResp_getRequestId;
		SCMCLW_OUTRO_IClientWsEclResp_getRequestId;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	unsigned long _stdcall getClientValue()
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclResp_getClientValue;
		SCMCLW_INTRO_IClientWsEclResp_getClientValue;
#endif
		unsigned long _return;
		_return = _o.getClientValue();
#ifdef SCMCLW_OUTRO_IClientWsEclResp_getClientValue;
		SCMCLW_OUTRO_IClientWsEclResp_getClientValue;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	WsEclClientRequestState _stdcall getRequestState()
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclResp_getRequestState;
		SCMCLW_INTRO_IClientWsEclResp_getRequestState;
#endif
		WsEclClientRequestState _return;
		_return = _o.getRequestState();
#ifdef SCMCLW_OUTRO_IClientWsEclResp_getRequestState;
		SCMCLW_OUTRO_IClientWsEclResp_getRequestState;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	const char * _stdcall getResultsXML()
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclResp_getResultsXML;
		SCMCLW_INTRO_IClientWsEclResp_getResultsXML;
#endif
		char * _return;
		_return = _o.getResultsXML();
#ifdef SCMCLW_OUTRO_IClientWsEclResp_getResultsXML;
		SCMCLW_OUTRO_IClientWsEclResp_getResultsXML;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	const char * _stdcall getSoapMessage()
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclResp_getSoapMessage;
		SCMCLW_INTRO_IClientWsEclResp_getSoapMessage;
#endif
		char * _return;
		_return = _o.getSoapMessage();
#ifdef SCMCLW_OUTRO_IClientWsEclResp_getSoapMessage;
		SCMCLW_OUTRO_IClientWsEclResp_getSoapMessage;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	const char * _stdcall getStatusMessage(StringBuffer & message)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclResp_getStatusMessage;
		SCMCLW_INTRO_IClientWsEclResp_getStatusMessage;
#endif
		char * _return;
		_return = _o.getStatusMessage(message);
#ifdef SCMCLW_OUTRO_IClientWsEclResp_getStatusMessage;
		SCMCLW_OUTRO_IClientWsEclResp_getStatusMessage;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	const char * _stdcall getHttpMessage(StringBuffer & message)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclResp_getHttpMessage;
		SCMCLW_INTRO_IClientWsEclResp_getHttpMessage;
#endif
		char * _return;
		_return = _o.getHttpMessage(message);
#ifdef SCMCLW_OUTRO_IClientWsEclResp_getHttpMessage;
		SCMCLW_OUTRO_IClientWsEclResp_getHttpMessage;
#endif
		SCMCLW_OUTRO;
		return _return;	}
};
// clarion interface stub for IClientRequestNode 
class SCMCLWSTUB_IClientRequestNode: public SCMStubBase, implements IClientRequestNode // interface
	IClientRequestNode &_o;
public:
	IMPLEMENT_SCMSTUBBASE
	SCMCLW_IClientRequestNode(IClientRequestNode *_if) : SCMStubBase(_if), _o(*LINK(_if)) { } 
	~SCMCLW_IClientRequestNode() { _o.Release(); } 
	void _stdcall addTag(const char * name, const char * value)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientRequestNode_addTag;
		SCMCLW_INTRO_IClientRequestNode_addTag;
#endif
		_o.addTag(name, value);
#ifdef SCMCLW_OUTRO_IClientRequestNode_addTag;
		SCMCLW_OUTRO_IClientRequestNode_addTag;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall addIntTag(const char * name, int value)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientRequestNode_addIntTag;
		SCMCLW_INTRO_IClientRequestNode_addIntTag;
#endif
		_o.addIntTag(name, value);
#ifdef SCMCLW_OUTRO_IClientRequestNode_addIntTag;
		SCMCLW_OUTRO_IClientRequestNode_addIntTag;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall setTag(const char * name, const char * value)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientRequestNode_setTag;
		SCMCLW_INTRO_IClientRequestNode_setTag;
#endif
		_o.setTag(name, value);
#ifdef SCMCLW_OUTRO_IClientRequestNode_setTag;
		SCMCLW_OUTRO_IClientRequestNode_setTag;
#endif
		SCMCLW_OUTRO;
	}
	bool _stdcall hasTag(const char * name)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientRequestNode_hasTag;
		SCMCLW_INTRO_IClientRequestNode_hasTag;
#endif
		bool _return;
		_return = _o.hasTag(name);
#ifdef SCMCLW_OUTRO_IClientRequestNode_hasTag;
		SCMCLW_OUTRO_IClientRequestNode_hasTag;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	void _stdcall addAttr(const char * name, const char * value)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientRequestNode_addAttr;
		SCMCLW_INTRO_IClientRequestNode_addAttr;
#endif
		_o.addAttr(name, value);
#ifdef SCMCLW_OUTRO_IClientRequestNode_addAttr;
		SCMCLW_OUTRO_IClientRequestNode_addAttr;
#endif
		SCMCLW_OUTRO;
	}
	IClientRequestNode & _stdcall addChild(const char * name)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientRequestNode_addChild;
		SCMCLW_INTRO_IClientRequestNode_addChild;
#endif
		IClientRequestNode & _return;
		_return = _o.addChild(name);
#ifdef SCMCLW_OUTRO_IClientRequestNode_addChild;
		SCMCLW_OUTRO_IClientRequestNode_addChild;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	IClientRequestNode & _stdcall addChild(const char * name, const char * value)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientRequestNode_addChild;
		SCMCLW_INTRO_IClientRequestNode_addChild;
#endif
		IClientRequestNode & _return;
		_return = _o.addChild(name, value);
#ifdef SCMCLW_OUTRO_IClientRequestNode_addChild;
		SCMCLW_OUTRO_IClientRequestNode_addChild;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	void _stdcall addDataset(const char * name, const char * ds)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientRequestNode_addDataset;
		SCMCLW_INTRO_IClientRequestNode_addDataset;
#endif
		_o.addDataset(name, ds);
#ifdef SCMCLW_OUTRO_IClientRequestNode_addDataset;
		SCMCLW_OUTRO_IClientRequestNode_addDataset;
#endif
		SCMCLW_OUTRO;
	}
};
// clarion interface stub for IClientWsEclRequest 
class SCMCLWSTUB_IClientWsEclRequest: public SCMStubBase, implements IClientWsEclRequest // interface
	IClientWsEclRequest &_o;
public:
	IMPLEMENT_SCMSTUBBASE
	SCMCLW_IClientWsEclRequest(IClientWsEclRequest *_if) : SCMStubBase(_if), _o(*LINK(_if)) { } 
	~SCMCLW_IClientWsEclRequest() { _o.Release(); } 
	void _stdcall setUrl(const char * URL)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setUrl;
		SCMCLW_INTRO_IClientWsEclRequest_setUrl;
#endif
		_o.setUrl(URL);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setUrl;
		SCMCLW_OUTRO_IClientWsEclRequest_setUrl;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall setNamespace(const char * ns)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setNamespace;
		SCMCLW_INTRO_IClientWsEclRequest_setNamespace;
#endif
		_o.setNamespace(ns);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setNamespace;
		SCMCLW_OUTRO_IClientWsEclRequest_setNamespace;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall setNamespaceVar(const char * nsvar)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setNamespaceVar;
		SCMCLW_INTRO_IClientWsEclRequest_setNamespaceVar;
#endif
		_o.setNamespaceVar(nsvar);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setNamespaceVar;
		SCMCLW_OUTRO_IClientWsEclRequest_setNamespaceVar;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall setSoapAction(const char * action)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setSoapAction;
		SCMCLW_INTRO_IClientWsEclRequest_setSoapAction;
#endif
		_o.setSoapAction(action);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setSoapAction;
		SCMCLW_OUTRO_IClientWsEclRequest_setSoapAction;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall setClientValue(unsigned long cv)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setClientValue;
		SCMCLW_INTRO_IClientWsEclRequest_setClientValue;
#endif
		_o.setClientValue(cv);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setClientValue;
		SCMCLW_OUTRO_IClientWsEclRequest_setClientValue;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall addArray(const char * name, StringArray & array)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_addArray;
		SCMCLW_INTRO_IClientWsEclRequest_addArray;
#endif
		_o.addArray(name, array);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_addArray;
		SCMCLW_OUTRO_IClientWsEclRequest_addArray;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall setNoSecurityHeader(bool noHeader)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setNoSecurityHeader;
		SCMCLW_INTRO_IClientWsEclRequest_setNoSecurityHeader;
#endif
		_o.setNoSecurityHeader(noHeader);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setNoSecurityHeader;
		SCMCLW_OUTRO_IClientWsEclRequest_setNoSecurityHeader;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall setSpecialMethod(const char * method)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setSpecialMethod;
		SCMCLW_INTRO_IClientWsEclRequest_setSpecialMethod;
#endif
		_o.setSpecialMethod(method);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setSpecialMethod;
		SCMCLW_OUTRO_IClientWsEclRequest_setSpecialMethod;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall disableKeepAlive()
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_disableKeepAlive;
		SCMCLW_INTRO_IClientWsEclRequest_disableKeepAlive;
#endif
		_o.disableKeepAlive();
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_disableKeepAlive;
		SCMCLW_OUTRO_IClientWsEclRequest_disableKeepAlive;
#endif
		SCMCLW_OUTRO;
	}
	const char * _stdcall getSerializedContent()
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_getSerializedContent;
		SCMCLW_INTRO_IClientWsEclRequest_getSerializedContent;
#endif
		char * _return;
		_return = _o.getSerializedContent();
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_getSerializedContent;
		SCMCLW_OUTRO_IClientWsEclRequest_getSerializedContent;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	void _stdcall setSerializedContent(const char * c)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setSerializedContent;
		SCMCLW_INTRO_IClientWsEclRequest_setSerializedContent;
#endif
		_o.setSerializedContent(c);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setSerializedContent;
		SCMCLW_OUTRO_IClientWsEclRequest_setSerializedContent;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall setItemTag(const char * tag)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_setItemTag;
		SCMCLW_INTRO_IClientWsEclRequest_setItemTag;
#endif
		_o.setItemTag(tag);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_setItemTag;
		SCMCLW_OUTRO_IClientWsEclRequest_setItemTag;
#endif
		SCMCLW_OUTRO;
	}
	IClientRequestNode & _stdcall addHeader(const char * name, const char * ns)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_addHeader;
		SCMCLW_INTRO_IClientWsEclRequest_addHeader;
#endif
		IClientRequestNode & _return;
		_return = _o.addHeader(name, ns);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_addHeader;
		SCMCLW_OUTRO_IClientWsEclRequest_addHeader;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	void _stdcall appendSerializedContent(const char * c)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclRequest_appendSerializedContent;
		SCMCLW_INTRO_IClientWsEclRequest_appendSerializedContent;
#endif
		_o.appendSerializedContent(c);
#ifdef SCMCLW_OUTRO_IClientWsEclRequest_appendSerializedContent;
		SCMCLW_OUTRO_IClientWsEclRequest_appendSerializedContent;
#endif
		SCMCLW_OUTRO;
	}
};
// clarion interface stub for IClientWsEclEvents 
class SCMCLWSTUB_IClientWsEclEvents: public SCMStubBase, implements IClientWsEclEvents // interface
	IClientWsEclEvents &_o;
public:
	IMPLEMENT_SCMSTUBBASE
	SCMCLW_IClientWsEclEvents(IClientWsEclEvents *_if) : SCMStubBase(_if), _o(*LINK(_if)) { } 
	~SCMCLW_IClientWsEclEvents() { _o.Release(); } 
	int _stdcall onComplete(IClientWsEclResp & resp)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclEvents_onComplete;
		SCMCLW_INTRO_IClientWsEclEvents_onComplete;
#endif
		int _return;
		_return = _o.onComplete(resp);
#ifdef SCMCLW_OUTRO_IClientWsEclEvents_onComplete;
		SCMCLW_OUTRO_IClientWsEclEvents_onComplete;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	int _stdcall onError(IClientWsEclResp & resp)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclEvents_onError;
		SCMCLW_INTRO_IClientWsEclEvents_onError;
#endif
		int _return;
		_return = _o.onError(resp);
#ifdef SCMCLW_OUTRO_IClientWsEclEvents_onError;
		SCMCLW_OUTRO_IClientWsEclEvents_onError;
#endif
		SCMCLW_OUTRO;
		return _return;	}
};
// clarion interface stub for IClientWsEclService 
class SCMCLWSTUB_IClientWsEclService: public SCMStubBase, implements IClientWsEclService // interface
	IClientWsEclService &_o;
public:
	IMPLEMENT_SCMSTUBBASE
	SCMCLW_IClientWsEclService(IClientWsEclService *_if) : SCMStubBase(_if), _o(*LINK(_if)) { } 
	~SCMCLW_IClientWsEclService() { _o.Release(); } 
	void _stdcall addServiceUrl(const char * url)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_addServiceUrl;
		SCMCLW_INTRO_IClientWsEclService_addServiceUrl;
#endif
		_o.addServiceUrl(url);
#ifdef SCMCLW_OUTRO_IClientWsEclService_addServiceUrl;
		SCMCLW_OUTRO_IClientWsEclService_addServiceUrl;
#endif
		SCMCLW_OUTRO;
	}
	void _stdcall removeServiceUrl(const char * url)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_removeServiceUrl;
		SCMCLW_INTRO_IClientWsEclService_removeServiceUrl;
#endif
		_o.removeServiceUrl(url);
#ifdef SCMCLW_OUTRO_IClientWsEclService_removeServiceUrl;
		SCMCLW_OUTRO_IClientWsEclService_removeServiceUrl;
#endif
		SCMCLW_OUTRO;
	}
	const char * _stdcall queryServiceUrl()
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_queryServiceUrl;
		SCMCLW_INTRO_IClientWsEclService_queryServiceUrl;
#endif
		char * _return;
		_return = _o.queryServiceUrl();
#ifdef SCMCLW_OUTRO_IClientWsEclService_queryServiceUrl;
		SCMCLW_OUTRO_IClientWsEclService_queryServiceUrl;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	IClientWsEclRequest * _stdcall createRequest(const char * methodName)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_createRequest;
		SCMCLW_INTRO_IClientWsEclService_createRequest;
#endif
		IClientWsEclRequest * _return;
		_return = _o.createRequest(methodName);
#ifdef SCMCLW_OUTRO_IClientWsEclService_createRequest;
		SCMCLW_OUTRO_IClientWsEclService_createRequest;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	IClientWsEclResp * _stdcall search(IClientWsEclRequest * request)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_search;
		SCMCLW_INTRO_IClientWsEclService_search;
#endif
		IClientWsEclResp * _return;
		_return = _o.search(request);
#ifdef SCMCLW_OUTRO_IClientWsEclService_search;
		SCMCLW_OUTRO_IClientWsEclService_search;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	void _stdcall searchAsync(IClientWsEclRequest * request, IClientWsEclEvents & events)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_searchAsync;
		SCMCLW_INTRO_IClientWsEclService_searchAsync;
#endif
		_o.searchAsync(request, events);
#ifdef SCMCLW_OUTRO_IClientWsEclService_searchAsync;
		SCMCLW_OUTRO_IClientWsEclService_searchAsync;
#endif
		SCMCLW_OUTRO;
	}
	IClientWsEclResp * _stdcall searchEx(IClientWsEclRequest * request, const char * user, const char * pw, const char * relm)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_searchEx;
		SCMCLW_INTRO_IClientWsEclService_searchEx;
#endif
		IClientWsEclResp * _return;
		_return = _o.searchEx(request, user, pw, relm);
#ifdef SCMCLW_OUTRO_IClientWsEclService_searchEx;
		SCMCLW_OUTRO_IClientWsEclService_searchEx;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	IClientWsEclResp * _stdcall searchEx(IClientWsEclRequest * request, const char * URL, const char * user, const char * pw, const char * relm)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_searchEx;
		SCMCLW_INTRO_IClientWsEclService_searchEx;
#endif
		IClientWsEclResp * _return;
		_return = _o.searchEx(request, URL, user, pw, relm);
#ifdef SCMCLW_OUTRO_IClientWsEclService_searchEx;
		SCMCLW_OUTRO_IClientWsEclService_searchEx;
#endif
		SCMCLW_OUTRO;
		return _return;	}
	IClientWsEclResp * _stdcall sendHttpRequest(IClientWsEclRequest * request, const char * method, const char * URL, const char * user, const char * pw, const char * realm, const char * httpPostVariableName, bool encodeHttpPostBody)
	{
		SCMCLW_INTRO;
#ifdef SCMCLW_INTRO_IClientWsEclService_sendHttpRequest;
		SCMCLW_INTRO_IClientWsEclService_sendHttpRequest;
#endif
		IClientWsEclResp * _return;
		_return = _o.sendHttpRequest(request, method, URL, user, pw, realm, httpPostVariableName, encodeHttpPostBody);
#ifdef SCMCLW_OUTRO_IClientWsEclService_sendHttpRequest;
		SCMCLW_OUTRO_IClientWsEclService_sendHttpRequest;
#endif
		SCMCLW_OUTRO;
		return _return;	}
};
//end
