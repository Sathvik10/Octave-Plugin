! Clarion SCM Interfaces
! Include file generated by HIDL Version 1.3 from ws_sql.ecm
! *** Not to be hand edited (changes will be lost on re-generation) ***

  OMIT('EndOfInclude',_ws_sql_I_)
_ws_sql_I_ EQUATE(1)

  INCLUDE('SCM.INT'),ONCE

cppClientHPCCColumn  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setType          PROCEDURE(CONST *CSTRING Type),PROC
getName          PROCEDURE(),*CSTRING,PROC
getType          PROCEDURE(),*CSTRING,PROC
    END



cppClientHPCCTable  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setColumns       PROCEDURE(CONST *CSTRING Columns),PROC
setECL           PROCEDURE(CONST *CSTRING ECL),PROC
setFormat        PROCEDURE(CONST *CSTRING Format),PROC
setContentType   PROCEDURE(CONST *CSTRING ContentType),PROC
setDescription   PROCEDURE(CONST *CSTRING Description),PROC
setIsKeyed       PROCEDURE(boolean IsKeyed),PROC
setIsSuper       PROCEDURE(boolean IsSuper),PROC
setCsvQuote      PROCEDURE(CONST *CSTRING CsvQuote),PROC
setCsvSeparate   PROCEDURE(CONST *CSTRING CsvSeparate),PROC
setCsvTerminate  PROCEDURE(CONST *CSTRING CsvTerminate),PROC
setGroup         PROCEDURE(CONST *CSTRING Group),PROC
setMaxRecordSize  PROCEDURE(integer MaxRecordSize),PROC
setModified      PROCEDURE(CONST *CSTRING Modified),PROC
setNumParts      PROCEDURE(integer NumParts),PROC
setOwner         PROCEDURE(CONST *CSTRING Owner),PROC
getName          PROCEDURE(),*CSTRING,PROC
getColumns       PROCEDURE(),*CSTRING,PROC
getECL           PROCEDURE(),*CSTRING,PROC
getFormat        PROCEDURE(),*CSTRING,PROC
getContentType   PROCEDURE(),*CSTRING,PROC
getDescription   PROCEDURE(),*CSTRING,PROC
getIsKeyed       PROCEDURE(),boolean,PROC
getIsSuper       PROCEDURE(),boolean,PROC
getCsvQuote      PROCEDURE(),*CSTRING,PROC
getCsvSeparate   PROCEDURE(),*CSTRING,PROC
getCsvTerminate  PROCEDURE(),*CSTRING,PROC
getGroup         PROCEDURE(),*CSTRING,PROC
getMaxRecordSize  PROCEDURE(),integer,PROC
getModified      PROCEDURE(),*CSTRING,PROC
getNumParts      PROCEDURE(),integer,PROC
getOwner         PROCEDURE(),*CSTRING,PROC
    END



cppClientOutputDataset  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING name),PROC
setOutParams     PROCEDURE(CONST *CSTRING OutParams),PROC
getName          PROCEDURE(),*CSTRING,PROC
getOutParams     PROCEDURE(),*CSTRING,PROC
    END



cppClientQuerySignature  INTERFACE(cppInterface),COM
setInParams      PROCEDURE(CONST *CSTRING InParams),PROC
setResultSets    PROCEDURE(CONST *CSTRING ResultSets),PROC
getInParams      PROCEDURE(),*CSTRING,PROC
getResultSets    PROCEDURE(),*CSTRING,PROC
    END



cppClientPublishedQuery  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setId            PROCEDURE(CONST *CSTRING Id),PROC
setWuid          PROCEDURE(CONST *CSTRING Wuid),PROC
setSuspended     PROCEDURE(boolean Suspended),PROC
setSignature     PROCEDURE(QuerySignature Signature),PROC
getName          PROCEDURE(),*CSTRING,PROC
getId            PROCEDURE(),*CSTRING,PROC
getWuid          PROCEDURE(),*CSTRING,PROC
getSuspended     PROCEDURE(),boolean,PROC
getSignature     PROCEDURE(),QuerySignature,PROC
    END



cppClientQuerySetAliasMap  INTERFACE(cppInterface),COM
setId            PROCEDURE(CONST *CSTRING Id),PROC
setName          PROCEDURE(CONST *CSTRING Name),PROC
getId            PROCEDURE(),*CSTRING,PROC
getName          PROCEDURE(),*CSTRING,PROC
    END



cppClientHPCCQuerySet  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setQuerySetQueries  PROCEDURE(CONST *CSTRING QuerySetQueries),PROC
setQuerySetAliases  PROCEDURE(CONST *CSTRING QuerySetAliases),PROC
getName          PROCEDURE(),*CSTRING,PROC
getQuerySetQueries  PROCEDURE(),*CSTRING,PROC
getQuerySetAliases  PROCEDURE(),*CSTRING,PROC
    END



cppClientHPCCTargetCluster  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setQuerySetQueries  PROCEDURE(CONST *CSTRING QuerySetQueries),PROC
setQuerySetAliases  PROCEDURE(CONST *CSTRING QuerySetAliases),PROC
getName          PROCEDURE(),*CSTRING,PROC
getQuerySetQueries  PROCEDURE(),*CSTRING,PROC
getQuerySetAliases  PROCEDURE(),*CSTRING,PROC
    END



cppClientPrepareSQLRequest  INTERFACE(cppInterface),COM
setSqlText       PROCEDURE(CONST *CSTRING SqlText),PROC
setTargetCluster  PROCEDURE(CONST *CSTRING TargetCluster),PROC
setAlternateClusters  PROCEDURE(CONST *CSTRING AlternateClusters),PROC
setTargetQuerySet  PROCEDURE(CONST *CSTRING TargetQuerySet),PROC
setWait          PROCEDURE(LONG Wait),PROC
    END



cppClientPrepareSQLResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getWorkunit      PROCEDURE(),ECLWorkunit,PROC
getResult        PROCEDURE(),*CSTRING,PROC
    END



cppClientExecuteSQLRequest  INTERFACE(cppInterface),COM
setSqlText       PROCEDURE(CONST *CSTRING SqlText),PROC
setUserName      PROCEDURE(CONST *CSTRING UserName),PROC
setTargetCluster  PROCEDURE(CONST *CSTRING TargetCluster),PROC
setAlternateClusters  PROCEDURE(CONST *CSTRING AlternateClusters),PROC
setTargetQuerySet  PROCEDURE(CONST *CSTRING TargetQuerySet),PROC
setSuppressResults  PROCEDURE(boolean SuppressResults),PROC
setSuppressXmlSchema  PROCEDURE(boolean SuppressXmlSchema),PROC
setWait          PROCEDURE(LONG Wait),PROC
setResultLimit   PROCEDURE(LONG resultLimit),PROC
setResultWindowStart  PROCEDURE(LONG ResultWindowStart),PROC
setResultWindowCount  PROCEDURE(LONG ResultWindowCount),PROC
setIgnoreCache   PROCEDURE(boolean IgnoreCache),PROC
    END



cppClientExecuteSQLResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getParentWuId    PROCEDURE(),*CSTRING,PROC
getResult        PROCEDURE(),*CSTRING,PROC
getWorkunit      PROCEDURE(),ECLWorkunit,PROC
getResultLimit   PROCEDURE(),LONG,PROC
getResultWindowStart  PROCEDURE(),ULONG,PROC
getResultWindowCount  PROCEDURE(),ULONG,PROC
    END



cppClientExecutePreparedSQLRequest  INTERFACE(cppInterface),COM
setWuId          PROCEDURE(CONST *CSTRING WuId),PROC
setUserName      PROCEDURE(CONST *CSTRING UserName),PROC
setTargetCluster  PROCEDURE(CONST *CSTRING TargetCluster),PROC
setSuppressResults  PROCEDURE(boolean SuppressResults),PROC
setSuppressXmlSchema  PROCEDURE(boolean SuppressXmlSchema),PROC
setWait          PROCEDURE(LONG Wait),PROC
setResultWindowStart  PROCEDURE(LONG ResultWindowStart),PROC
setResultWindowCount  PROCEDURE(LONG ResultWindowCount),PROC
setVariables     PROCEDURE(CONST *CSTRING Variables),PROC
    END



cppClientExecutePreparedSQLResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getParentWuId    PROCEDURE(),*CSTRING,PROC
getResult        PROCEDURE(),*CSTRING,PROC
getResultWindowStart  PROCEDURE(),ULONG,PROC
getResultWindowCount  PROCEDURE(),ULONG,PROC
getWorkunit      PROCEDURE(),ECLWorkunit,PROC
    END



cppClientGetDBSystemInfoRequest  INTERFACE(cppInterface),COM
setIncludeAll    PROCEDURE(boolean IncludeAll),PROC
    END



cppClientGetDBSystemInfoResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getName          PROCEDURE(),*CSTRING,PROC
getFullVersion   PROCEDURE(),*CSTRING,PROC
getMajor         PROCEDURE(),*CSTRING,PROC
getMinor         PROCEDURE(),*CSTRING,PROC
getPoint         PROCEDURE(),*CSTRING,PROC
getProject       PROCEDURE(),*CSTRING,PROC
getMaturity      PROCEDURE(),*CSTRING,PROC
getWsSQLFullVersion  PROCEDURE(),*CSTRING,PROC
getWsSQLMajor    PROCEDURE(),*CSTRING,PROC
getWsSQLMinor    PROCEDURE(),*CSTRING,PROC
getWsSQLPoint    PROCEDURE(),*CSTRING,PROC
getWsSQLProject  PROCEDURE(),*CSTRING,PROC
getWsSQLMaturity  PROCEDURE(),*CSTRING,PROC
    END



cppClientGetDBMetaDataRequest  INTERFACE(cppInterface),COM
setIncludeTables  PROCEDURE(boolean IncludeTables),PROC
setTableFilter   PROCEDURE(CONST *CSTRING TableFilter),PROC
setIncludeStoredProcedures  PROCEDURE(boolean IncludeStoredProcedures),PROC
setQuerySet      PROCEDURE(CONST *CSTRING QuerySet),PROC
setIncludeTargetClusters  PROCEDURE(boolean IncludeTargetClusters),PROC
setClusterType   PROCEDURE(CONST *CSTRING ClusterType),PROC
    END



cppClientGetDBMetaDataResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getTables        PROCEDURE(),*CSTRING,PROC
getTableCount    PROCEDURE(),integer,PROC
getQuerySets     PROCEDURE(),*CSTRING,PROC
getClusterNames  PROCEDURE(),*CSTRING,PROC
    END



cppClientGetResultsRequest  INTERFACE(cppInterface),COM
setWuId          PROCEDURE(CONST *CSTRING WuId),PROC
setSuppressXmlSchema  PROCEDURE(boolean SuppressXmlSchema),PROC
setResultWindowStart  PROCEDURE(LONG ResultWindowStart),PROC
setResultWindowCount  PROCEDURE(LONG ResultWindowCount),PROC
    END



cppClientGetResultsResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getResult        PROCEDURE(),*CSTRING,PROC
getResultWindowStart  PROCEDURE(),ULONG,PROC
getResultWindowCount  PROCEDURE(),ULONG,PROC
getWorkunit      PROCEDURE(),ECLWorkunit,PROC
    END



cppClientEchoRequest  INTERFACE(cppInterface),COM
setRequest       PROCEDURE(CONST *CSTRING Request),PROC
    END



cppClientEchoResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getResponse      PROCEDURE(),*CSTRING,PROC
    END



cppClientRelatedIndexSet  INTERFACE(cppInterface),COM
setFileName      PROCEDURE(CONST *CSTRING FileName),PROC
setIndexes       PROCEDURE(CONST *CSTRING Indexes),PROC
getFileName      PROCEDURE(),*CSTRING,PROC
getIndexes       PROCEDURE(),*CSTRING,PROC
    END



cppClientGetRelatedIndexesRequest  INTERFACE(cppInterface),COM
setFileNames     PROCEDURE(CONST *CSTRING FileNames),PROC
    END



cppClientGetRelatedIndexesResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getRelatedIndexSets  PROCEDURE(),*CSTRING,PROC
    END



cppClientSetRelatedIndexesRequest  INTERFACE(cppInterface),COM
setRelatedIndexSets  PROCEDURE(CONST *CSTRING RelatedIndexSets),PROC
    END



cppClientSetRelatedIndexesResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getRelatedIndexSets  PROCEDURE(),*CSTRING,PROC
    END



cppClientHPCCFieldType  INTERFACE(cppInterface),COM
getBOOLEAN       PROCEDURE(),,PROC
getINTEGER       PROCEDURE(),,PROC
getXUNSIGNED     PROCEDURE(),,PROC
getREAL          PROCEDURE(),,PROC
getDECIMAL       PROCEDURE(),,PROC
getUDECIMAL      PROCEDURE(),,PROC
getXSTRING       PROCEDURE(),,PROC
getQSTRING       PROCEDURE(),,PROC
getUNICODE       PROCEDURE(),,PROC
getDATA          PROCEDURE(),,PROC
getVARSTRING     PROCEDURE(),,PROC
getVARUNICODE    PROCEDURE(),,PROC
    END



cppClientEclFieldType  INTERFACE(cppInterface),COM
setType          PROCEDURE(HPCCFieldType Type),PROC
setLocale        PROCEDURE(CONST *CSTRING Locale),PROC
setLength        PROCEDURE(cppnteger Length),PROC
setPrecision     PROCEDURE(cppnteger Precision),PROC
getType          PROCEDURE(),HPCCFieldType,PROC
getLocale        PROCEDURE(),*CSTRING,PROC
getLength        PROCEDURE(),cppnteger,PROC
getPrecision     PROCEDURE(),cppnteger,PROC
    END



cppClientEclFieldDeclaration  INTERFACE(cppInterface),COM
setFieldName     PROCEDURE(CONST *CSTRING FieldName),PROC
setEclFieldType  PROCEDURE(EclFieldType EclFieldType),PROC
getFieldName     PROCEDURE(),*CSTRING,PROC
getEclFieldType  PROCEDURE(),EclFieldType,PROC
    END



cppClientDataTypeParam  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setValues        PROCEDURE(CONST *CSTRING Values),PROC
getName          PROCEDURE(),*CSTRING,PROC
getValues        PROCEDURE(),*CSTRING,PROC
    END



cppClientHPCCFileType  INTERFACE(cppInterface),COM
getFLAT          PROCEDURE(),,PROC
getCSV           PROCEDURE(),,PROC
getJSON          PROCEDURE(),,PROC
getXML           PROCEDURE(),,PROC
    END



cppClientDataType  INTERFACE(cppInterface),COM
setType          PROCEDURE(HPCCFileType Type),PROC
setParams        PROCEDURE(CONST *CSTRING Params),PROC
getType          PROCEDURE(),HPCCFileType,PROC
getParams        PROCEDURE(),*CSTRING,PROC
    END



cppClientDataSourceInfo  INTERFACE(cppInterface),COM
setSprayedFileName  PROCEDURE(CONST *CSTRING SprayedFileName),PROC
setLandingZoneIP  PROCEDURE(CONST *CSTRING LandingZoneIP),PROC
setLandingZonePath  PROCEDURE(CONST *CSTRING LandingZonePath),PROC
setLandingZoneFileName  PROCEDURE(CONST *CSTRING LandingZoneFileName),PROC
getSprayedFileName  PROCEDURE(),*CSTRING,PROC
getLandingZoneIP  PROCEDURE(),*CSTRING,PROC
getLandingZonePath  PROCEDURE(),*CSTRING,PROC
getLandingZoneFileName  PROCEDURE(),*CSTRING,PROC
    END



cppClientCreateTableAndLoadRequest  INTERFACE(cppInterface),COM
setTableName     PROCEDURE(CONST *CSTRING TableName),PROC
setTableDescription  PROCEDURE(CONST *CSTRING TableDescription),PROC
setOverwrite     PROCEDURE(Boolean Overwrite),PROC
setEclFields     PROCEDURE(CONST *CSTRING EclFields),PROC
setTargetCluster  PROCEDURE(CONST *CSTRING TargetCluster),PROC
setOwner         PROCEDURE(CONST *CSTRING Owner),PROC
setDataSource    PROCEDURE(DataSourceInfo DataSource),PROC
setDataSourceType  PROCEDURE(DataType DataSourceType),PROC
setWait          PROCEDURE(LONG Wait),PROC
    END



cppClientCreateTableAndLoadResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getTableName     PROCEDURE(),*CSTRING,PROC
getSuccess       PROCEDURE(),Boolean,PROC
getEclRecordDefinition  PROCEDURE(),*CSTRING,PROC
getWorkunit      PROCEDURE(),ECLWorkunit,PROC
    END



cppClientwssqlPingRequest  INTERFACE(cppInterface),COM
    END



cppClientwssqlPingResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
    END



cppClientwssqlEvents INTERFACE(cppInterface),COM
onCreateTableAndLoadComplete PROCEDURE(*cppClientCreateTableAndLoadResponse resp),PROC
onCreateTableAndLoadError PROCEDURE(*cppClientCreateTableAndLoadResponse resp),PROC
onEchoComplete PROCEDURE(*cppClientEchoResponse resp),PROC
onEchoError PROCEDURE(*cppClientEchoResponse resp),PROC
onExecutePreparedSQLComplete PROCEDURE(*cppClientExecutePreparedSQLResponse resp),PROC
onExecutePreparedSQLError PROCEDURE(*cppClientExecutePreparedSQLResponse resp),PROC
onExecuteSQLComplete PROCEDURE(*cppClientExecuteSQLResponse resp),PROC
onExecuteSQLError PROCEDURE(*cppClientExecuteSQLResponse resp),PROC
onGetDBMetaDataComplete PROCEDURE(*cppClientGetDBMetaDataResponse resp),PROC
onGetDBMetaDataError PROCEDURE(*cppClientGetDBMetaDataResponse resp),PROC
onGetDBSystemInfoComplete PROCEDURE(*cppClientGetDBSystemInfoResponse resp),PROC
onGetDBSystemInfoError PROCEDURE(*cppClientGetDBSystemInfoResponse resp),PROC
onGetRelatedIndexesComplete PROCEDURE(*cppClientGetRelatedIndexesResponse resp),PROC
onGetRelatedIndexesError PROCEDURE(*cppClientGetRelatedIndexesResponse resp),PROC
onGetResultsComplete PROCEDURE(*cppClientGetResultsResponse resp),PROC
onGetResultsError PROCEDURE(*cppClientGetResultsResponse resp),PROC
onPingComplete PROCEDURE(*cppClientwssqlPingResponse resp),PROC
onPingError PROCEDURE(*cppClientwssqlPingResponse resp),PROC
onPrepareSQLComplete PROCEDURE(*cppClientPrepareSQLResponse resp),PROC
onPrepareSQLError PROCEDURE(*cppClientPrepareSQLResponse resp),PROC
onSetRelatedIndexesComplete PROCEDURE(*cppClientSetRelatedIndexesResponse resp),PROC
onSetRelatedIndexesError PROCEDURE(*cppClientSetRelatedIndexesResponse resp),PROC

 END

cppClientwssql INTERFACE(cppInterface),COM
setProxyAddress  PROCEDURE(CONST *CSTRING address),PROC
addServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
removeServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
setUsernameToken  PROCEDURE(CONST *CSTRING Username,CONST *CSTRING Password,CONST *CSTRING Realm ),PROC
createCreateTableAndLoadRequest  PROCEDURE(),*cppClientCreateTableAndLoadRequest,PROC
CreateTableAndLoad  PROCEDURE(*cppClientCreateTableAndLoadRequest request),*cppClientCreateTableAndLoadResponse,PROC
async_CreateTableAndLoad  PROCEDURE(*cppClientCreateTableAndLoadRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createEchoRequest  PROCEDURE(),*cppClientEchoRequest,PROC
Echo  PROCEDURE(*cppClientEchoRequest request),*cppClientEchoResponse,PROC
async_Echo  PROCEDURE(*cppClientEchoRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createExecutePreparedSQLRequest  PROCEDURE(),*cppClientExecutePreparedSQLRequest,PROC
ExecutePreparedSQL  PROCEDURE(*cppClientExecutePreparedSQLRequest request),*cppClientExecutePreparedSQLResponse,PROC
async_ExecutePreparedSQL  PROCEDURE(*cppClientExecutePreparedSQLRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createExecuteSQLRequest  PROCEDURE(),*cppClientExecuteSQLRequest,PROC
ExecuteSQL  PROCEDURE(*cppClientExecuteSQLRequest request),*cppClientExecuteSQLResponse,PROC
async_ExecuteSQL  PROCEDURE(*cppClientExecuteSQLRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createGetDBMetaDataRequest  PROCEDURE(),*cppClientGetDBMetaDataRequest,PROC
GetDBMetaData  PROCEDURE(*cppClientGetDBMetaDataRequest request),*cppClientGetDBMetaDataResponse,PROC
async_GetDBMetaData  PROCEDURE(*cppClientGetDBMetaDataRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createGetDBSystemInfoRequest  PROCEDURE(),*cppClientGetDBSystemInfoRequest,PROC
GetDBSystemInfo  PROCEDURE(*cppClientGetDBSystemInfoRequest request),*cppClientGetDBSystemInfoResponse,PROC
async_GetDBSystemInfo  PROCEDURE(*cppClientGetDBSystemInfoRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createGetRelatedIndexesRequest  PROCEDURE(),*cppClientGetRelatedIndexesRequest,PROC
GetRelatedIndexes  PROCEDURE(*cppClientGetRelatedIndexesRequest request),*cppClientGetRelatedIndexesResponse,PROC
async_GetRelatedIndexes  PROCEDURE(*cppClientGetRelatedIndexesRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createGetResultsRequest  PROCEDURE(),*cppClientGetResultsRequest,PROC
GetResults  PROCEDURE(*cppClientGetResultsRequest request),*cppClientGetResultsResponse,PROC
async_GetResults  PROCEDURE(*cppClientGetResultsRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createPingRequest  PROCEDURE(),*cppClientwssqlPingRequest,PROC
Ping  PROCEDURE(*cppClientwssqlPingRequest request),*cppClientwssqlPingResponse,PROC
async_Ping  PROCEDURE(*cppClientwssqlPingRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createPrepareSQLRequest  PROCEDURE(),*cppClientPrepareSQLRequest,PROC
PrepareSQL  PROCEDURE(*cppClientPrepareSQLRequest request),*cppClientPrepareSQLResponse,PROC
async_PrepareSQL  PROCEDURE(*cppClientPrepareSQLRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC
createSetRelatedIndexesRequest  PROCEDURE(),*cppClientSetRelatedIndexesRequest,PROC
SetRelatedIndexes  PROCEDURE(*cppClientSetRelatedIndexesRequest request),*cppClientSetRelatedIndexesResponse,PROC
async_SetRelatedIndexes  PROCEDURE(*cppClientSetRelatedIndexesRequest request, *cppClientwssqlEvents events,*cppInterface State),PROC

  END




  MAP
    MODULE('ws_sql')
      createwssqlClient (),*cppClientwssql, pascal, raw, name('_createwssqlClient@0')
    END

  END


EndOfInclude
