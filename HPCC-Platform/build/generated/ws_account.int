! Clarion SCM Interfaces
! Include file generated by HIDL Version 1.3 from ws_account.ecm
! *** Not to be hand edited (changes will be lost on re-generation) ***

  OMIT('EndOfInclude',_ws_account_I_)
_ws_account_I_ EQUATE(1)

  INCLUDE('SCM.INT'),ONCE

cppClientUpdateUserInputRequest  INTERFACE(cppInterface),COM
    END



cppClientUpdateUserInputResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getUsername      PROCEDURE(),*CSTRING,PROC
    END



cppClientMyAccountRequest  INTERFACE(cppInterface),COM
    END



cppClientMyAccountResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getUsername      PROCEDURE(),*CSTRING,PROC
getFirstName     PROCEDURE(),*CSTRING,PROC
getLastName      PROCEDURE(),*CSTRING,PROC
getPasswordExpiration  PROCEDURE(),*CSTRING,PROC
getPasswordDaysRemaining  PROCEDURE(),LONG,PROC
getPasswordExpirationWarningDays  PROCEDURE(),LONG,PROC
getEmployeeID    PROCEDURE(),*CSTRING,PROC
getDistinguishedName  PROCEDURE(),*CSTRING,PROC
    END



cppClientUpdateUserRequest  INTERFACE(cppInterface),COM
setUsername      PROCEDURE(CONST *CSTRING username),PROC
setOldpass       PROCEDURE(CONST *CSTRING oldpass),PROC
setNewpass1      PROCEDURE(CONST *CSTRING newpass1),PROC
setNewpass2      PROCEDURE(CONST *CSTRING newpass2),PROC
    END



cppClientUpdateUserResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getRetcode       PROCEDURE(),LONG,PROC
getMessage       PROCEDURE(),*CSTRING,PROC
    END



cppClientVerifyUserRequest  INTERFACE(cppInterface),COM
setApplication   PROCEDURE(CONST *CSTRING application),PROC
setVersion       PROCEDURE(CONST *CSTRING version),PROC
    END



cppClientVerifyUserResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getRetcode       PROCEDURE(),LONG,PROC
    END



cppClientws_accountPingRequest  INTERFACE(cppInterface),COM
    END



cppClientws_accountPingResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
    END



cppClientws_accountEvents INTERFACE(cppInterface),COM
onMyAccountComplete PROCEDURE(*cppClientMyAccountResponse resp),PROC
onMyAccountError PROCEDURE(*cppClientMyAccountResponse resp),PROC
onPingComplete PROCEDURE(*cppClientws_accountPingResponse resp),PROC
onPingError PROCEDURE(*cppClientws_accountPingResponse resp),PROC
onUpdateUserComplete PROCEDURE(*cppClientUpdateUserResponse resp),PROC
onUpdateUserError PROCEDURE(*cppClientUpdateUserResponse resp),PROC
onUpdateUserInputComplete PROCEDURE(*cppClientUpdateUserInputResponse resp),PROC
onUpdateUserInputError PROCEDURE(*cppClientUpdateUserInputResponse resp),PROC
onVerifyUserComplete PROCEDURE(*cppClientVerifyUserResponse resp),PROC
onVerifyUserError PROCEDURE(*cppClientVerifyUserResponse resp),PROC

 END

cppClientws_account INTERFACE(cppInterface),COM
setProxyAddress  PROCEDURE(CONST *CSTRING address),PROC
addServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
removeServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
setUsernameToken  PROCEDURE(CONST *CSTRING Username,CONST *CSTRING Password,CONST *CSTRING Realm ),PROC
createMyAccountRequest  PROCEDURE(),*cppClientMyAccountRequest,PROC
MyAccount  PROCEDURE(*cppClientMyAccountRequest request),*cppClientMyAccountResponse,PROC
async_MyAccount  PROCEDURE(*cppClientMyAccountRequest request, *cppClientws_accountEvents events,*cppInterface State),PROC
createPingRequest  PROCEDURE(),*cppClientws_accountPingRequest,PROC
Ping  PROCEDURE(*cppClientws_accountPingRequest request),*cppClientws_accountPingResponse,PROC
async_Ping  PROCEDURE(*cppClientws_accountPingRequest request, *cppClientws_accountEvents events,*cppInterface State),PROC
createUpdateUserRequest  PROCEDURE(),*cppClientUpdateUserRequest,PROC
UpdateUser  PROCEDURE(*cppClientUpdateUserRequest request),*cppClientUpdateUserResponse,PROC
async_UpdateUser  PROCEDURE(*cppClientUpdateUserRequest request, *cppClientws_accountEvents events,*cppInterface State),PROC
createUpdateUserInputRequest  PROCEDURE(),*cppClientUpdateUserInputRequest,PROC
UpdateUserInput  PROCEDURE(*cppClientUpdateUserInputRequest request),*cppClientUpdateUserInputResponse,PROC
async_UpdateUserInput  PROCEDURE(*cppClientUpdateUserInputRequest request, *cppClientws_accountEvents events,*cppInterface State),PROC
createVerifyUserRequest  PROCEDURE(),*cppClientVerifyUserRequest,PROC
VerifyUser  PROCEDURE(*cppClientVerifyUserRequest request),*cppClientVerifyUserResponse,PROC
async_VerifyUser  PROCEDURE(*cppClientVerifyUserRequest request, *cppClientws_accountEvents events,*cppInterface State),PROC

  END




  MAP
    MODULE('ws_account')
      createws_accountClient (),*cppClientws_account, pascal, raw, name('_createws_accountClient@0')
    END

  END


EndOfInclude
