! Clarion SCM Interfaces
! Include file generated by HIDL Version 1.3 from ws_ecl_client.ecm
! *** Not to be hand edited (changes will be lost on re-generation) ***

  OMIT('EndOfInclude',_ws_ecl_client_I_)
_ws_ecl_client_I_ EQUATE(1)

  INCLUDE('SCM.INT'),ONCE


  map
    module('instant ecl client')
      createWsEclClient procedure, *cppClientWsEclService, pascal, raw, name('_createWsEclClient@0')
    end
  end


WsEclClientRequestState EQUATE(UNSIGNED)
  ITEMIZE,PRE(WsEclClientRequestState)
ESP_CLIENT_REQUEST_OK	EQUATE(0)
ESP_CLIENT_REQUEST_CONNECTION_ERROR	EQUATE(1)
ESP_CLIENT_REQUEST_NORMAL_ERROR	EQUATE(2)
	END

cppClientWsEclResp  INTERFACE(cppInterface),COM
getRequestId     PROCEDURE(),ULONG,PROC
getClientValue   PROCEDURE(),ULONG,PROC
getRequestState  PROCEDURE(),WsEclClientRequestState,PROC
getResultsXML    PROCEDURE(),*CSTRING,PROC
getSoapMessage   PROCEDURE(),*CSTRING,PROC
getStatusMessage  PROCEDURE(*StringBuffer message),*CSTRING,PROC
getHttpMessage   PROCEDURE(*StringBuffer message),*CSTRING,PROC
END

cppClientRequestNode  INTERFACE(cppInterface),COM
addTag           PROCEDURE(CONST *CSTRING name, CONST *CSTRING value),PROC
addIntTag        PROCEDURE(CONST *CSTRING name, LONG value),PROC
setTag           PROCEDURE(CONST *CSTRING name, CONST *CSTRING value),PROC
hasTag           PROCEDURE(CONST *CSTRING name),CBOOL,PROC
addAttr          PROCEDURE(CONST *CSTRING name, CONST *CSTRING value),PROC
addChild         PROCEDURE(CONST *CSTRING name),*cppClientRequestNode,PROC
addChild         PROCEDURE(CONST *CSTRING name, CONST *CSTRING value),*cppClientRequestNode,PROC
addDataset       PROCEDURE(CONST *CSTRING name, CONST *CSTRING ds),PROC
END

cppClientWsEclRequest  INTERFACE(cppClientRequestNode),COM
setUrl           PROCEDURE(CONST *CSTRING URL),PROC
setNamespace     PROCEDURE(CONST *CSTRING ns),PROC
setNamespaceVar  PROCEDURE(CONST *CSTRING nsvar),PROC
setSoapAction    PROCEDURE(CONST *CSTRING action),PROC
setClientValue   PROCEDURE(ULONG cv),PROC
addArray         PROCEDURE(CONST *CSTRING name, *StringArray array),PROC
setNoSecurityHeader  PROCEDURE(CBOOL noHeader),PROC
setSpecialMethod  PROCEDURE(CONST *CSTRING method),PROC
disableKeepAlive  PROCEDURE(),PROC
getSerializedContent  PROCEDURE(),*CSTRING,PROC
setSerializedContent  PROCEDURE(CONST *CSTRING c),PROC
setItemTag       PROCEDURE(CONST *CSTRING tag),PROC
addHeader        PROCEDURE(CONST *CSTRING name, CONST *CSTRING ns),*cppClientRequestNode,PROC
appendSerializedContent  PROCEDURE(CONST *CSTRING c),PROC
END

cppClientWsEclEvents  INTERFACE(cppInterface),COM
onComplete       PROCEDURE(*cppClientWsEclResp resp),LONG,PROC
onError          PROCEDURE(*cppClientWsEclResp resp),LONG,PROC
END

cppClientWsEclService  INTERFACE(cppInterface),COM
addServiceUrl    PROCEDURE(CONST *CSTRING url),PROC
removeServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
queryServiceUrl  PROCEDURE(),*CSTRING,PROC
createRequest    PROCEDURE(CONST *CSTRING methodName),*cppClientWsEclRequest,PROC
search           PROCEDURE(*cppClientWsEclRequest request),*cppClientWsEclResp,PROC
searchAsync      PROCEDURE(*cppClientWsEclRequest request, *cppClientWsEclEvents events),PROC
searchEx         PROCEDURE(*cppClientWsEclRequest request, CONST *CSTRING user, CONST *CSTRING pw, CONST *CSTRING relm),*cppClientWsEclResp,PROC
searchEx         PROCEDURE(*cppClientWsEclRequest request, CONST *CSTRING URL, CONST *CSTRING user, CONST *CSTRING pw, CONST *CSTRING relm),*cppClientWsEclResp,PROC
sendHttpRequest  PROCEDURE(*cppClientWsEclRequest request, CONST *CSTRING method, CONST *CSTRING URL, CONST *CSTRING user, CONST *CSTRING pw, CONST *CSTRING realm, CONST *CSTRING httpPostVariableName, CBOOL encodeHttpPostBody),*cppClientWsEclResp,PROC
END


  MAP
    MODULE('ws_ecl_client')
    END

  END


EndOfInclude
