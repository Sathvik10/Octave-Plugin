! Clarion SCM Interfaces
! Include file generated by HIDL Version 1.3 from ws_loggingservice.ecm
! *** Not to be hand edited (changes will be lost on re-generation) ***

  OMIT('EndOfInclude',_ws_loggingservice_I_)
_ws_loggingservice_I_ EQUATE(1)

  INCLUDE('SCM.INT'),ONCE

cppClientLogItem  INTERFACE(cppInterface),COM
setName          PROCEDURE(CONST *CSTRING Name),PROC
setValue         PROCEDURE(CONST *CSTRING Value),PROC
getName          PROCEDURE(),*CSTRING,PROC
getValue         PROCEDURE(),*CSTRING,PROC
    END



cppClientGetTransactionSeedRequest  INTERFACE(cppInterface),COM
setApplication   PROCEDURE(CONST *CSTRING Application),PROC
    END



cppClientLoggingServiceResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getStatusCode    PROCEDURE(),LONG,PROC
getStatusMessage  PROCEDURE(),*CSTRING,PROC
    END



cppClientGetTransactionSeedResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getSeedId        PROCEDURE(),*CSTRING,PROC
getStatusCode    PROCEDURE(),LONG,PROC
getStatusMessage  PROCEDURE(),*CSTRING,PROC
    END



cppClientUpdateLogRequest  INTERFACE(cppInterface),COM
setOption        PROCEDURE(CONST *CSTRING Option),PROC
setLogContent    PROCEDURE(CONST *CSTRING LogContent),PROC
    END



cppClientUpdateLogResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getResponse      PROCEDURE(),*CSTRING,PROC
getStatusCode    PROCEDURE(),LONG,PROC
getStatusMessage  PROCEDURE(),*CSTRING,PROC
    END



cppClientWsLoggingServicePingRequest  INTERFACE(cppInterface),COM
    END



cppClientWsLoggingServicePingResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
    END



cppClientWsLoggingServiceEvents INTERFACE(cppInterface),COM
onGetTransactionSeedComplete PROCEDURE(*cppClientGetTransactionSeedResponse resp),PROC
onGetTransactionSeedError PROCEDURE(*cppClientGetTransactionSeedResponse resp),PROC
onPingComplete PROCEDURE(*cppClientWsLoggingServicePingResponse resp),PROC
onPingError PROCEDURE(*cppClientWsLoggingServicePingResponse resp),PROC
onUpdateLogComplete PROCEDURE(*cppClientUpdateLogResponse resp),PROC
onUpdateLogError PROCEDURE(*cppClientUpdateLogResponse resp),PROC

 END

cppClientWsLoggingService INTERFACE(cppInterface),COM
setProxyAddress  PROCEDURE(CONST *CSTRING address),PROC
addServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
removeServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
setUsernameToken  PROCEDURE(CONST *CSTRING Username,CONST *CSTRING Password,CONST *CSTRING Realm ),PROC
createGetTransactionSeedRequest  PROCEDURE(),*cppClientGetTransactionSeedRequest,PROC
GetTransactionSeed  PROCEDURE(*cppClientGetTransactionSeedRequest request),*cppClientGetTransactionSeedResponse,PROC
async_GetTransactionSeed  PROCEDURE(*cppClientGetTransactionSeedRequest request, *cppClientWsLoggingServiceEvents events,*cppInterface State),PROC
createPingRequest  PROCEDURE(),*cppClientWsLoggingServicePingRequest,PROC
Ping  PROCEDURE(*cppClientWsLoggingServicePingRequest request),*cppClientWsLoggingServicePingResponse,PROC
async_Ping  PROCEDURE(*cppClientWsLoggingServicePingRequest request, *cppClientWsLoggingServiceEvents events,*cppInterface State),PROC
createUpdateLogRequest  PROCEDURE(),*cppClientUpdateLogRequest,PROC
UpdateLog  PROCEDURE(*cppClientUpdateLogRequest request),*cppClientUpdateLogResponse,PROC
async_UpdateLog  PROCEDURE(*cppClientUpdateLogRequest request, *cppClientWsLoggingServiceEvents events,*cppInterface State),PROC

  END




  MAP
    MODULE('ws_loggingservice')
      createWsLoggingServiceClient (),*cppClientWsLoggingService, pascal, raw, name('_createWsLoggingServiceClient@0')
    END

  END


EndOfInclude
