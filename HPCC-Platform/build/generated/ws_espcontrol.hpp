// *** Include file generated by HIDL Version 1.3 from ws_espcontrol.ecm ***
// *** Not to be hand edited (changes will be lost on re-generation) ***

#ifndef ws_espcontrol_SCM_INCL
#define ws_espcontrol_SCM_INCL

#include "esp.hpp"



#include "common_esp.ipp"

interface IConstSetLoggingRequest : extends IEspRequest
{
	virtual bool getLoggingLevel_isNull()=0;
	virtual int getLoggingLevel()=0;
	virtual bool getLogRequests_isNull()=0;
	virtual bool getLogRequests()=0;
	virtual bool getLogResponses_isNull()=0;
	virtual bool getLogResponses()=0;
};

interface IEspSetLoggingRequest : extends IConstSetLoggingRequest
{
	virtual void setLoggingLevel_null()=0;
	virtual void setLoggingLevel(int val)=0;
	virtual void setLogRequests_null()=0;
	virtual void setLogRequests(bool val)=0;
	virtual void setLogResponses_null()=0;
	virtual void setLogResponses(bool val)=0;
	virtual void copy(IConstSetLoggingRequest &from)=0;
};

interface IClientSetLoggingRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setLoggingLevel_null()=0;
	virtual void setLoggingLevel(int val)=0;
	virtual void setLogRequests_null()=0;
	virtual void setLogRequests(bool val)=0;
	virtual void setLogResponses_null()=0;
	virtual void setLogResponses(bool val)=0;
};



interface IConstSetLoggingResponse : extends IEspResponse
{
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;
};

interface IEspSetLoggingResponse : extends IConstSetLoggingResponse
{
	virtual void setStatus_null()=0;
	virtual void setStatus(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstSetLoggingResponse &from)=0;
};

interface IClientSetLoggingResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstSession : extends IEspStruct
{
	virtual const char * getID()=0;
	virtual const char * getUserID()=0;
	virtual const char * getNetworkAddress()=0;
	virtual const char * getCreateTime()=0;
	virtual const char * getLastAccessed()=0;
	virtual const char * getTimeoutAt()=0;
	virtual bool getPort_isNull()=0;
	virtual int getPort()=0;
	virtual bool getTimeoutByAdmin_isNull()=0;
	virtual bool getTimeoutByAdmin()=0;
};

interface IEspSession : extends IConstSession
{
	virtual void setID(const char * val)=0;
	virtual void setUserID(const char * val)=0;
	virtual void setNetworkAddress(const char * val)=0;
	virtual void setCreateTime(const char * val)=0;
	virtual void setLastAccessed(const char * val)=0;
	virtual void setTimeoutAt(const char * val)=0;
	virtual void setPort_null()=0;
	virtual void setPort(int val)=0;
	virtual void setTimeoutByAdmin_null()=0;
	virtual void setTimeoutByAdmin(bool val)=0;
	virtual void copy(IConstSession &from)=0;
};

interface IClientSession : extends IInterface
{
	virtual void setID(const char * val)=0;
	virtual void setUserID(const char * val)=0;
	virtual void setNetworkAddress(const char * val)=0;
	virtual void setCreateTime(const char * val)=0;
	virtual void setLastAccessed(const char * val)=0;
	virtual void setTimeoutAt(const char * val)=0;
	virtual void setPort_null()=0;
	virtual void setPort(int val)=0;
	virtual void setTimeoutByAdmin_null()=0;
	virtual void setTimeoutByAdmin(bool val)=0;
	virtual const char * getID()=0;
	virtual const char * getUserID()=0;
	virtual const char * getNetworkAddress()=0;
	virtual const char * getCreateTime()=0;
	virtual const char * getLastAccessed()=0;
	virtual const char * getTimeoutAt()=0;
	virtual bool getPort_isNull()=0;
	virtual int getPort()=0;
	virtual bool getTimeoutByAdmin_isNull()=0;
	virtual bool getTimeoutByAdmin()=0;
};



interface IConstSessionQueryRequest : extends IEspRequest
{
	virtual const char * getFromIP()=0;
	virtual const char * getUserID()=0;
};

interface IEspSessionQueryRequest : extends IConstSessionQueryRequest
{
	virtual void setFromIP(const char * val)=0;
	virtual void setUserID(const char * val)=0;
	virtual void copy(IConstSessionQueryRequest &from)=0;
};

interface IClientSessionQueryRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setFromIP(const char * val)=0;
	virtual void setUserID(const char * val)=0;
};



interface IConstSessionQueryResponse : extends IEspResponse
{
	virtual IArrayOf<IConstSession> & getSessions()=0;
};

interface IEspSessionQueryResponse : extends IConstSessionQueryResponse
{
	virtual void setSessions(IArrayOf<IEspSession> &val)=0;
	virtual void setSessions(IArrayOf<IConstSession> &val)=0;
	virtual void copy(IConstSessionQueryResponse &from)=0;
};

interface IClientSessionQueryResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IArrayOf<IConstSession> & getSessions()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstSessionInfoRequest : extends IEspRequest
{
	virtual bool getPort_isNull()=0;
	virtual int getPort()=0;
	virtual const char * getID()=0;
};

interface IEspSessionInfoRequest : extends IConstSessionInfoRequest
{
	virtual void setPort_null()=0;
	virtual void setPort(int val)=0;
	virtual void setID(const char * val)=0;
	virtual void copy(IConstSessionInfoRequest &from)=0;
};

interface IClientSessionInfoRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setPort_null()=0;
	virtual void setPort(int val)=0;
	virtual void setID(const char * val)=0;
};



interface IConstSessionInfoResponse : extends IEspResponse
{
	virtual IConstSession & getSession()=0;
};

interface IEspSessionInfoResponse : extends IConstSessionInfoResponse
{
	virtual IEspSession & updateSession()=0;
	virtual void setSession(IConstSession &ifrom)=0;
	virtual void copy(IConstSessionInfoResponse &from)=0;
};

interface IClientSessionInfoResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual IConstSession & getSession()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstCleanSessionRequest : extends IEspRequest
{
	virtual const char * getID()=0;
	virtual const char * getUserID()=0;
	virtual const char * getFromIP()=0;
	virtual bool getAllSessions_isNull()=0;
	virtual bool getAllSessions()=0;
};

interface IEspCleanSessionRequest : extends IConstCleanSessionRequest
{
	virtual void setID(const char * val)=0;
	virtual void setUserID(const char * val)=0;
	virtual void setFromIP(const char * val)=0;
	virtual void setAllSessions_null()=0;
	virtual void setAllSessions(bool val)=0;
	virtual void copy(IConstCleanSessionRequest &from)=0;
};

interface IClientCleanSessionRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setID(const char * val)=0;
	virtual void setUserID(const char * val)=0;
	virtual void setFromIP(const char * val)=0;
	virtual void setAllSessions_null()=0;
	virtual void setAllSessions(bool val)=0;
};



interface IConstCleanSessionResponse : extends IEspResponse
{
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;
};

interface IEspCleanSessionResponse : extends IConstCleanSessionResponse
{
	virtual void setStatus_null()=0;
	virtual void setStatus(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstCleanSessionResponse &from)=0;
};

interface IClientCleanSessionResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstSetSessionTimeoutRequest : extends IEspRequest
{
	virtual const char * getID()=0;
	virtual const char * getUserID()=0;
	virtual const char * getFromIP()=0;
	virtual bool getTimeoutMinutes_isNull()=0;
	virtual int getTimeoutMinutes()=0;
	virtual bool getAllSessions_isNull()=0;
	virtual bool getAllSessions()=0;
};

interface IEspSetSessionTimeoutRequest : extends IConstSetSessionTimeoutRequest
{
	virtual void setID(const char * val)=0;
	virtual void setUserID(const char * val)=0;
	virtual void setFromIP(const char * val)=0;
	virtual void setTimeoutMinutes_null()=0;
	virtual void setTimeoutMinutes(int val)=0;
	virtual void setAllSessions_null()=0;
	virtual void setAllSessions(bool val)=0;
	virtual void copy(IConstSetSessionTimeoutRequest &from)=0;
};

interface IClientSetSessionTimeoutRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setID(const char * val)=0;
	virtual void setUserID(const char * val)=0;
	virtual void setFromIP(const char * val)=0;
	virtual void setTimeoutMinutes_null()=0;
	virtual void setTimeoutMinutes(int val)=0;
	virtual void setAllSessions_null()=0;
	virtual void setAllSessions(bool val)=0;
};



interface IConstSetSessionTimeoutResponse : extends IEspResponse
{
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;
};

interface IEspSetSessionTimeoutResponse : extends IConstSetSessionTimeoutResponse
{
	virtual void setStatus_null()=0;
	virtual void setStatus(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstSetSessionTimeoutResponse &from)=0;
};

interface IClientSetSessionTimeoutResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstDisableDaliSubscriptionsRequest : extends IEspRequest
{
};

interface IEspDisableDaliSubscriptionsRequest : extends IConstDisableDaliSubscriptionsRequest
{
	virtual void copy(IConstDisableDaliSubscriptionsRequest &from)=0;
};

interface IClientDisableDaliSubscriptionsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstDisableDaliSubscriptionsResponse : extends IEspResponse
{
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;
};

interface IEspDisableDaliSubscriptionsResponse : extends IConstDisableDaliSubscriptionsResponse
{
	virtual void setStatus_null()=0;
	virtual void setStatus(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstDisableDaliSubscriptionsResponse &from)=0;
};

interface IClientDisableDaliSubscriptionsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstEnableDaliSubscriptionsRequest : extends IEspRequest
{
};

interface IEspEnableDaliSubscriptionsRequest : extends IConstEnableDaliSubscriptionsRequest
{
	virtual void copy(IConstEnableDaliSubscriptionsRequest &from)=0;
};

interface IClientEnableDaliSubscriptionsRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstEnableDaliSubscriptionsResponse : extends IEspResponse
{
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;
};

interface IEspEnableDaliSubscriptionsResponse : extends IConstEnableDaliSubscriptionsResponse
{
	virtual void setStatus_null()=0;
	virtual void setStatus(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstEnableDaliSubscriptionsResponse &from)=0;
};

interface IClientEnableDaliSubscriptionsResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstDetachFromDaliRequest : extends IEspRequest
{
	virtual bool getForce_isNull()=0;
	virtual bool getForce()=0;
};

interface IEspDetachFromDaliRequest : extends IConstDetachFromDaliRequest
{
	virtual void setForce_null()=0;
	virtual void setForce(bool val)=0;
	virtual void copy(IConstDetachFromDaliRequest &from)=0;
};

interface IClientDetachFromDaliRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

	virtual void setForce_null()=0;
	virtual void setForce(bool val)=0;
};



interface IConstDetachFromDaliResponse : extends IEspResponse
{
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;
	virtual bool getForced_isNull()=0;
	virtual bool getForced()=0;
};

interface IEspDetachFromDaliResponse : extends IConstDetachFromDaliResponse
{
	virtual void setStatus_null()=0;
	virtual void setStatus(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void setForced_null()=0;
	virtual void setForced(bool val)=0;
	virtual void copy(IConstDetachFromDaliResponse &from)=0;
};

interface IClientDetachFromDaliResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;
	virtual bool getForced_isNull()=0;
	virtual bool getForced()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstAttachToDaliRequest : extends IEspRequest
{
};

interface IEspAttachToDaliRequest : extends IConstAttachToDaliRequest
{
	virtual void copy(IConstAttachToDaliRequest &from)=0;
};

interface IClientAttachToDaliRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};



interface IConstAttachToDaliResponse : extends IEspResponse
{
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;
};

interface IEspAttachToDaliResponse : extends IConstAttachToDaliResponse
{
	virtual void setStatus_null()=0;
	virtual void setStatus(int val)=0;
	virtual void setMessage(const char * val)=0;
	virtual void copy(IConstAttachToDaliResponse &from)=0;
};

interface IClientAttachToDaliResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
	virtual bool getStatus_isNull()=0;
	virtual int getStatus()=0;
	virtual const char * getMessage()=0;

	virtual const IMultiException& getExceptions()=0;
};



interface IConstWSESPControlPingRequest : extends IEspRequest
{
};

interface IEspWSESPControlPingRequest : extends IConstWSESPControlPingRequest
{
	virtual void copy(IConstWSESPControlPingRequest &from)=0;
};

interface IClientWSESPControlPingRequest : extends IInterface
{

	virtual IEspClientRpcSettings &rpc() = 0;

};

interface IConstWSESPControlPingResponse : extends IEspResponse
{
};

interface IEspWSESPControlPingResponse : extends IConstWSESPControlPingResponse
{
	virtual void copy(IConstWSESPControlPingResponse &from)=0;
};

interface IClientWSESPControlPingResponse : extends IInterface
{

	virtual int queryClientStatus()=0;
};

interface IEspWSESPControl : extends IEspService
{
	virtual bool onAttachToDali(IEspContext &context, IEspAttachToDaliRequest &req, IEspAttachToDaliResponse &resp)=0;
	virtual bool onCleanSession(IEspContext &context, IEspCleanSessionRequest &req, IEspCleanSessionResponse &resp)=0;
	virtual bool onDetachFromDali(IEspContext &context, IEspDetachFromDaliRequest &req, IEspDetachFromDaliResponse &resp)=0;
	virtual bool onDisableDaliSubscriptions(IEspContext &context, IEspDisableDaliSubscriptionsRequest &req, IEspDisableDaliSubscriptionsResponse &resp)=0;
	virtual bool onEnableDaliSubscriptions(IEspContext &context, IEspEnableDaliSubscriptionsRequest &req, IEspEnableDaliSubscriptionsResponse &resp)=0;
	virtual bool onPing(IEspContext &context, IEspWSESPControlPingRequest &req, IEspWSESPControlPingResponse &resp)=0;
	virtual bool onSessionInfo(IEspContext &context, IEspSessionInfoRequest &req, IEspSessionInfoResponse &resp)=0;
	virtual bool onSessionQuery(IEspContext &context, IEspSessionQueryRequest &req, IEspSessionQueryResponse &resp)=0;
	virtual bool onSetLogging(IEspContext &context, IEspSetLoggingRequest &req, IEspSetLoggingResponse &resp)=0;
	virtual bool onSetSessionTimeout(IEspContext &context, IEspSetSessionTimeoutRequest &req, IEspSetSessionTimeoutResponse &resp)=0;
};

interface IClientWSESPControlEvents : extends IInterface
{
	virtual int onAttachToDaliComplete(IClientAttachToDaliResponse *resp,IInterface* state)=0;
	virtual int onAttachToDaliError(IClientAttachToDaliResponse *resp,IInterface* state)=0;
	virtual int onCleanSessionComplete(IClientCleanSessionResponse *resp,IInterface* state)=0;
	virtual int onCleanSessionError(IClientCleanSessionResponse *resp,IInterface* state)=0;
	virtual int onDetachFromDaliComplete(IClientDetachFromDaliResponse *resp,IInterface* state)=0;
	virtual int onDetachFromDaliError(IClientDetachFromDaliResponse *resp,IInterface* state)=0;
	virtual int onDisableDaliSubscriptionsComplete(IClientDisableDaliSubscriptionsResponse *resp,IInterface* state)=0;
	virtual int onDisableDaliSubscriptionsError(IClientDisableDaliSubscriptionsResponse *resp,IInterface* state)=0;
	virtual int onEnableDaliSubscriptionsComplete(IClientEnableDaliSubscriptionsResponse *resp,IInterface* state)=0;
	virtual int onEnableDaliSubscriptionsError(IClientEnableDaliSubscriptionsResponse *resp,IInterface* state)=0;
	virtual int onPingComplete(IClientWSESPControlPingResponse *resp,IInterface* state)=0;
	virtual int onPingError(IClientWSESPControlPingResponse *resp,IInterface* state)=0;
	virtual int onSessionInfoComplete(IClientSessionInfoResponse *resp,IInterface* state)=0;
	virtual int onSessionInfoError(IClientSessionInfoResponse *resp,IInterface* state)=0;
	virtual int onSessionQueryComplete(IClientSessionQueryResponse *resp,IInterface* state)=0;
	virtual int onSessionQueryError(IClientSessionQueryResponse *resp,IInterface* state)=0;
	virtual int onSetLoggingComplete(IClientSetLoggingResponse *resp,IInterface* state)=0;
	virtual int onSetLoggingError(IClientSetLoggingResponse *resp,IInterface* state)=0;
	virtual int onSetSessionTimeoutComplete(IClientSetSessionTimeoutResponse *resp,IInterface* state)=0;
	virtual int onSetSessionTimeoutError(IClientSetSessionTimeoutResponse *resp,IInterface* state)=0;
};

interface IClientWSESPControl : extends IInterface
{
	virtual void setProxyAddress(const char *address)=0;
	virtual void addServiceUrl(const char *url)=0;
	virtual void removeServiceUrl(const char *url)=0;
	virtual void setUsernameToken(const char *userName,const char *passWord,const char *realm)=0;
	virtual void setAction(const char *action)=0;

	virtual IClientAttachToDaliRequest * createAttachToDaliRequest()=0;
	virtual IClientAttachToDaliResponse * AttachToDali(IClientAttachToDaliRequest *request)=0;
	virtual void async_AttachToDali(IClientAttachToDaliRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientCleanSessionRequest * createCleanSessionRequest()=0;
	virtual IClientCleanSessionResponse * CleanSession(IClientCleanSessionRequest *request)=0;
	virtual void async_CleanSession(IClientCleanSessionRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientDetachFromDaliRequest * createDetachFromDaliRequest()=0;
	virtual IClientDetachFromDaliResponse * DetachFromDali(IClientDetachFromDaliRequest *request)=0;
	virtual void async_DetachFromDali(IClientDetachFromDaliRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientDisableDaliSubscriptionsRequest * createDisableDaliSubscriptionsRequest()=0;
	virtual IClientDisableDaliSubscriptionsResponse * DisableDaliSubscriptions(IClientDisableDaliSubscriptionsRequest *request)=0;
	virtual void async_DisableDaliSubscriptions(IClientDisableDaliSubscriptionsRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientEnableDaliSubscriptionsRequest * createEnableDaliSubscriptionsRequest()=0;
	virtual IClientEnableDaliSubscriptionsResponse * EnableDaliSubscriptions(IClientEnableDaliSubscriptionsRequest *request)=0;
	virtual void async_EnableDaliSubscriptions(IClientEnableDaliSubscriptionsRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientWSESPControlPingRequest * createPingRequest()=0;
	virtual IClientWSESPControlPingResponse * Ping(IClientWSESPControlPingRequest *request)=0;
	virtual void async_Ping(IClientWSESPControlPingRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientSessionInfoRequest * createSessionInfoRequest()=0;
	virtual IClientSessionInfoResponse * SessionInfo(IClientSessionInfoRequest *request)=0;
	virtual void async_SessionInfo(IClientSessionInfoRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientSessionQueryRequest * createSessionQueryRequest()=0;
	virtual IClientSessionQueryResponse * SessionQuery(IClientSessionQueryRequest *request)=0;
	virtual void async_SessionQuery(IClientSessionQueryRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientSetLoggingRequest * createSetLoggingRequest()=0;
	virtual IClientSetLoggingResponse * SetLogging(IClientSetLoggingRequest *request)=0;
	virtual void async_SetLogging(IClientSetLoggingRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;

	virtual IClientSetSessionTimeoutRequest * createSetSessionTimeoutRequest()=0;
	virtual IClientSetSessionTimeoutResponse * SetSessionTimeout(IClientSetSessionTimeoutRequest *request)=0;
	virtual void async_SetSessionTimeout(IClientSetSessionTimeoutRequest *request, IClientWSESPControlEvents *events,IInterface* state=0)=0;


	virtual IClientAttachToDaliResponse *AttachToDaliFn()=0;

	virtual IClientCleanSessionResponse *CleanSessionFn(const char * ID_, const char * UserID_, const char * FromIP_, bool AllSessions_)=0;

	virtual IClientDetachFromDaliResponse *DetachFromDaliFn(bool Force_)=0;

	virtual IClientDisableDaliSubscriptionsResponse *DisableDaliSubscriptionsFn()=0;

	virtual IClientEnableDaliSubscriptionsResponse *EnableDaliSubscriptionsFn()=0;

	virtual IClientWSESPControlPingResponse *PingFn()=0;

	virtual IClientSessionInfoResponse *SessionInfoFn(int Port_, const char * ID_)=0;

	virtual IClientSessionQueryResponse *SessionQueryFn(const char * FromIP_, const char * UserID_)=0;

	virtual IClientSetLoggingResponse *SetLoggingFn(int LoggingLevel_, bool LogRequests_, bool LogResponses_)=0;

	virtual IClientSetSessionTimeoutResponse *SetSessionTimeoutFn(const char * ID_, const char * UserID_, const char * FromIP_, int TimeoutMinutes_, bool AllSessions_)=0;
};



#ifndef WSESPControl_API
#define WSESPControl_API
#endif //WSESPControl_API


extern "C" WSESPControl_API IClientWSESPControl * createWSESPControlClient();

extern "C"  IEspSetLoggingRequest *createSetLoggingRequest(const char *serv=NULL);
extern "C"  IClientSetLoggingRequest *createClientSetLoggingRequest(const char *serv=NULL);
extern "C"  IEspSetLoggingResponse *createSetLoggingResponse(const char *serv=NULL);
extern "C"  IClientSetLoggingResponse *createClientSetLoggingResponse(const char *serv=NULL);
extern "C"  IEspSession *createSession(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IClientSession *createClientSession(const char *serv=NULL, const char *msgname=NULL);
extern "C"  IEspSessionQueryRequest *createSessionQueryRequest(const char *serv=NULL);
extern "C"  IClientSessionQueryRequest *createClientSessionQueryRequest(const char *serv=NULL);
extern "C"  IEspSessionQueryResponse *createSessionQueryResponse(const char *serv=NULL);
extern "C"  IClientSessionQueryResponse *createClientSessionQueryResponse(const char *serv=NULL);
extern "C"  IEspSessionInfoRequest *createSessionInfoRequest(const char *serv=NULL);
extern "C"  IClientSessionInfoRequest *createClientSessionInfoRequest(const char *serv=NULL);
extern "C"  IEspSessionInfoResponse *createSessionInfoResponse(const char *serv=NULL);
extern "C"  IClientSessionInfoResponse *createClientSessionInfoResponse(const char *serv=NULL);
extern "C"  IEspCleanSessionRequest *createCleanSessionRequest(const char *serv=NULL);
extern "C"  IClientCleanSessionRequest *createClientCleanSessionRequest(const char *serv=NULL);
extern "C"  IEspCleanSessionResponse *createCleanSessionResponse(const char *serv=NULL);
extern "C"  IClientCleanSessionResponse *createClientCleanSessionResponse(const char *serv=NULL);
extern "C"  IEspSetSessionTimeoutRequest *createSetSessionTimeoutRequest(const char *serv=NULL);
extern "C"  IClientSetSessionTimeoutRequest *createClientSetSessionTimeoutRequest(const char *serv=NULL);
extern "C"  IEspSetSessionTimeoutResponse *createSetSessionTimeoutResponse(const char *serv=NULL);
extern "C"  IClientSetSessionTimeoutResponse *createClientSetSessionTimeoutResponse(const char *serv=NULL);
extern "C"  IEspDisableDaliSubscriptionsRequest *createDisableDaliSubscriptionsRequest(const char *serv=NULL);
extern "C"  IClientDisableDaliSubscriptionsRequest *createClientDisableDaliSubscriptionsRequest(const char *serv=NULL);
extern "C"  IEspDisableDaliSubscriptionsResponse *createDisableDaliSubscriptionsResponse(const char *serv=NULL);
extern "C"  IClientDisableDaliSubscriptionsResponse *createClientDisableDaliSubscriptionsResponse(const char *serv=NULL);
extern "C"  IEspEnableDaliSubscriptionsRequest *createEnableDaliSubscriptionsRequest(const char *serv=NULL);
extern "C"  IClientEnableDaliSubscriptionsRequest *createClientEnableDaliSubscriptionsRequest(const char *serv=NULL);
extern "C"  IEspEnableDaliSubscriptionsResponse *createEnableDaliSubscriptionsResponse(const char *serv=NULL);
extern "C"  IClientEnableDaliSubscriptionsResponse *createClientEnableDaliSubscriptionsResponse(const char *serv=NULL);
extern "C"  IEspDetachFromDaliRequest *createDetachFromDaliRequest(const char *serv=NULL);
extern "C"  IClientDetachFromDaliRequest *createClientDetachFromDaliRequest(const char *serv=NULL);
extern "C"  IEspDetachFromDaliResponse *createDetachFromDaliResponse(const char *serv=NULL);
extern "C"  IClientDetachFromDaliResponse *createClientDetachFromDaliResponse(const char *serv=NULL);
extern "C"  IEspAttachToDaliRequest *createAttachToDaliRequest(const char *serv=NULL);
extern "C"  IClientAttachToDaliRequest *createClientAttachToDaliRequest(const char *serv=NULL);
extern "C"  IEspAttachToDaliResponse *createAttachToDaliResponse(const char *serv=NULL);
extern "C"  IClientAttachToDaliResponse *createClientAttachToDaliResponse(const char *serv=NULL);
extern "C"  IEspWSESPControlPingRequest *createWSESPControlPingRequest(const char *serv=NULL);
extern "C"  IClientWSESPControlPingRequest *createClientWSESPControlPingRequest(const char *serv=NULL);
extern "C"  IEspWSESPControlPingResponse *createWSESPControlPingResponse(const char *serv=NULL);
extern "C"  IClientWSESPControlPingResponse *createClientWSESPControlPingResponse(const char *serv=NULL);

#endif // _ws_espcontrol_SCM_INCL
//end
