! Clarion SCM Interfaces
! Include file generated by HIDL Version 1.3 from ws_elk.ecm
! *** Not to be hand edited (changes will be lost on re-generation) ***

  OMIT('EndOfInclude',_ws_elk_I_)
_ws_elk_I_ EQUATE(1)

  INCLUDE('SCM.INT'),ONCE

cppClientGetConfigDetailsRequest  INTERFACE(cppInterface),COM
    END



cppClientGetConfigDetailsResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
getIntegrateKibana  PROCEDURE(),boolean,PROC
getKibanaAddress  PROCEDURE(),*CSTRING,PROC
getKibanaPort    PROCEDURE(),*CSTRING,PROC
getKibanaEntryPointURI  PROCEDURE(),*CSTRING,PROC
getReportElasticSearchHealth  PROCEDURE(),boolean,PROC
getElasticSearchAddresses  PROCEDURE(),*CSTRING,PROC
getElasticSearchPort  PROCEDURE(),*CSTRING,PROC
getReportLogStashHealth  PROCEDURE(),boolean,PROC
getLogStashAddress  PROCEDURE(),*CSTRING,PROC
getLogStashPort  PROCEDURE(),*CSTRING,PROC
    END



cppClientws_elkPingRequest  INTERFACE(cppInterface),COM
    END



cppClientws_elkPingResponse  INTERFACE(cppInterface),COM
queryClientStatus  PROCEDURE(),LONG,PROC
    END



cppClientws_elkEvents INTERFACE(cppInterface),COM
onGetConfigDetailsComplete PROCEDURE(*cppClientGetConfigDetailsResponse resp),PROC
onGetConfigDetailsError PROCEDURE(*cppClientGetConfigDetailsResponse resp),PROC
onPingComplete PROCEDURE(*cppClientws_elkPingResponse resp),PROC
onPingError PROCEDURE(*cppClientws_elkPingResponse resp),PROC

 END

cppClientws_elk INTERFACE(cppInterface),COM
setProxyAddress  PROCEDURE(CONST *CSTRING address),PROC
addServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
removeServiceUrl  PROCEDURE(CONST *CSTRING url),PROC
setUsernameToken  PROCEDURE(CONST *CSTRING Username,CONST *CSTRING Password,CONST *CSTRING Realm ),PROC
createGetConfigDetailsRequest  PROCEDURE(),*cppClientGetConfigDetailsRequest,PROC
GetConfigDetails  PROCEDURE(*cppClientGetConfigDetailsRequest request),*cppClientGetConfigDetailsResponse,PROC
async_GetConfigDetails  PROCEDURE(*cppClientGetConfigDetailsRequest request, *cppClientws_elkEvents events,*cppInterface State),PROC
createPingRequest  PROCEDURE(),*cppClientws_elkPingRequest,PROC
Ping  PROCEDURE(*cppClientws_elkPingRequest request),*cppClientws_elkPingResponse,PROC
async_Ping  PROCEDURE(*cppClientws_elkPingRequest request, *cppClientws_elkEvents events,*cppInterface State),PROC

  END




  MAP
    MODULE('ws_elk')
      createws_elkClient (),*cppClientws_elk, pascal, raw, name('_createws_elkClient@0')
    END

  END


EndOfInclude
